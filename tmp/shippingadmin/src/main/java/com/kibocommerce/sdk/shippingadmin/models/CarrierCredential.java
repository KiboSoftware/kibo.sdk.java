/*
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingadmin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.shippingadmin.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.shippingadmin.models.CarrierCredentialSet;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Stores a reference to a Mozu.ShippingAdmin.Contracts.Carriers.CarrierCredentialSet for use at different levels.  Valid levels include Site, Location Group, and Location. Different levels may be used for rates versus labels.  Site level is overriden by Location Group level which is overriden by Location level.
 */
@ApiModel(description = "Stores a reference to a Mozu.ShippingAdmin.Contracts.Carriers.CarrierCredentialSet for use at different levels.  Valid levels include Site, Location Group, and Location. Different levels may be used for rates versus labels.  Site level is overriden by Location Group level which is overriden by Location level.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CarrierCredential implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CARRIER_ID = "carrierId";
  @SerializedName(SERIALIZED_NAME_CARRIER_ID)
  private String carrierId;

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private Integer siteId;

  public static final String SERIALIZED_NAME_LOCATION_GROUP_CODE = "locationGroupCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_GROUP_CODE)
  private String locationGroupCode;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_CREDENTIAL_SET = "credentialSet";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL_SET)
  private CarrierCredentialSet credentialSet;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public CarrierCredential() {
  }

  public CarrierCredential carrierId(String carrierId) {
    
    this.carrierId = carrierId;
    return this;
  }

   /**
   * The Carrier ID associated with this carrier credential.  Usually the short name of a carrier (e.g., \&quot;FedEx\&quot;).
   * @return carrierId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Carrier ID associated with this carrier credential.  Usually the short name of a carrier (e.g., \"FedEx\").")

  public String getCarrierId() {
    return carrierId;
  }


  public void setCarrierId(String carrierId) {
    this.carrierId = carrierId;
  }


  public CarrierCredential siteId(Integer siteId) {
    
    this.siteId = siteId;
    return this;
  }

   /**
   * The Site ID associated with this carrier credential, if any.
   * @return siteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Site ID associated with this carrier credential, if any.")

  public Integer getSiteId() {
    return siteId;
  }


  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }


  public CarrierCredential locationGroupCode(String locationGroupCode) {
    
    this.locationGroupCode = locationGroupCode;
    return this;
  }

   /**
   * The Location Group Code associated with this carrier credential, if any.
   * @return locationGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Location Group Code associated with this carrier credential, if any.")

  public String getLocationGroupCode() {
    return locationGroupCode;
  }


  public void setLocationGroupCode(String locationGroupCode) {
    this.locationGroupCode = locationGroupCode;
  }


  public CarrierCredential locationCode(String locationCode) {
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * The Location Code associated with this carrier credential, if any.
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Location Code associated with this carrier credential, if any.")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    this.locationCode = locationCode;
  }


  public CarrierCredential credentialSet(CarrierCredentialSet credentialSet) {
    
    this.credentialSet = credentialSet;
    return this;
  }

   /**
   * Get credentialSet
   * @return credentialSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CarrierCredentialSet getCredentialSet() {
    return credentialSet;
  }


  public void setCredentialSet(CarrierCredentialSet credentialSet) {
    this.credentialSet = credentialSet;
  }


  public CarrierCredential auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarrierCredential carrierCredential = (CarrierCredential) o;
    return Objects.equals(this.carrierId, carrierCredential.carrierId) &&
        Objects.equals(this.siteId, carrierCredential.siteId) &&
        Objects.equals(this.locationGroupCode, carrierCredential.locationGroupCode) &&
        Objects.equals(this.locationCode, carrierCredential.locationCode) &&
        Objects.equals(this.credentialSet, carrierCredential.credentialSet) &&
        Objects.equals(this.auditInfo, carrierCredential.auditInfo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(carrierId, siteId, locationGroupCode, locationCode, credentialSet, auditInfo);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarrierCredential {\n");
    sb.append("    carrierId: ").append(toIndentedString(carrierId)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    locationGroupCode: ").append(toIndentedString(locationGroupCode)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    credentialSet: ").append(toIndentedString(credentialSet)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("carrierId");
    openapiFields.add("siteId");
    openapiFields.add("locationGroupCode");
    openapiFields.add("locationCode");
    openapiFields.add("credentialSet");
    openapiFields.add("auditInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CarrierCredential
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CarrierCredential.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CarrierCredential is not found in the empty JSON string", CarrierCredential.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CarrierCredential.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CarrierCredential` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("carrierId") != null && !jsonObj.get("carrierId").isJsonNull()) && !jsonObj.get("carrierId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrierId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrierId").toString()));
      }
      if ((jsonObj.get("locationGroupCode") != null && !jsonObj.get("locationGroupCode").isJsonNull()) && !jsonObj.get("locationGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationGroupCode").toString()));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      // validate the optional field `credentialSet`
      if (jsonObj.get("credentialSet") != null && !jsonObj.get("credentialSet").isJsonNull()) {
        CarrierCredentialSet.validateJsonObject(jsonObj.getAsJsonObject("credentialSet"));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CarrierCredential.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CarrierCredential' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CarrierCredential> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CarrierCredential.class));

       return (TypeAdapter<T>) new TypeAdapter<CarrierCredential>() {
           @Override
           public void write(JsonWriter out, CarrierCredential value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CarrierCredential read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CarrierCredential given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CarrierCredential
  * @throws IOException if the JSON string is invalid with respect to CarrierCredential
  */
  public static CarrierCredential fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CarrierCredential.class);
  }

 /**
  * Convert an instance of CarrierCredential to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

