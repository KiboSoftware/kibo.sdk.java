/*
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentAppeasementReason;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * FulfillmentChangeMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FulfillmentChangeMessage implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_APP_KEY = "appKey";
  @SerializedName(SERIALIZED_NAME_APP_KEY)
  private String appKey;

  public static final String SERIALIZED_NAME_APP_NAME = "appName";
  @SerializedName(SERIALIZED_NAME_APP_NAME)
  private String appName;

  public static final String SERIALIZED_NAME_APPEASEMENT_REASON = "appeasementReason";
  @SerializedName(SERIALIZED_NAME_APPEASEMENT_REASON)
  private FulfillmentAppeasementReason appeasementReason;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_CHANGE_MESSAGE_ID = "changeMessageId";
  @SerializedName(SERIALIZED_NAME_CHANGE_MESSAGE_ID)
  private String changeMessageId;

  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlationId";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private String correlationId;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private String metadata;

  public static final String SERIALIZED_NAME_NEW_VALUE = "newValue";
  @SerializedName(SERIALIZED_NAME_NEW_VALUE)
  private String newValue;

  public static final String SERIALIZED_NAME_OLD_VALUE = "oldValue";
  @SerializedName(SERIALIZED_NAME_OLD_VALUE)
  private String oldValue;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_SUBJECT_TYPE = "subjectType";
  @SerializedName(SERIALIZED_NAME_SUBJECT_TYPE)
  private String subjectType;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_USER_DISPLAY_NAME = "userDisplayName";
  @SerializedName(SERIALIZED_NAME_USER_DISPLAY_NAME)
  private String userDisplayName;

  public static final String SERIALIZED_NAME_USER_FIRST_NAME = "userFirstName";
  @SerializedName(SERIALIZED_NAME_USER_FIRST_NAME)
  private String userFirstName;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_USER_LAST_NAME = "userLastName";
  @SerializedName(SERIALIZED_NAME_USER_LAST_NAME)
  private String userLastName;

  public static final String SERIALIZED_NAME_VERB = "verb";
  @SerializedName(SERIALIZED_NAME_VERB)
  private String verb;

  public FulfillmentChangeMessage() {
  }

  public FulfillmentChangeMessage amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public FulfillmentChangeMessage appId(String appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * Get appId
   * @return appId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  public FulfillmentChangeMessage appKey(String appKey) {
    
    this.appKey = appKey;
    return this;
  }

   /**
   * Get appKey
   * @return appKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppKey() {
    return appKey;
  }


  public void setAppKey(String appKey) {
    this.appKey = appKey;
  }


  public FulfillmentChangeMessage appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * Get appName
   * @return appName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppName() {
    return appName;
  }


  public void setAppName(String appName) {
    this.appName = appName;
  }


  public FulfillmentChangeMessage appeasementReason(FulfillmentAppeasementReason appeasementReason) {
    
    this.appeasementReason = appeasementReason;
    return this;
  }

   /**
   * Get appeasementReason
   * @return appeasementReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentAppeasementReason getAppeasementReason() {
    return appeasementReason;
  }


  public void setAppeasementReason(FulfillmentAppeasementReason appeasementReason) {
    this.appeasementReason = appeasementReason;
  }


  public FulfillmentChangeMessage attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public FulfillmentChangeMessage putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public FulfillmentChangeMessage changeMessageId(String changeMessageId) {
    
    this.changeMessageId = changeMessageId;
    return this;
  }

   /**
   * Get changeMessageId
   * @return changeMessageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChangeMessageId() {
    return changeMessageId;
  }


  public void setChangeMessageId(String changeMessageId) {
    this.changeMessageId = changeMessageId;
  }


  public FulfillmentChangeMessage correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

   /**
   * Get correlationId
   * @return correlationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCorrelationId() {
    return correlationId;
  }


  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public FulfillmentChangeMessage createdDate(OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public FulfillmentChangeMessage identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIdentifier() {
    return identifier;
  }


  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public FulfillmentChangeMessage message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public FulfillmentChangeMessage metadata(String metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMetadata() {
    return metadata;
  }


  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }


  public FulfillmentChangeMessage newValue(String newValue) {
    
    this.newValue = newValue;
    return this;
  }

   /**
   * Get newValue
   * @return newValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNewValue() {
    return newValue;
  }


  public void setNewValue(String newValue) {
    this.newValue = newValue;
  }


  public FulfillmentChangeMessage oldValue(String oldValue) {
    
    this.oldValue = oldValue;
    return this;
  }

   /**
   * Get oldValue
   * @return oldValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOldValue() {
    return oldValue;
  }


  public void setOldValue(String oldValue) {
    this.oldValue = oldValue;
  }


  public FulfillmentChangeMessage subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  public FulfillmentChangeMessage subjectType(String subjectType) {
    
    this.subjectType = subjectType;
    return this;
  }

   /**
   * Get subjectType
   * @return subjectType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubjectType() {
    return subjectType;
  }


  public void setSubjectType(String subjectType) {
    this.subjectType = subjectType;
  }


  public FulfillmentChangeMessage success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public FulfillmentChangeMessage userDisplayName(String userDisplayName) {
    
    this.userDisplayName = userDisplayName;
    return this;
  }

   /**
   * Get userDisplayName
   * @return userDisplayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDisplayName() {
    return userDisplayName;
  }


  public void setUserDisplayName(String userDisplayName) {
    this.userDisplayName = userDisplayName;
  }


  public FulfillmentChangeMessage userFirstName(String userFirstName) {
    
    this.userFirstName = userFirstName;
    return this;
  }

   /**
   * Get userFirstName
   * @return userFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserFirstName() {
    return userFirstName;
  }


  public void setUserFirstName(String userFirstName) {
    this.userFirstName = userFirstName;
  }


  public FulfillmentChangeMessage userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public FulfillmentChangeMessage userLastName(String userLastName) {
    
    this.userLastName = userLastName;
    return this;
  }

   /**
   * Get userLastName
   * @return userLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserLastName() {
    return userLastName;
  }


  public void setUserLastName(String userLastName) {
    this.userLastName = userLastName;
  }


  public FulfillmentChangeMessage verb(String verb) {
    
    this.verb = verb;
    return this;
  }

   /**
   * Get verb
   * @return verb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVerb() {
    return verb;
  }


  public void setVerb(String verb) {
    this.verb = verb;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FulfillmentChangeMessage fulfillmentChangeMessage = (FulfillmentChangeMessage) o;
    return Objects.equals(this.amount, fulfillmentChangeMessage.amount) &&
        Objects.equals(this.appId, fulfillmentChangeMessage.appId) &&
        Objects.equals(this.appKey, fulfillmentChangeMessage.appKey) &&
        Objects.equals(this.appName, fulfillmentChangeMessage.appName) &&
        Objects.equals(this.appeasementReason, fulfillmentChangeMessage.appeasementReason) &&
        Objects.equals(this.attributes, fulfillmentChangeMessage.attributes) &&
        Objects.equals(this.changeMessageId, fulfillmentChangeMessage.changeMessageId) &&
        Objects.equals(this.correlationId, fulfillmentChangeMessage.correlationId) &&
        Objects.equals(this.createdDate, fulfillmentChangeMessage.createdDate) &&
        Objects.equals(this.identifier, fulfillmentChangeMessage.identifier) &&
        Objects.equals(this.message, fulfillmentChangeMessage.message) &&
        Objects.equals(this.metadata, fulfillmentChangeMessage.metadata) &&
        Objects.equals(this.newValue, fulfillmentChangeMessage.newValue) &&
        Objects.equals(this.oldValue, fulfillmentChangeMessage.oldValue) &&
        Objects.equals(this.subject, fulfillmentChangeMessage.subject) &&
        Objects.equals(this.subjectType, fulfillmentChangeMessage.subjectType) &&
        Objects.equals(this.success, fulfillmentChangeMessage.success) &&
        Objects.equals(this.userDisplayName, fulfillmentChangeMessage.userDisplayName) &&
        Objects.equals(this.userFirstName, fulfillmentChangeMessage.userFirstName) &&
        Objects.equals(this.userId, fulfillmentChangeMessage.userId) &&
        Objects.equals(this.userLastName, fulfillmentChangeMessage.userLastName) &&
        Objects.equals(this.verb, fulfillmentChangeMessage.verb);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, appId, appKey, appName, appeasementReason, attributes, changeMessageId, correlationId, createdDate, identifier, message, metadata, newValue, oldValue, subject, subjectType, success, userDisplayName, userFirstName, userId, userLastName, verb);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FulfillmentChangeMessage {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appKey: ").append(toIndentedString(appKey)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    appeasementReason: ").append(toIndentedString(appeasementReason)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    changeMessageId: ").append(toIndentedString(changeMessageId)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    subjectType: ").append(toIndentedString(subjectType)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    userDisplayName: ").append(toIndentedString(userDisplayName)).append("\n");
    sb.append("    userFirstName: ").append(toIndentedString(userFirstName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userLastName: ").append(toIndentedString(userLastName)).append("\n");
    sb.append("    verb: ").append(toIndentedString(verb)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("appId");
    openapiFields.add("appKey");
    openapiFields.add("appName");
    openapiFields.add("appeasementReason");
    openapiFields.add("attributes");
    openapiFields.add("changeMessageId");
    openapiFields.add("correlationId");
    openapiFields.add("createdDate");
    openapiFields.add("identifier");
    openapiFields.add("message");
    openapiFields.add("metadata");
    openapiFields.add("newValue");
    openapiFields.add("oldValue");
    openapiFields.add("subject");
    openapiFields.add("subjectType");
    openapiFields.add("success");
    openapiFields.add("userDisplayName");
    openapiFields.add("userFirstName");
    openapiFields.add("userId");
    openapiFields.add("userLastName");
    openapiFields.add("verb");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FulfillmentChangeMessage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FulfillmentChangeMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FulfillmentChangeMessage is not found in the empty JSON string", FulfillmentChangeMessage.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!FulfillmentChangeMessage.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FulfillmentChangeMessage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      if ((jsonObj.get("appKey") != null && !jsonObj.get("appKey").isJsonNull()) && !jsonObj.get("appKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appKey").toString()));
      }
      if ((jsonObj.get("appName") != null && !jsonObj.get("appName").isJsonNull()) && !jsonObj.get("appName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appName").toString()));
      }
      // validate the optional field `appeasementReason`
      if (jsonObj.get("appeasementReason") != null && !jsonObj.get("appeasementReason").isJsonNull()) {
        FulfillmentAppeasementReason.validateJsonObject(jsonObj.getAsJsonObject("appeasementReason"));
      }
      if ((jsonObj.get("changeMessageId") != null && !jsonObj.get("changeMessageId").isJsonNull()) && !jsonObj.get("changeMessageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `changeMessageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("changeMessageId").toString()));
      }
      if ((jsonObj.get("correlationId") != null && !jsonObj.get("correlationId").isJsonNull()) && !jsonObj.get("correlationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correlationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correlationId").toString()));
      }
      if ((jsonObj.get("identifier") != null && !jsonObj.get("identifier").isJsonNull()) && !jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) && !jsonObj.get("metadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
      }
      if ((jsonObj.get("newValue") != null && !jsonObj.get("newValue").isJsonNull()) && !jsonObj.get("newValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newValue").toString()));
      }
      if ((jsonObj.get("oldValue") != null && !jsonObj.get("oldValue").isJsonNull()) && !jsonObj.get("oldValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldValue").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      if ((jsonObj.get("subjectType") != null && !jsonObj.get("subjectType").isJsonNull()) && !jsonObj.get("subjectType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subjectType").toString()));
      }
      if ((jsonObj.get("userDisplayName") != null && !jsonObj.get("userDisplayName").isJsonNull()) && !jsonObj.get("userDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDisplayName").toString()));
      }
      if ((jsonObj.get("userFirstName") != null && !jsonObj.get("userFirstName").isJsonNull()) && !jsonObj.get("userFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userFirstName").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("userLastName") != null && !jsonObj.get("userLastName").isJsonNull()) && !jsonObj.get("userLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userLastName").toString()));
      }
      if ((jsonObj.get("verb") != null && !jsonObj.get("verb").isJsonNull()) && !jsonObj.get("verb").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verb` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verb").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FulfillmentChangeMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FulfillmentChangeMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FulfillmentChangeMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FulfillmentChangeMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<FulfillmentChangeMessage>() {
           @Override
           public void write(JsonWriter out, FulfillmentChangeMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FulfillmentChangeMessage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FulfillmentChangeMessage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FulfillmentChangeMessage
  * @throws IOException if the JSON string is invalid with respect to FulfillmentChangeMessage
  */
  public static FulfillmentChangeMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FulfillmentChangeMessage.class);
  }

 /**
  * Convert an instance of FulfillmentChangeMessage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

