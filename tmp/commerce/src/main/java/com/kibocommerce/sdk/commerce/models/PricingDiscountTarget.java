/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * PricingDiscountTarget
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PricingDiscountTarget implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_INCLUDED_CATEGORY_IDS = "includedCategoryIds";
  @SerializedName(SERIALIZED_NAME_INCLUDED_CATEGORY_IDS)
  private List<Integer> includedCategoryIds = null;

  public static final String SERIALIZED_NAME_EXCLUDED_CATEGORY_IDS = "excludedCategoryIds";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_CATEGORY_IDS)
  private List<Integer> excludedCategoryIds = null;

  public static final String SERIALIZED_NAME_INCLUDED_CATEGORIES_OPERATOR = "includedCategoriesOperator";
  @SerializedName(SERIALIZED_NAME_INCLUDED_CATEGORIES_OPERATOR)
  private String includedCategoriesOperator;

  public static final String SERIALIZED_NAME_EXCLUDED_CATEGORIES_OPERATOR = "excludedCategoriesOperator";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_CATEGORIES_OPERATOR)
  private String excludedCategoriesOperator;

  public static final String SERIALIZED_NAME_INCLUDED_PRODUCT_CODES = "includedProductCodes";
  @SerializedName(SERIALIZED_NAME_INCLUDED_PRODUCT_CODES)
  private List<String> includedProductCodes = null;

  public static final String SERIALIZED_NAME_EXCLUDED_PRODUCT_CODES = "excludedProductCodes";
  @SerializedName(SERIALIZED_NAME_EXCLUDED_PRODUCT_CODES)
  private List<String> excludedProductCodes = null;

  public static final String SERIALIZED_NAME_INCLUDE_ALL_PRODUCTS = "includeAllProducts";
  @SerializedName(SERIALIZED_NAME_INCLUDE_ALL_PRODUCTS)
  private Boolean includeAllProducts;

  public static final String SERIALIZED_NAME_SHIPPING_METHODS = "shippingMethods";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHODS)
  private List<String> shippingMethods = null;

  public static final String SERIALIZED_NAME_SHIPPING_ZONES = "shippingZones";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ZONES)
  private List<String> shippingZones = null;

  public PricingDiscountTarget() {
  }

  public PricingDiscountTarget type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public PricingDiscountTarget includedCategoryIds(List<Integer> includedCategoryIds) {
    
    this.includedCategoryIds = includedCategoryIds;
    return this;
  }

  public PricingDiscountTarget addIncludedCategoryIdsItem(Integer includedCategoryIdsItem) {
    if (this.includedCategoryIds == null) {
      this.includedCategoryIds = new ArrayList<>();
    }
    this.includedCategoryIds.add(includedCategoryIdsItem);
    return this;
  }

   /**
   * Get includedCategoryIds
   * @return includedCategoryIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getIncludedCategoryIds() {
    return includedCategoryIds;
  }


  public void setIncludedCategoryIds(List<Integer> includedCategoryIds) {
    this.includedCategoryIds = includedCategoryIds;
  }


  public PricingDiscountTarget excludedCategoryIds(List<Integer> excludedCategoryIds) {
    
    this.excludedCategoryIds = excludedCategoryIds;
    return this;
  }

  public PricingDiscountTarget addExcludedCategoryIdsItem(Integer excludedCategoryIdsItem) {
    if (this.excludedCategoryIds == null) {
      this.excludedCategoryIds = new ArrayList<>();
    }
    this.excludedCategoryIds.add(excludedCategoryIdsItem);
    return this;
  }

   /**
   * Get excludedCategoryIds
   * @return excludedCategoryIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getExcludedCategoryIds() {
    return excludedCategoryIds;
  }


  public void setExcludedCategoryIds(List<Integer> excludedCategoryIds) {
    this.excludedCategoryIds = excludedCategoryIds;
  }


  public PricingDiscountTarget includedCategoriesOperator(String includedCategoriesOperator) {
    
    this.includedCategoriesOperator = includedCategoriesOperator;
    return this;
  }

   /**
   * Get includedCategoriesOperator
   * @return includedCategoriesOperator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIncludedCategoriesOperator() {
    return includedCategoriesOperator;
  }


  public void setIncludedCategoriesOperator(String includedCategoriesOperator) {
    this.includedCategoriesOperator = includedCategoriesOperator;
  }


  public PricingDiscountTarget excludedCategoriesOperator(String excludedCategoriesOperator) {
    
    this.excludedCategoriesOperator = excludedCategoriesOperator;
    return this;
  }

   /**
   * Get excludedCategoriesOperator
   * @return excludedCategoriesOperator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExcludedCategoriesOperator() {
    return excludedCategoriesOperator;
  }


  public void setExcludedCategoriesOperator(String excludedCategoriesOperator) {
    this.excludedCategoriesOperator = excludedCategoriesOperator;
  }


  public PricingDiscountTarget includedProductCodes(List<String> includedProductCodes) {
    
    this.includedProductCodes = includedProductCodes;
    return this;
  }

  public PricingDiscountTarget addIncludedProductCodesItem(String includedProductCodesItem) {
    if (this.includedProductCodes == null) {
      this.includedProductCodes = new ArrayList<>();
    }
    this.includedProductCodes.add(includedProductCodesItem);
    return this;
  }

   /**
   * Get includedProductCodes
   * @return includedProductCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getIncludedProductCodes() {
    return includedProductCodes;
  }


  public void setIncludedProductCodes(List<String> includedProductCodes) {
    this.includedProductCodes = includedProductCodes;
  }


  public PricingDiscountTarget excludedProductCodes(List<String> excludedProductCodes) {
    
    this.excludedProductCodes = excludedProductCodes;
    return this;
  }

  public PricingDiscountTarget addExcludedProductCodesItem(String excludedProductCodesItem) {
    if (this.excludedProductCodes == null) {
      this.excludedProductCodes = new ArrayList<>();
    }
    this.excludedProductCodes.add(excludedProductCodesItem);
    return this;
  }

   /**
   * Get excludedProductCodes
   * @return excludedProductCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getExcludedProductCodes() {
    return excludedProductCodes;
  }


  public void setExcludedProductCodes(List<String> excludedProductCodes) {
    this.excludedProductCodes = excludedProductCodes;
  }


  public PricingDiscountTarget includeAllProducts(Boolean includeAllProducts) {
    
    this.includeAllProducts = includeAllProducts;
    return this;
  }

   /**
   * Get includeAllProducts
   * @return includeAllProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeAllProducts() {
    return includeAllProducts;
  }


  public void setIncludeAllProducts(Boolean includeAllProducts) {
    this.includeAllProducts = includeAllProducts;
  }


  public PricingDiscountTarget shippingMethods(List<String> shippingMethods) {
    
    this.shippingMethods = shippingMethods;
    return this;
  }

  public PricingDiscountTarget addShippingMethodsItem(String shippingMethodsItem) {
    if (this.shippingMethods == null) {
      this.shippingMethods = new ArrayList<>();
    }
    this.shippingMethods.add(shippingMethodsItem);
    return this;
  }

   /**
   * Get shippingMethods
   * @return shippingMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getShippingMethods() {
    return shippingMethods;
  }


  public void setShippingMethods(List<String> shippingMethods) {
    this.shippingMethods = shippingMethods;
  }


  public PricingDiscountTarget shippingZones(List<String> shippingZones) {
    
    this.shippingZones = shippingZones;
    return this;
  }

  public PricingDiscountTarget addShippingZonesItem(String shippingZonesItem) {
    if (this.shippingZones == null) {
      this.shippingZones = new ArrayList<>();
    }
    this.shippingZones.add(shippingZonesItem);
    return this;
  }

   /**
   * Get shippingZones
   * @return shippingZones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getShippingZones() {
    return shippingZones;
  }


  public void setShippingZones(List<String> shippingZones) {
    this.shippingZones = shippingZones;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PricingDiscountTarget pricingDiscountTarget = (PricingDiscountTarget) o;
    return Objects.equals(this.type, pricingDiscountTarget.type) &&
        Objects.equals(this.includedCategoryIds, pricingDiscountTarget.includedCategoryIds) &&
        Objects.equals(this.excludedCategoryIds, pricingDiscountTarget.excludedCategoryIds) &&
        Objects.equals(this.includedCategoriesOperator, pricingDiscountTarget.includedCategoriesOperator) &&
        Objects.equals(this.excludedCategoriesOperator, pricingDiscountTarget.excludedCategoriesOperator) &&
        Objects.equals(this.includedProductCodes, pricingDiscountTarget.includedProductCodes) &&
        Objects.equals(this.excludedProductCodes, pricingDiscountTarget.excludedProductCodes) &&
        Objects.equals(this.includeAllProducts, pricingDiscountTarget.includeAllProducts) &&
        Objects.equals(this.shippingMethods, pricingDiscountTarget.shippingMethods) &&
        Objects.equals(this.shippingZones, pricingDiscountTarget.shippingZones);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, includedCategoryIds, excludedCategoryIds, includedCategoriesOperator, excludedCategoriesOperator, includedProductCodes, excludedProductCodes, includeAllProducts, shippingMethods, shippingZones);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PricingDiscountTarget {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    includedCategoryIds: ").append(toIndentedString(includedCategoryIds)).append("\n");
    sb.append("    excludedCategoryIds: ").append(toIndentedString(excludedCategoryIds)).append("\n");
    sb.append("    includedCategoriesOperator: ").append(toIndentedString(includedCategoriesOperator)).append("\n");
    sb.append("    excludedCategoriesOperator: ").append(toIndentedString(excludedCategoriesOperator)).append("\n");
    sb.append("    includedProductCodes: ").append(toIndentedString(includedProductCodes)).append("\n");
    sb.append("    excludedProductCodes: ").append(toIndentedString(excludedProductCodes)).append("\n");
    sb.append("    includeAllProducts: ").append(toIndentedString(includeAllProducts)).append("\n");
    sb.append("    shippingMethods: ").append(toIndentedString(shippingMethods)).append("\n");
    sb.append("    shippingZones: ").append(toIndentedString(shippingZones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("type");
    openapiFields.add("includedCategoryIds");
    openapiFields.add("excludedCategoryIds");
    openapiFields.add("includedCategoriesOperator");
    openapiFields.add("excludedCategoriesOperator");
    openapiFields.add("includedProductCodes");
    openapiFields.add("excludedProductCodes");
    openapiFields.add("includeAllProducts");
    openapiFields.add("shippingMethods");
    openapiFields.add("shippingZones");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PricingDiscountTarget
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PricingDiscountTarget.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PricingDiscountTarget is not found in the empty JSON string", PricingDiscountTarget.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!PricingDiscountTarget.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PricingDiscountTarget` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("includedCategoryIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includedCategoryIds` to be an array in the JSON string but got `%s`", jsonObj.get("includedCategoryIds").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("excludedCategoryIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedCategoryIds` to be an array in the JSON string but got `%s`", jsonObj.get("excludedCategoryIds").toString()));
      }
      if ((jsonObj.get("includedCategoriesOperator") != null && !jsonObj.get("includedCategoriesOperator").isJsonNull()) && !jsonObj.get("includedCategoriesOperator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `includedCategoriesOperator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("includedCategoriesOperator").toString()));
      }
      if ((jsonObj.get("excludedCategoriesOperator") != null && !jsonObj.get("excludedCategoriesOperator").isJsonNull()) && !jsonObj.get("excludedCategoriesOperator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedCategoriesOperator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("excludedCategoriesOperator").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("includedProductCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includedProductCodes` to be an array in the JSON string but got `%s`", jsonObj.get("includedProductCodes").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("excludedProductCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludedProductCodes` to be an array in the JSON string but got `%s`", jsonObj.get("excludedProductCodes").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("shippingMethods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethods` to be an array in the JSON string but got `%s`", jsonObj.get("shippingMethods").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("shippingZones").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingZones` to be an array in the JSON string but got `%s`", jsonObj.get("shippingZones").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PricingDiscountTarget.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PricingDiscountTarget' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PricingDiscountTarget> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PricingDiscountTarget.class));

       return (TypeAdapter<T>) new TypeAdapter<PricingDiscountTarget>() {
           @Override
           public void write(JsonWriter out, PricingDiscountTarget value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PricingDiscountTarget read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PricingDiscountTarget given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PricingDiscountTarget
  * @throws IOException if the JSON string is invalid with respect to PricingDiscountTarget
  */
  public static PricingDiscountTarget fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PricingDiscountTarget.class);
  }

 /**
  * Convert an instance of PricingDiscountTarget to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

