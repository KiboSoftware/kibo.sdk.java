/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeDiscount;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Discount applied to the order, which is a negative number to be subtracted from the original price to get the final price.   If multiple discounts for the order exist, this is the value most advantageous to the shopper.
 */
@ApiModel(description = "Discount applied to the order, which is a negative number to be subtracted from the original price to get the final price.   If multiple discounts for the order exist, this is the value most advantageous to the shopper.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimeAppliedDiscount implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_IMPACT = "impact";
  @SerializedName(SERIALIZED_NAME_IMPACT)
  private Double impact;

  public static final String SERIALIZED_NAME_DISCOUNT = "discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private CommerceRuntimeDiscount discount;

  public static final String SERIALIZED_NAME_COUPON_CODE = "couponCode";
  @SerializedName(SERIALIZED_NAME_COUPON_CODE)
  private String couponCode;

  public static final String SERIALIZED_NAME_EXCLUDED = "excluded";
  @SerializedName(SERIALIZED_NAME_EXCLUDED)
  private Boolean excluded;

  public CommerceRuntimeAppliedDiscount() {
  }

  public CommerceRuntimeAppliedDiscount impact(Double impact) {
    
    this.impact = impact;
    return this;
  }

   /**
   * Value of the discount applied. This is a negative number to be subtracted from the original price to get the final price.
   * @return impact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Value of the discount applied. This is a negative number to be subtracted from the original price to get the final price.")

  public Double getImpact() {
    return impact;
  }


  public void setImpact(Double impact) {
    this.impact = impact;
  }


  public CommerceRuntimeAppliedDiscount discount(CommerceRuntimeDiscount discount) {
    
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeDiscount getDiscount() {
    return discount;
  }


  public void setDiscount(CommerceRuntimeDiscount discount) {
    this.discount = discount;
  }


  public CommerceRuntimeAppliedDiscount couponCode(String couponCode) {
    
    this.couponCode = couponCode;
    return this;
  }

   /**
   * Code of the coupon associated with the discount if a coupon code is required to get the discount.
   * @return couponCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code of the coupon associated with the discount if a coupon code is required to get the discount.")

  public String getCouponCode() {
    return couponCode;
  }


  public void setCouponCode(String couponCode) {
    this.couponCode = couponCode;
  }


  public CommerceRuntimeAppliedDiscount excluded(Boolean excluded) {
    
    this.excluded = excluded;
    return this;
  }

   /**
   * Determines whether or not this discount is set up to be ignored by the pricing runtime.
   * @return excluded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines whether or not this discount is set up to be ignored by the pricing runtime.")

  public Boolean getExcluded() {
    return excluded;
  }


  public void setExcluded(Boolean excluded) {
    this.excluded = excluded;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimeAppliedDiscount commerceRuntimeAppliedDiscount = (CommerceRuntimeAppliedDiscount) o;
    return Objects.equals(this.impact, commerceRuntimeAppliedDiscount.impact) &&
        Objects.equals(this.discount, commerceRuntimeAppliedDiscount.discount) &&
        Objects.equals(this.couponCode, commerceRuntimeAppliedDiscount.couponCode) &&
        Objects.equals(this.excluded, commerceRuntimeAppliedDiscount.excluded);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(impact, discount, couponCode, excluded);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimeAppliedDiscount {\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    couponCode: ").append(toIndentedString(couponCode)).append("\n");
    sb.append("    excluded: ").append(toIndentedString(excluded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("impact");
    openapiFields.add("discount");
    openapiFields.add("couponCode");
    openapiFields.add("excluded");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimeAppliedDiscount
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimeAppliedDiscount.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimeAppliedDiscount is not found in the empty JSON string", CommerceRuntimeAppliedDiscount.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimeAppliedDiscount.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimeAppliedDiscount` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `discount`
      if (jsonObj.get("discount") != null && !jsonObj.get("discount").isJsonNull()) {
        CommerceRuntimeDiscount.validateJsonObject(jsonObj.getAsJsonObject("discount"));
      }
      if ((jsonObj.get("couponCode") != null && !jsonObj.get("couponCode").isJsonNull()) && !jsonObj.get("couponCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `couponCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("couponCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimeAppliedDiscount.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimeAppliedDiscount' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimeAppliedDiscount> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimeAppliedDiscount.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimeAppliedDiscount>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimeAppliedDiscount value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimeAppliedDiscount read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimeAppliedDiscount given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimeAppliedDiscount
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimeAppliedDiscount
  */
  public static CommerceRuntimeAppliedDiscount fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimeAppliedDiscount.class);
  }

 /**
  * Convert an instance of CommerceRuntimeAppliedDiscount to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

