/*
 * Kibo ShippingRuntime Service
 * OpenAPI Spec for Kibo ShippingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingstorefront.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.shippingstorefront.models.CustomAttribute;
import com.kibocommerce.sdk.shippingstorefront.models.ShippingItemRate;
import com.kibocommerce.sdk.shippingstorefront.models.ShippingRateLocalizedContent;
import com.kibocommerce.sdk.shippingstorefront.models.ShippingRateValidationMessage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * ShippingRuntimeShippingRate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ShippingRuntimeShippingRate implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private ShippingRateLocalizedContent content;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_DAYS_IN_TRANSIT = "daysInTransit";
  @SerializedName(SERIALIZED_NAME_DAYS_IN_TRANSIT)
  private Integer daysInTransit;

  public static final String SERIALIZED_NAME_SHIPPING_ITEM_RATES = "shippingItemRates";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ITEM_RATES)
  private List<ShippingItemRate> shippingItemRates = null;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "customAttributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private List<CustomAttribute> customAttributes = null;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<ShippingRateValidationMessage> messages = null;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data;

  public ShippingRuntimeShippingRate() {
  }

  public ShippingRuntimeShippingRate code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public ShippingRuntimeShippingRate content(ShippingRateLocalizedContent content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShippingRateLocalizedContent getContent() {
    return content;
  }


  public void setContent(ShippingRateLocalizedContent content) {
    this.content = content;
  }


  public ShippingRuntimeShippingRate amount(Double amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAmount() {
    return amount;
  }


  public void setAmount(Double amount) {
    this.amount = amount;
  }


  public ShippingRuntimeShippingRate daysInTransit(Integer daysInTransit) {
    
    this.daysInTransit = daysInTransit;
    return this;
  }

   /**
   * Get daysInTransit
   * @return daysInTransit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDaysInTransit() {
    return daysInTransit;
  }


  public void setDaysInTransit(Integer daysInTransit) {
    this.daysInTransit = daysInTransit;
  }


  public ShippingRuntimeShippingRate shippingItemRates(List<ShippingItemRate> shippingItemRates) {
    
    this.shippingItemRates = shippingItemRates;
    return this;
  }

  public ShippingRuntimeShippingRate addShippingItemRatesItem(ShippingItemRate shippingItemRatesItem) {
    if (this.shippingItemRates == null) {
      this.shippingItemRates = new ArrayList<>();
    }
    this.shippingItemRates.add(shippingItemRatesItem);
    return this;
  }

   /**
   * Get shippingItemRates
   * @return shippingItemRates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ShippingItemRate> getShippingItemRates() {
    return shippingItemRates;
  }


  public void setShippingItemRates(List<ShippingItemRate> shippingItemRates) {
    this.shippingItemRates = shippingItemRates;
  }


  public ShippingRuntimeShippingRate customAttributes(List<CustomAttribute> customAttributes) {
    
    this.customAttributes = customAttributes;
    return this;
  }

  public ShippingRuntimeShippingRate addCustomAttributesItem(CustomAttribute customAttributesItem) {
    if (this.customAttributes == null) {
      this.customAttributes = new ArrayList<>();
    }
    this.customAttributes.add(customAttributesItem);
    return this;
  }

   /**
   * Get customAttributes
   * @return customAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomAttribute> getCustomAttributes() {
    return customAttributes;
  }


  public void setCustomAttributes(List<CustomAttribute> customAttributes) {
    this.customAttributes = customAttributes;
  }


  public ShippingRuntimeShippingRate messages(List<ShippingRateValidationMessage> messages) {
    
    this.messages = messages;
    return this;
  }

  public ShippingRuntimeShippingRate addMessagesItem(ShippingRateValidationMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ShippingRateValidationMessage> getMessages() {
    return messages;
  }


  public void setMessages(List<ShippingRateValidationMessage> messages) {
    this.messages = messages;
  }


  public ShippingRuntimeShippingRate data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getData() {
    return data;
  }


  public void setData(Object data) {
    this.data = data;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingRuntimeShippingRate shippingRuntimeShippingRate = (ShippingRuntimeShippingRate) o;
    return Objects.equals(this.code, shippingRuntimeShippingRate.code) &&
        Objects.equals(this.content, shippingRuntimeShippingRate.content) &&
        Objects.equals(this.amount, shippingRuntimeShippingRate.amount) &&
        Objects.equals(this.daysInTransit, shippingRuntimeShippingRate.daysInTransit) &&
        Objects.equals(this.shippingItemRates, shippingRuntimeShippingRate.shippingItemRates) &&
        Objects.equals(this.customAttributes, shippingRuntimeShippingRate.customAttributes) &&
        Objects.equals(this.messages, shippingRuntimeShippingRate.messages) &&
        Objects.equals(this.data, shippingRuntimeShippingRate.data);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, content, amount, daysInTransit, shippingItemRates, customAttributes, messages, data);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingRuntimeShippingRate {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    daysInTransit: ").append(toIndentedString(daysInTransit)).append("\n");
    sb.append("    shippingItemRates: ").append(toIndentedString(shippingItemRates)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("content");
    openapiFields.add("amount");
    openapiFields.add("daysInTransit");
    openapiFields.add("shippingItemRates");
    openapiFields.add("customAttributes");
    openapiFields.add("messages");
    openapiFields.add("data");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ShippingRuntimeShippingRate
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ShippingRuntimeShippingRate.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShippingRuntimeShippingRate is not found in the empty JSON string", ShippingRuntimeShippingRate.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ShippingRuntimeShippingRate.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShippingRuntimeShippingRate` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      // validate the optional field `content`
      if (jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) {
        ShippingRateLocalizedContent.validateJsonObject(jsonObj.getAsJsonObject("content"));
      }
      if (jsonObj.get("shippingItemRates") != null && !jsonObj.get("shippingItemRates").isJsonNull()) {
        JsonArray jsonArrayshippingItemRates = jsonObj.getAsJsonArray("shippingItemRates");
        if (jsonArrayshippingItemRates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shippingItemRates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shippingItemRates` to be an array in the JSON string but got `%s`", jsonObj.get("shippingItemRates").toString()));
          }

          // validate the optional field `shippingItemRates` (array)
          for (int i = 0; i < jsonArrayshippingItemRates.size(); i++) {
            ShippingItemRate.validateJsonObject(jsonArrayshippingItemRates.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customAttributes") != null && !jsonObj.get("customAttributes").isJsonNull()) {
        JsonArray jsonArraycustomAttributes = jsonObj.getAsJsonArray("customAttributes");
        if (jsonArraycustomAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("customAttributes").toString()));
          }

          // validate the optional field `customAttributes` (array)
          for (int i = 0; i < jsonArraycustomAttributes.size(); i++) {
            CustomAttribute.validateJsonObject(jsonArraycustomAttributes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            ShippingRateValidationMessage.validateJsonObject(jsonArraymessages.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShippingRuntimeShippingRate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShippingRuntimeShippingRate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShippingRuntimeShippingRate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShippingRuntimeShippingRate.class));

       return (TypeAdapter<T>) new TypeAdapter<ShippingRuntimeShippingRate>() {
           @Override
           public void write(JsonWriter out, ShippingRuntimeShippingRate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShippingRuntimeShippingRate read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ShippingRuntimeShippingRate given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ShippingRuntimeShippingRate
  * @throws IOException if the JSON string is invalid with respect to ShippingRuntimeShippingRate
  */
  public static ShippingRuntimeShippingRate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShippingRuntimeShippingRate.class);
  }

 /**
  * Convert an instance of ShippingRuntimeShippingRate to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

