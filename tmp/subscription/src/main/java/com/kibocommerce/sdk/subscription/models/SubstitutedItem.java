/*
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.subscription.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.subscription.models.FulfillmentServiceAppeasementReason;
import com.kibocommerce.sdk.subscription.models.FulfillmentServiceAuditInfo;
import com.kibocommerce.sdk.subscription.models.FulfillmentServiceFulfillmentField;
import com.kibocommerce.sdk.subscription.models.FulfillmentServiceGiftCard;
import com.kibocommerce.sdk.subscription.models.FulfillmentServiceInventoryTag;
import com.kibocommerce.sdk.subscription.models.FulfillmentServiceProductOption;
import com.kibocommerce.sdk.subscription.models.FulfillmentServiceSubstituteReason;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * SubstitutedItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubstitutedItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ACTUAL_PRICE = "actualPrice";
  @SerializedName(SERIALIZED_NAME_ACTUAL_PRICE)
  private Double actualPrice;

  public static final String SERIALIZED_NAME_ALLOCATED_QUANTITY = "allocatedQuantity";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_QUANTITY)
  private Integer allocatedQuantity;

  public static final String SERIALIZED_NAME_ALLOWS_BACK_ORDER = "allowsBackOrder";
  @SerializedName(SERIALIZED_NAME_ALLOWS_BACK_ORDER)
  private Boolean allowsBackOrder;

  public static final String SERIALIZED_NAME_ALLOWS_FUTURE_ALLOCATE = "allowsFutureAllocate";
  @SerializedName(SERIALIZED_NAME_ALLOWS_FUTURE_ALLOCATE)
  private Boolean allowsFutureAllocate;

  public static final String SERIALIZED_NAME_ALLOWS_SUBSTITUTION = "allowsSubstitution";
  @SerializedName(SERIALIZED_NAME_ALLOWS_SUBSTITUTION)
  private Boolean allowsSubstitution;

  public static final String SERIALIZED_NAME_APPEASEMENT_REASON = "appeasementReason";
  @SerializedName(SERIALIZED_NAME_APPEASEMENT_REASON)
  private FulfillmentServiceAppeasementReason appeasementReason;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private FulfillmentServiceAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_BACKORDER_RELEASE_DATE = "backorderReleaseDate";
  @SerializedName(SERIALIZED_NAME_BACKORDER_RELEASE_DATE)
  private OffsetDateTime backorderReleaseDate;

  public static final String SERIALIZED_NAME_CART_ITEM_ID = "cartItemId";
  @SerializedName(SERIALIZED_NAME_CART_ITEM_ID)
  private String cartItemId;

  public static final String SERIALIZED_NAME_CHILD_ITEM_IDS = "childItemIds";
  @SerializedName(SERIALIZED_NAME_CHILD_ITEM_IDS)
  private List<String> childItemIds = null;

  public static final String SERIALIZED_NAME_CREDIT_CURRENCY_CODE = "creditCurrencyCode";
  @SerializedName(SERIALIZED_NAME_CREDIT_CURRENCY_CODE)
  private String creditCurrencyCode;

  public static final String SERIALIZED_NAME_CREDIT_VALUE = "creditValue";
  @SerializedName(SERIALIZED_NAME_CREDIT_VALUE)
  private Double creditValue;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Map<String, Object> data = null;

  public static final String SERIALIZED_NAME_DUTY = "duty";
  @SerializedName(SERIALIZED_NAME_DUTY)
  private Double duty;

  public static final String SERIALIZED_NAME_EXPECTED_DELIVERY_DATE = "expectedDeliveryDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_DELIVERY_DATE)
  private OffsetDateTime expectedDeliveryDate;

  public static final String SERIALIZED_NAME_FULFILLMENT_FIELDS = "fulfillmentFields";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_FIELDS)
  private List<FulfillmentServiceFulfillmentField> fulfillmentFields = null;

  public static final String SERIALIZED_NAME_GIFT_CARDS = "giftCards";
  @SerializedName(SERIALIZED_NAME_GIFT_CARDS)
  private List<FulfillmentServiceGiftCard> giftCards = null;

  public static final String SERIALIZED_NAME_GOODS_TYPE = "goodsType";
  @SerializedName(SERIALIZED_NAME_GOODS_TYPE)
  private String goodsType;

  public static final String SERIALIZED_NAME_HANDLING = "handling";
  @SerializedName(SERIALIZED_NAME_HANDLING)
  private Double handling;

  public static final String SERIALIZED_NAME_HANDLING_DISCOUNT = "handlingDiscount";
  @SerializedName(SERIALIZED_NAME_HANDLING_DISCOUNT)
  private Double handlingDiscount;

  public static final String SERIALIZED_NAME_HANDLING_TAX = "handlingTax";
  @SerializedName(SERIALIZED_NAME_HANDLING_TAX)
  private Double handlingTax;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Double height;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_INVENTORY_TAGS = "inventoryTags";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TAGS)
  private List<FulfillmentServiceInventoryTag> inventoryTags = null;

  public static final String SERIALIZED_NAME_IS_ASSEMBLY_REQUIRED = "isAssemblyRequired";
  @SerializedName(SERIALIZED_NAME_IS_ASSEMBLY_REQUIRED)
  private Boolean isAssemblyRequired;

  public static final String SERIALIZED_NAME_IS_PACKAGED_STAND_ALONE = "isPackagedStandAlone";
  @SerializedName(SERIALIZED_NAME_IS_PACKAGED_STAND_ALONE)
  private Boolean isPackagedStandAlone;

  public static final String SERIALIZED_NAME_IS_RESERVED_INVENTORY = "isReservedInventory";
  @SerializedName(SERIALIZED_NAME_IS_RESERVED_INVENTORY)
  private Boolean isReservedInventory;

  public static final String SERIALIZED_NAME_IS_TAXABLE = "isTaxable";
  @SerializedName(SERIALIZED_NAME_IS_TAXABLE)
  private Boolean isTaxable;

  public static final String SERIALIZED_NAME_ITEM_DISCOUNT = "itemDiscount";
  @SerializedName(SERIALIZED_NAME_ITEM_DISCOUNT)
  private Double itemDiscount;

  public static final String SERIALIZED_NAME_ITEM_TAX = "itemTax";
  @SerializedName(SERIALIZED_NAME_ITEM_TAX)
  private Double itemTax;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private Double length;

  public static final String SERIALIZED_NAME_LINE_ID = "lineId";
  @SerializedName(SERIALIZED_NAME_LINE_ID)
  private Integer lineId;

  public static final String SERIALIZED_NAME_LINE_ITEM_ADJUSTMENT = "lineItemAdjustment";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_ADJUSTMENT)
  private Double lineItemAdjustment;

  public static final String SERIALIZED_NAME_LINE_ITEM_COST = "lineItemCost";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_COST)
  private Double lineItemCost;

  public static final String SERIALIZED_NAME_LOCATOR_NAME = "locatorName";
  @SerializedName(SERIALIZED_NAME_LOCATOR_NAME)
  private String locatorName;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manageStock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPTION_ATTRIBUTE_F_Q_N = "optionAttributeFQN";
  @SerializedName(SERIALIZED_NAME_OPTION_ATTRIBUTE_F_Q_N)
  private String optionAttributeFQN;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<FulfillmentServiceProductOption> options = null;

  public static final String SERIALIZED_NAME_ORIGINAL_LINE_ID = "originalLineId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_LINE_ID)
  private Integer originalLineId;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_ITEM_ID = "originalOrderItemId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_ITEM_ID)
  private String originalOrderItemId;

  public static final String SERIALIZED_NAME_ORIGINAL_QUANTITY = "originalQuantity";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_QUANTITY)
  private Integer originalQuantity;

  public static final String SERIALIZED_NAME_OVERRIDE_PRICE = "overridePrice";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_PRICE)
  private Double overridePrice;

  public static final String SERIALIZED_NAME_PARENT_ITEM_ID = "parentItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_ITEM_ID)
  private String parentItemId;

  public static final String SERIALIZED_NAME_PART_NUMBER = "partNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "productCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_READY_FOR_PICKUP_QUANTITY = "readyForPickupQuantity";
  @SerializedName(SERIALIZED_NAME_READY_FOR_PICKUP_QUANTITY)
  private Integer readyForPickupQuantity;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private Double shipping;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT = "shippingDiscount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT)
  private Double shippingDiscount;

  public static final String SERIALIZED_NAME_SHIPPING_TAX = "shippingTax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX)
  private Double shippingTax;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_SUBSTITUTE_ITEM_LINE_IDS = "substituteItemLineIds";
  @SerializedName(SERIALIZED_NAME_SUBSTITUTE_ITEM_LINE_IDS)
  private List<Integer> substituteItemLineIds = null;

  public static final String SERIALIZED_NAME_SUBSTITUTE_QUANTITY = "substituteQuantity";
  @SerializedName(SERIALIZED_NAME_SUBSTITUTE_QUANTITY)
  private Integer substituteQuantity;

  public static final String SERIALIZED_NAME_SUBSTITUTE_REASON = "substituteReason";
  @SerializedName(SERIALIZED_NAME_SUBSTITUTE_REASON)
  private FulfillmentServiceSubstituteReason substituteReason;

  public static final String SERIALIZED_NAME_TAX_DATA = "taxData";
  @SerializedName(SERIALIZED_NAME_TAX_DATA)
  private Object taxData = null;

  public static final String SERIALIZED_NAME_TAXABLE_HANDLING = "taxableHandling";
  @SerializedName(SERIALIZED_NAME_TAXABLE_HANDLING)
  private Double taxableHandling;

  public static final String SERIALIZED_NAME_TAXABLE_LINE_ITEM_COST = "taxableLineItemCost";
  @SerializedName(SERIALIZED_NAME_TAXABLE_LINE_ITEM_COST)
  private Double taxableLineItemCost;

  public static final String SERIALIZED_NAME_TAXABLE_SHIPPING = "taxableShipping";
  @SerializedName(SERIALIZED_NAME_TAXABLE_SHIPPING)
  private Double taxableShipping;

  public static final String SERIALIZED_NAME_TRANSFER_QUANTITY = "transferQuantity";
  @SerializedName(SERIALIZED_NAME_TRANSFER_QUANTITY)
  private Integer transferQuantity;

  public static final String SERIALIZED_NAME_TRUE_TRANSFER_QUANTITY = "trueTransferQuantity";
  @SerializedName(SERIALIZED_NAME_TRUE_TRANSFER_QUANTITY)
  private Integer trueTransferQuantity;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unitPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private Double unitPrice;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_VARIATION_PRODUCT_CODE = "variationProductCode";
  @SerializedName(SERIALIZED_NAME_VARIATION_PRODUCT_CODE)
  private String variationProductCode;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Double weight;

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weightUnit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;

  public static final String SERIALIZED_NAME_WEIGHTED_DUTY_ADJUSTMENT = "weightedDutyAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_DUTY_ADJUSTMENT)
  private Double weightedDutyAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_HANDLING_ADJUSTMENT = "weightedHandlingAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_HANDLING_ADJUSTMENT)
  private Double weightedHandlingAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_HANDLING_TAX_ADJUSTMENT = "weightedHandlingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_HANDLING_TAX_ADJUSTMENT)
  private Double weightedHandlingTaxAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_LINE_ITEM_TAX_ADJUSTMENT = "weightedLineItemTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_LINE_ITEM_TAX_ADJUSTMENT)
  private Double weightedLineItemTaxAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_SHIPMENT_ADJUSTMENT = "weightedShipmentAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_SHIPMENT_ADJUSTMENT)
  private Double weightedShipmentAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_SHIPPING_ADJUSTMENT = "weightedShippingAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_SHIPPING_ADJUSTMENT)
  private Double weightedShippingAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_SHIPPING_TAX_ADJUSTMENT = "weightedShippingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_SHIPPING_TAX_ADJUSTMENT)
  private Double weightedShippingTaxAdjustment;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Double width;

  public SubstitutedItem() {
  }

  public SubstitutedItem actualPrice(Double actualPrice) {
    
    this.actualPrice = actualPrice;
    return this;
  }

   /**
   * Get actualPrice
   * @return actualPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getActualPrice() {
    return actualPrice;
  }


  public void setActualPrice(Double actualPrice) {
    this.actualPrice = actualPrice;
  }


  public SubstitutedItem allocatedQuantity(Integer allocatedQuantity) {
    
    this.allocatedQuantity = allocatedQuantity;
    return this;
  }

   /**
   * Get allocatedQuantity
   * @return allocatedQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAllocatedQuantity() {
    return allocatedQuantity;
  }


  public void setAllocatedQuantity(Integer allocatedQuantity) {
    this.allocatedQuantity = allocatedQuantity;
  }


  public SubstitutedItem allowsBackOrder(Boolean allowsBackOrder) {
    
    this.allowsBackOrder = allowsBackOrder;
    return this;
  }

   /**
   * Get allowsBackOrder
   * @return allowsBackOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowsBackOrder() {
    return allowsBackOrder;
  }


  public void setAllowsBackOrder(Boolean allowsBackOrder) {
    this.allowsBackOrder = allowsBackOrder;
  }


  public SubstitutedItem allowsFutureAllocate(Boolean allowsFutureAllocate) {
    
    this.allowsFutureAllocate = allowsFutureAllocate;
    return this;
  }

   /**
   * Get allowsFutureAllocate
   * @return allowsFutureAllocate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowsFutureAllocate() {
    return allowsFutureAllocate;
  }


  public void setAllowsFutureAllocate(Boolean allowsFutureAllocate) {
    this.allowsFutureAllocate = allowsFutureAllocate;
  }


  public SubstitutedItem allowsSubstitution(Boolean allowsSubstitution) {
    
    this.allowsSubstitution = allowsSubstitution;
    return this;
  }

   /**
   * Get allowsSubstitution
   * @return allowsSubstitution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowsSubstitution() {
    return allowsSubstitution;
  }


  public void setAllowsSubstitution(Boolean allowsSubstitution) {
    this.allowsSubstitution = allowsSubstitution;
  }


  public SubstitutedItem appeasementReason(FulfillmentServiceAppeasementReason appeasementReason) {
    
    this.appeasementReason = appeasementReason;
    return this;
  }

   /**
   * Get appeasementReason
   * @return appeasementReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentServiceAppeasementReason getAppeasementReason() {
    return appeasementReason;
  }


  public void setAppeasementReason(FulfillmentServiceAppeasementReason appeasementReason) {
    this.appeasementReason = appeasementReason;
  }


  public SubstitutedItem attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public SubstitutedItem putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public SubstitutedItem auditInfo(FulfillmentServiceAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentServiceAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(FulfillmentServiceAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public SubstitutedItem backorderReleaseDate(OffsetDateTime backorderReleaseDate) {
    
    this.backorderReleaseDate = backorderReleaseDate;
    return this;
  }

   /**
   * Get backorderReleaseDate
   * @return backorderReleaseDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBackorderReleaseDate() {
    return backorderReleaseDate;
  }


  public void setBackorderReleaseDate(OffsetDateTime backorderReleaseDate) {
    this.backorderReleaseDate = backorderReleaseDate;
  }


  public SubstitutedItem cartItemId(String cartItemId) {
    
    this.cartItemId = cartItemId;
    return this;
  }

   /**
   * Get cartItemId
   * @return cartItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCartItemId() {
    return cartItemId;
  }


  public void setCartItemId(String cartItemId) {
    this.cartItemId = cartItemId;
  }


  public SubstitutedItem childItemIds(List<String> childItemIds) {
    
    this.childItemIds = childItemIds;
    return this;
  }

  public SubstitutedItem addChildItemIdsItem(String childItemIdsItem) {
    if (this.childItemIds == null) {
      this.childItemIds = new ArrayList<>();
    }
    this.childItemIds.add(childItemIdsItem);
    return this;
  }

   /**
   * Get childItemIds
   * @return childItemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getChildItemIds() {
    return childItemIds;
  }


  public void setChildItemIds(List<String> childItemIds) {
    this.childItemIds = childItemIds;
  }


  public SubstitutedItem creditCurrencyCode(String creditCurrencyCode) {
    
    this.creditCurrencyCode = creditCurrencyCode;
    return this;
  }

   /**
   * Get creditCurrencyCode
   * @return creditCurrencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreditCurrencyCode() {
    return creditCurrencyCode;
  }


  public void setCreditCurrencyCode(String creditCurrencyCode) {
    this.creditCurrencyCode = creditCurrencyCode;
  }


  public SubstitutedItem creditValue(Double creditValue) {
    
    this.creditValue = creditValue;
    return this;
  }

   /**
   * Get creditValue
   * @return creditValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCreditValue() {
    return creditValue;
  }


  public void setCreditValue(Double creditValue) {
    this.creditValue = creditValue;
  }


  public SubstitutedItem data(Map<String, Object> data) {
    
    this.data = data;
    return this;
  }

  public SubstitutedItem putDataItem(String key, Object dataItem) {
    if (this.data == null) {
      this.data = new HashMap<>();
    }
    this.data.put(key, dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getData() {
    return data;
  }


  public void setData(Map<String, Object> data) {
    this.data = data;
  }


  public SubstitutedItem duty(Double duty) {
    
    this.duty = duty;
    return this;
  }

   /**
   * Get duty
   * @return duty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDuty() {
    return duty;
  }


  public void setDuty(Double duty) {
    this.duty = duty;
  }


  public SubstitutedItem expectedDeliveryDate(OffsetDateTime expectedDeliveryDate) {
    
    this.expectedDeliveryDate = expectedDeliveryDate;
    return this;
  }

   /**
   * Get expectedDeliveryDate
   * @return expectedDeliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpectedDeliveryDate() {
    return expectedDeliveryDate;
  }


  public void setExpectedDeliveryDate(OffsetDateTime expectedDeliveryDate) {
    this.expectedDeliveryDate = expectedDeliveryDate;
  }


  public SubstitutedItem fulfillmentFields(List<FulfillmentServiceFulfillmentField> fulfillmentFields) {
    
    this.fulfillmentFields = fulfillmentFields;
    return this;
  }

  public SubstitutedItem addFulfillmentFieldsItem(FulfillmentServiceFulfillmentField fulfillmentFieldsItem) {
    if (this.fulfillmentFields == null) {
      this.fulfillmentFields = new ArrayList<>();
    }
    this.fulfillmentFields.add(fulfillmentFieldsItem);
    return this;
  }

   /**
   * Get fulfillmentFields
   * @return fulfillmentFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentServiceFulfillmentField> getFulfillmentFields() {
    return fulfillmentFields;
  }


  public void setFulfillmentFields(List<FulfillmentServiceFulfillmentField> fulfillmentFields) {
    this.fulfillmentFields = fulfillmentFields;
  }


  public SubstitutedItem giftCards(List<FulfillmentServiceGiftCard> giftCards) {
    
    this.giftCards = giftCards;
    return this;
  }

  public SubstitutedItem addGiftCardsItem(FulfillmentServiceGiftCard giftCardsItem) {
    if (this.giftCards == null) {
      this.giftCards = new ArrayList<>();
    }
    this.giftCards.add(giftCardsItem);
    return this;
  }

   /**
   * Get giftCards
   * @return giftCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentServiceGiftCard> getGiftCards() {
    return giftCards;
  }


  public void setGiftCards(List<FulfillmentServiceGiftCard> giftCards) {
    this.giftCards = giftCards;
  }


  public SubstitutedItem goodsType(String goodsType) {
    
    this.goodsType = goodsType;
    return this;
  }

   /**
   * Get goodsType
   * @return goodsType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGoodsType() {
    return goodsType;
  }


  public void setGoodsType(String goodsType) {
    this.goodsType = goodsType;
  }


  public SubstitutedItem handling(Double handling) {
    
    this.handling = handling;
    return this;
  }

   /**
   * Get handling
   * @return handling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandling() {
    return handling;
  }


  public void setHandling(Double handling) {
    this.handling = handling;
  }


  public SubstitutedItem handlingDiscount(Double handlingDiscount) {
    
    this.handlingDiscount = handlingDiscount;
    return this;
  }

   /**
   * Get handlingDiscount
   * @return handlingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingDiscount() {
    return handlingDiscount;
  }


  public void setHandlingDiscount(Double handlingDiscount) {
    this.handlingDiscount = handlingDiscount;
  }


  public SubstitutedItem handlingTax(Double handlingTax) {
    
    this.handlingTax = handlingTax;
    return this;
  }

   /**
   * Get handlingTax
   * @return handlingTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTax() {
    return handlingTax;
  }


  public void setHandlingTax(Double handlingTax) {
    this.handlingTax = handlingTax;
  }


  public SubstitutedItem height(Double height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHeight() {
    return height;
  }


  public void setHeight(Double height) {
    this.height = height;
  }


  public SubstitutedItem imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public SubstitutedItem inventoryTags(List<FulfillmentServiceInventoryTag> inventoryTags) {
    
    this.inventoryTags = inventoryTags;
    return this;
  }

  public SubstitutedItem addInventoryTagsItem(FulfillmentServiceInventoryTag inventoryTagsItem) {
    if (this.inventoryTags == null) {
      this.inventoryTags = new ArrayList<>();
    }
    this.inventoryTags.add(inventoryTagsItem);
    return this;
  }

   /**
   * Get inventoryTags
   * @return inventoryTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentServiceInventoryTag> getInventoryTags() {
    return inventoryTags;
  }


  public void setInventoryTags(List<FulfillmentServiceInventoryTag> inventoryTags) {
    this.inventoryTags = inventoryTags;
  }


  public SubstitutedItem isAssemblyRequired(Boolean isAssemblyRequired) {
    
    this.isAssemblyRequired = isAssemblyRequired;
    return this;
  }

   /**
   * Get isAssemblyRequired
   * @return isAssemblyRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAssemblyRequired() {
    return isAssemblyRequired;
  }


  public void setIsAssemblyRequired(Boolean isAssemblyRequired) {
    this.isAssemblyRequired = isAssemblyRequired;
  }


  public SubstitutedItem isPackagedStandAlone(Boolean isPackagedStandAlone) {
    
    this.isPackagedStandAlone = isPackagedStandAlone;
    return this;
  }

   /**
   * Get isPackagedStandAlone
   * @return isPackagedStandAlone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPackagedStandAlone() {
    return isPackagedStandAlone;
  }


  public void setIsPackagedStandAlone(Boolean isPackagedStandAlone) {
    this.isPackagedStandAlone = isPackagedStandAlone;
  }


  public SubstitutedItem isReservedInventory(Boolean isReservedInventory) {
    
    this.isReservedInventory = isReservedInventory;
    return this;
  }

   /**
   * Get isReservedInventory
   * @return isReservedInventory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsReservedInventory() {
    return isReservedInventory;
  }


  public void setIsReservedInventory(Boolean isReservedInventory) {
    this.isReservedInventory = isReservedInventory;
  }


  public SubstitutedItem isTaxable(Boolean isTaxable) {
    
    this.isTaxable = isTaxable;
    return this;
  }

   /**
   * Get isTaxable
   * @return isTaxable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsTaxable() {
    return isTaxable;
  }


  public void setIsTaxable(Boolean isTaxable) {
    this.isTaxable = isTaxable;
  }


  public SubstitutedItem itemDiscount(Double itemDiscount) {
    
    this.itemDiscount = itemDiscount;
    return this;
  }

   /**
   * Get itemDiscount
   * @return itemDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getItemDiscount() {
    return itemDiscount;
  }


  public void setItemDiscount(Double itemDiscount) {
    this.itemDiscount = itemDiscount;
  }


  public SubstitutedItem itemTax(Double itemTax) {
    
    this.itemTax = itemTax;
    return this;
  }

   /**
   * Get itemTax
   * @return itemTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getItemTax() {
    return itemTax;
  }


  public void setItemTax(Double itemTax) {
    this.itemTax = itemTax;
  }


  public SubstitutedItem length(Double length) {
    
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLength() {
    return length;
  }


  public void setLength(Double length) {
    this.length = length;
  }


  public SubstitutedItem lineId(Integer lineId) {
    
    this.lineId = lineId;
    return this;
  }

   /**
   * Get lineId
   * @return lineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLineId() {
    return lineId;
  }


  public void setLineId(Integer lineId) {
    this.lineId = lineId;
  }


  public SubstitutedItem lineItemAdjustment(Double lineItemAdjustment) {
    
    this.lineItemAdjustment = lineItemAdjustment;
    return this;
  }

   /**
   * Get lineItemAdjustment
   * @return lineItemAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemAdjustment() {
    return lineItemAdjustment;
  }


  public void setLineItemAdjustment(Double lineItemAdjustment) {
    this.lineItemAdjustment = lineItemAdjustment;
  }


  public SubstitutedItem lineItemCost(Double lineItemCost) {
    
    this.lineItemCost = lineItemCost;
    return this;
  }

   /**
   * Get lineItemCost
   * @return lineItemCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemCost() {
    return lineItemCost;
  }


  public void setLineItemCost(Double lineItemCost) {
    this.lineItemCost = lineItemCost;
  }


  public SubstitutedItem locatorName(String locatorName) {
    
    this.locatorName = locatorName;
    return this;
  }

   /**
   * Get locatorName
   * @return locatorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocatorName() {
    return locatorName;
  }


  public void setLocatorName(String locatorName) {
    this.locatorName = locatorName;
  }


  public SubstitutedItem manageStock(Boolean manageStock) {
    
    this.manageStock = manageStock;
    return this;
  }

   /**
   * Get manageStock
   * @return manageStock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManageStock() {
    return manageStock;
  }


  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public SubstitutedItem name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public SubstitutedItem optionAttributeFQN(String optionAttributeFQN) {
    
    this.optionAttributeFQN = optionAttributeFQN;
    return this;
  }

   /**
   * Get optionAttributeFQN
   * @return optionAttributeFQN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOptionAttributeFQN() {
    return optionAttributeFQN;
  }


  public void setOptionAttributeFQN(String optionAttributeFQN) {
    this.optionAttributeFQN = optionAttributeFQN;
  }


  public SubstitutedItem options(List<FulfillmentServiceProductOption> options) {
    
    this.options = options;
    return this;
  }

  public SubstitutedItem addOptionsItem(FulfillmentServiceProductOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentServiceProductOption> getOptions() {
    return options;
  }


  public void setOptions(List<FulfillmentServiceProductOption> options) {
    this.options = options;
  }


  public SubstitutedItem originalLineId(Integer originalLineId) {
    
    this.originalLineId = originalLineId;
    return this;
  }

   /**
   * Get originalLineId
   * @return originalLineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOriginalLineId() {
    return originalLineId;
  }


  public void setOriginalLineId(Integer originalLineId) {
    this.originalLineId = originalLineId;
  }


  public SubstitutedItem originalOrderItemId(String originalOrderItemId) {
    
    this.originalOrderItemId = originalOrderItemId;
    return this;
  }

   /**
   * Get originalOrderItemId
   * @return originalOrderItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOriginalOrderItemId() {
    return originalOrderItemId;
  }


  public void setOriginalOrderItemId(String originalOrderItemId) {
    this.originalOrderItemId = originalOrderItemId;
  }


  public SubstitutedItem originalQuantity(Integer originalQuantity) {
    
    this.originalQuantity = originalQuantity;
    return this;
  }

   /**
   * Get originalQuantity
   * @return originalQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOriginalQuantity() {
    return originalQuantity;
  }


  public void setOriginalQuantity(Integer originalQuantity) {
    this.originalQuantity = originalQuantity;
  }


  public SubstitutedItem overridePrice(Double overridePrice) {
    
    this.overridePrice = overridePrice;
    return this;
  }

   /**
   * Get overridePrice
   * @return overridePrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOverridePrice() {
    return overridePrice;
  }


  public void setOverridePrice(Double overridePrice) {
    this.overridePrice = overridePrice;
  }


  public SubstitutedItem parentItemId(String parentItemId) {
    
    this.parentItemId = parentItemId;
    return this;
  }

   /**
   * Get parentItemId
   * @return parentItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParentItemId() {
    return parentItemId;
  }


  public void setParentItemId(String parentItemId) {
    this.parentItemId = parentItemId;
  }


  public SubstitutedItem partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Get partNumber
   * @return partNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartNumber() {
    return partNumber;
  }


  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public SubstitutedItem productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Get productCode
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public SubstitutedItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public SubstitutedItem readyForPickupQuantity(Integer readyForPickupQuantity) {
    
    this.readyForPickupQuantity = readyForPickupQuantity;
    return this;
  }

   /**
   * Get readyForPickupQuantity
   * @return readyForPickupQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReadyForPickupQuantity() {
    return readyForPickupQuantity;
  }


  public void setReadyForPickupQuantity(Integer readyForPickupQuantity) {
    this.readyForPickupQuantity = readyForPickupQuantity;
  }


  public SubstitutedItem shipping(Double shipping) {
    
    this.shipping = shipping;
    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShipping() {
    return shipping;
  }


  public void setShipping(Double shipping) {
    this.shipping = shipping;
  }


  public SubstitutedItem shippingDiscount(Double shippingDiscount) {
    
    this.shippingDiscount = shippingDiscount;
    return this;
  }

   /**
   * Get shippingDiscount
   * @return shippingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingDiscount() {
    return shippingDiscount;
  }


  public void setShippingDiscount(Double shippingDiscount) {
    this.shippingDiscount = shippingDiscount;
  }


  public SubstitutedItem shippingTax(Double shippingTax) {
    
    this.shippingTax = shippingTax;
    return this;
  }

   /**
   * Get shippingTax
   * @return shippingTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTax() {
    return shippingTax;
  }


  public void setShippingTax(Double shippingTax) {
    this.shippingTax = shippingTax;
  }


  public SubstitutedItem sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public SubstitutedItem substituteItemLineIds(List<Integer> substituteItemLineIds) {
    
    this.substituteItemLineIds = substituteItemLineIds;
    return this;
  }

  public SubstitutedItem addSubstituteItemLineIdsItem(Integer substituteItemLineIdsItem) {
    if (this.substituteItemLineIds == null) {
      this.substituteItemLineIds = new ArrayList<>();
    }
    this.substituteItemLineIds.add(substituteItemLineIdsItem);
    return this;
  }

   /**
   * Get substituteItemLineIds
   * @return substituteItemLineIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getSubstituteItemLineIds() {
    return substituteItemLineIds;
  }


  public void setSubstituteItemLineIds(List<Integer> substituteItemLineIds) {
    this.substituteItemLineIds = substituteItemLineIds;
  }


  public SubstitutedItem substituteQuantity(Integer substituteQuantity) {
    
    this.substituteQuantity = substituteQuantity;
    return this;
  }

   /**
   * Get substituteQuantity
   * @return substituteQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSubstituteQuantity() {
    return substituteQuantity;
  }


  public void setSubstituteQuantity(Integer substituteQuantity) {
    this.substituteQuantity = substituteQuantity;
  }


  public SubstitutedItem substituteReason(FulfillmentServiceSubstituteReason substituteReason) {
    
    this.substituteReason = substituteReason;
    return this;
  }

   /**
   * Get substituteReason
   * @return substituteReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentServiceSubstituteReason getSubstituteReason() {
    return substituteReason;
  }


  public void setSubstituteReason(FulfillmentServiceSubstituteReason substituteReason) {
    this.substituteReason = substituteReason;
  }


  public SubstitutedItem taxData(Object taxData) {
    
    this.taxData = taxData;
    return this;
  }

   /**
   * Get taxData
   * @return taxData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTaxData() {
    return taxData;
  }


  public void setTaxData(Object taxData) {
    this.taxData = taxData;
  }


  public SubstitutedItem taxableHandling(Double taxableHandling) {
    
    this.taxableHandling = taxableHandling;
    return this;
  }

   /**
   * Get taxableHandling
   * @return taxableHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTaxableHandling() {
    return taxableHandling;
  }


  public void setTaxableHandling(Double taxableHandling) {
    this.taxableHandling = taxableHandling;
  }


  public SubstitutedItem taxableLineItemCost(Double taxableLineItemCost) {
    
    this.taxableLineItemCost = taxableLineItemCost;
    return this;
  }

   /**
   * Get taxableLineItemCost
   * @return taxableLineItemCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTaxableLineItemCost() {
    return taxableLineItemCost;
  }


  public void setTaxableLineItemCost(Double taxableLineItemCost) {
    this.taxableLineItemCost = taxableLineItemCost;
  }


  public SubstitutedItem taxableShipping(Double taxableShipping) {
    
    this.taxableShipping = taxableShipping;
    return this;
  }

   /**
   * Get taxableShipping
   * @return taxableShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTaxableShipping() {
    return taxableShipping;
  }


  public void setTaxableShipping(Double taxableShipping) {
    this.taxableShipping = taxableShipping;
  }


  public SubstitutedItem transferQuantity(Integer transferQuantity) {
    
    this.transferQuantity = transferQuantity;
    return this;
  }

   /**
   * Get transferQuantity
   * @return transferQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTransferQuantity() {
    return transferQuantity;
  }


  public void setTransferQuantity(Integer transferQuantity) {
    this.transferQuantity = transferQuantity;
  }


  public SubstitutedItem trueTransferQuantity(Integer trueTransferQuantity) {
    
    this.trueTransferQuantity = trueTransferQuantity;
    return this;
  }

   /**
   * Get trueTransferQuantity
   * @return trueTransferQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTrueTransferQuantity() {
    return trueTransferQuantity;
  }


  public void setTrueTransferQuantity(Integer trueTransferQuantity) {
    this.trueTransferQuantity = trueTransferQuantity;
  }


  public SubstitutedItem unitPrice(Double unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUnitPrice() {
    return unitPrice;
  }


  public void setUnitPrice(Double unitPrice) {
    this.unitPrice = unitPrice;
  }


  public SubstitutedItem upc(String upc) {
    
    this.upc = upc;
    return this;
  }

   /**
   * Get upc
   * @return upc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpc() {
    return upc;
  }


  public void setUpc(String upc) {
    this.upc = upc;
  }


  public SubstitutedItem variationProductCode(String variationProductCode) {
    
    this.variationProductCode = variationProductCode;
    return this;
  }

   /**
   * Get variationProductCode
   * @return variationProductCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVariationProductCode() {
    return variationProductCode;
  }


  public void setVariationProductCode(String variationProductCode) {
    this.variationProductCode = variationProductCode;
  }


  public SubstitutedItem weight(Double weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeight() {
    return weight;
  }


  public void setWeight(Double weight) {
    this.weight = weight;
  }


  public SubstitutedItem weightUnit(String weightUnit) {
    
    this.weightUnit = weightUnit;
    return this;
  }

   /**
   * Get weightUnit
   * @return weightUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWeightUnit() {
    return weightUnit;
  }


  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  public SubstitutedItem weightedDutyAdjustment(Double weightedDutyAdjustment) {
    
    this.weightedDutyAdjustment = weightedDutyAdjustment;
    return this;
  }

   /**
   * Get weightedDutyAdjustment
   * @return weightedDutyAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightedDutyAdjustment() {
    return weightedDutyAdjustment;
  }


  public void setWeightedDutyAdjustment(Double weightedDutyAdjustment) {
    this.weightedDutyAdjustment = weightedDutyAdjustment;
  }


  public SubstitutedItem weightedHandlingAdjustment(Double weightedHandlingAdjustment) {
    
    this.weightedHandlingAdjustment = weightedHandlingAdjustment;
    return this;
  }

   /**
   * Get weightedHandlingAdjustment
   * @return weightedHandlingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightedHandlingAdjustment() {
    return weightedHandlingAdjustment;
  }


  public void setWeightedHandlingAdjustment(Double weightedHandlingAdjustment) {
    this.weightedHandlingAdjustment = weightedHandlingAdjustment;
  }


  public SubstitutedItem weightedHandlingTaxAdjustment(Double weightedHandlingTaxAdjustment) {
    
    this.weightedHandlingTaxAdjustment = weightedHandlingTaxAdjustment;
    return this;
  }

   /**
   * Get weightedHandlingTaxAdjustment
   * @return weightedHandlingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightedHandlingTaxAdjustment() {
    return weightedHandlingTaxAdjustment;
  }


  public void setWeightedHandlingTaxAdjustment(Double weightedHandlingTaxAdjustment) {
    this.weightedHandlingTaxAdjustment = weightedHandlingTaxAdjustment;
  }


  public SubstitutedItem weightedLineItemTaxAdjustment(Double weightedLineItemTaxAdjustment) {
    
    this.weightedLineItemTaxAdjustment = weightedLineItemTaxAdjustment;
    return this;
  }

   /**
   * Get weightedLineItemTaxAdjustment
   * @return weightedLineItemTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightedLineItemTaxAdjustment() {
    return weightedLineItemTaxAdjustment;
  }


  public void setWeightedLineItemTaxAdjustment(Double weightedLineItemTaxAdjustment) {
    this.weightedLineItemTaxAdjustment = weightedLineItemTaxAdjustment;
  }


  public SubstitutedItem weightedShipmentAdjustment(Double weightedShipmentAdjustment) {
    
    this.weightedShipmentAdjustment = weightedShipmentAdjustment;
    return this;
  }

   /**
   * Get weightedShipmentAdjustment
   * @return weightedShipmentAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightedShipmentAdjustment() {
    return weightedShipmentAdjustment;
  }


  public void setWeightedShipmentAdjustment(Double weightedShipmentAdjustment) {
    this.weightedShipmentAdjustment = weightedShipmentAdjustment;
  }


  public SubstitutedItem weightedShippingAdjustment(Double weightedShippingAdjustment) {
    
    this.weightedShippingAdjustment = weightedShippingAdjustment;
    return this;
  }

   /**
   * Get weightedShippingAdjustment
   * @return weightedShippingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightedShippingAdjustment() {
    return weightedShippingAdjustment;
  }


  public void setWeightedShippingAdjustment(Double weightedShippingAdjustment) {
    this.weightedShippingAdjustment = weightedShippingAdjustment;
  }


  public SubstitutedItem weightedShippingTaxAdjustment(Double weightedShippingTaxAdjustment) {
    
    this.weightedShippingTaxAdjustment = weightedShippingTaxAdjustment;
    return this;
  }

   /**
   * Get weightedShippingTaxAdjustment
   * @return weightedShippingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeightedShippingTaxAdjustment() {
    return weightedShippingTaxAdjustment;
  }


  public void setWeightedShippingTaxAdjustment(Double weightedShippingTaxAdjustment) {
    this.weightedShippingTaxAdjustment = weightedShippingTaxAdjustment;
  }


  public SubstitutedItem width(Double width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWidth() {
    return width;
  }


  public void setWidth(Double width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubstitutedItem substitutedItem = (SubstitutedItem) o;
    return Objects.equals(this.actualPrice, substitutedItem.actualPrice) &&
        Objects.equals(this.allocatedQuantity, substitutedItem.allocatedQuantity) &&
        Objects.equals(this.allowsBackOrder, substitutedItem.allowsBackOrder) &&
        Objects.equals(this.allowsFutureAllocate, substitutedItem.allowsFutureAllocate) &&
        Objects.equals(this.allowsSubstitution, substitutedItem.allowsSubstitution) &&
        Objects.equals(this.appeasementReason, substitutedItem.appeasementReason) &&
        Objects.equals(this.attributes, substitutedItem.attributes) &&
        Objects.equals(this.auditInfo, substitutedItem.auditInfo) &&
        Objects.equals(this.backorderReleaseDate, substitutedItem.backorderReleaseDate) &&
        Objects.equals(this.cartItemId, substitutedItem.cartItemId) &&
        Objects.equals(this.childItemIds, substitutedItem.childItemIds) &&
        Objects.equals(this.creditCurrencyCode, substitutedItem.creditCurrencyCode) &&
        Objects.equals(this.creditValue, substitutedItem.creditValue) &&
        Objects.equals(this.data, substitutedItem.data) &&
        Objects.equals(this.duty, substitutedItem.duty) &&
        Objects.equals(this.expectedDeliveryDate, substitutedItem.expectedDeliveryDate) &&
        Objects.equals(this.fulfillmentFields, substitutedItem.fulfillmentFields) &&
        Objects.equals(this.giftCards, substitutedItem.giftCards) &&
        Objects.equals(this.goodsType, substitutedItem.goodsType) &&
        Objects.equals(this.handling, substitutedItem.handling) &&
        Objects.equals(this.handlingDiscount, substitutedItem.handlingDiscount) &&
        Objects.equals(this.handlingTax, substitutedItem.handlingTax) &&
        Objects.equals(this.height, substitutedItem.height) &&
        Objects.equals(this.imageUrl, substitutedItem.imageUrl) &&
        Objects.equals(this.inventoryTags, substitutedItem.inventoryTags) &&
        Objects.equals(this.isAssemblyRequired, substitutedItem.isAssemblyRequired) &&
        Objects.equals(this.isPackagedStandAlone, substitutedItem.isPackagedStandAlone) &&
        Objects.equals(this.isReservedInventory, substitutedItem.isReservedInventory) &&
        Objects.equals(this.isTaxable, substitutedItem.isTaxable) &&
        Objects.equals(this.itemDiscount, substitutedItem.itemDiscount) &&
        Objects.equals(this.itemTax, substitutedItem.itemTax) &&
        Objects.equals(this.length, substitutedItem.length) &&
        Objects.equals(this.lineId, substitutedItem.lineId) &&
        Objects.equals(this.lineItemAdjustment, substitutedItem.lineItemAdjustment) &&
        Objects.equals(this.lineItemCost, substitutedItem.lineItemCost) &&
        Objects.equals(this.locatorName, substitutedItem.locatorName) &&
        Objects.equals(this.manageStock, substitutedItem.manageStock) &&
        Objects.equals(this.name, substitutedItem.name) &&
        Objects.equals(this.optionAttributeFQN, substitutedItem.optionAttributeFQN) &&
        Objects.equals(this.options, substitutedItem.options) &&
        Objects.equals(this.originalLineId, substitutedItem.originalLineId) &&
        Objects.equals(this.originalOrderItemId, substitutedItem.originalOrderItemId) &&
        Objects.equals(this.originalQuantity, substitutedItem.originalQuantity) &&
        Objects.equals(this.overridePrice, substitutedItem.overridePrice) &&
        Objects.equals(this.parentItemId, substitutedItem.parentItemId) &&
        Objects.equals(this.partNumber, substitutedItem.partNumber) &&
        Objects.equals(this.productCode, substitutedItem.productCode) &&
        Objects.equals(this.quantity, substitutedItem.quantity) &&
        Objects.equals(this.readyForPickupQuantity, substitutedItem.readyForPickupQuantity) &&
        Objects.equals(this.shipping, substitutedItem.shipping) &&
        Objects.equals(this.shippingDiscount, substitutedItem.shippingDiscount) &&
        Objects.equals(this.shippingTax, substitutedItem.shippingTax) &&
        Objects.equals(this.sku, substitutedItem.sku) &&
        Objects.equals(this.substituteItemLineIds, substitutedItem.substituteItemLineIds) &&
        Objects.equals(this.substituteQuantity, substitutedItem.substituteQuantity) &&
        Objects.equals(this.substituteReason, substitutedItem.substituteReason) &&
        Objects.equals(this.taxData, substitutedItem.taxData) &&
        Objects.equals(this.taxableHandling, substitutedItem.taxableHandling) &&
        Objects.equals(this.taxableLineItemCost, substitutedItem.taxableLineItemCost) &&
        Objects.equals(this.taxableShipping, substitutedItem.taxableShipping) &&
        Objects.equals(this.transferQuantity, substitutedItem.transferQuantity) &&
        Objects.equals(this.trueTransferQuantity, substitutedItem.trueTransferQuantity) &&
        Objects.equals(this.unitPrice, substitutedItem.unitPrice) &&
        Objects.equals(this.upc, substitutedItem.upc) &&
        Objects.equals(this.variationProductCode, substitutedItem.variationProductCode) &&
        Objects.equals(this.weight, substitutedItem.weight) &&
        Objects.equals(this.weightUnit, substitutedItem.weightUnit) &&
        Objects.equals(this.weightedDutyAdjustment, substitutedItem.weightedDutyAdjustment) &&
        Objects.equals(this.weightedHandlingAdjustment, substitutedItem.weightedHandlingAdjustment) &&
        Objects.equals(this.weightedHandlingTaxAdjustment, substitutedItem.weightedHandlingTaxAdjustment) &&
        Objects.equals(this.weightedLineItemTaxAdjustment, substitutedItem.weightedLineItemTaxAdjustment) &&
        Objects.equals(this.weightedShipmentAdjustment, substitutedItem.weightedShipmentAdjustment) &&
        Objects.equals(this.weightedShippingAdjustment, substitutedItem.weightedShippingAdjustment) &&
        Objects.equals(this.weightedShippingTaxAdjustment, substitutedItem.weightedShippingTaxAdjustment) &&
        Objects.equals(this.width, substitutedItem.width);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualPrice, allocatedQuantity, allowsBackOrder, allowsFutureAllocate, allowsSubstitution, appeasementReason, attributes, auditInfo, backorderReleaseDate, cartItemId, childItemIds, creditCurrencyCode, creditValue, data, duty, expectedDeliveryDate, fulfillmentFields, giftCards, goodsType, handling, handlingDiscount, handlingTax, height, imageUrl, inventoryTags, isAssemblyRequired, isPackagedStandAlone, isReservedInventory, isTaxable, itemDiscount, itemTax, length, lineId, lineItemAdjustment, lineItemCost, locatorName, manageStock, name, optionAttributeFQN, options, originalLineId, originalOrderItemId, originalQuantity, overridePrice, parentItemId, partNumber, productCode, quantity, readyForPickupQuantity, shipping, shippingDiscount, shippingTax, sku, substituteItemLineIds, substituteQuantity, substituteReason, taxData, taxableHandling, taxableLineItemCost, taxableShipping, transferQuantity, trueTransferQuantity, unitPrice, upc, variationProductCode, weight, weightUnit, weightedDutyAdjustment, weightedHandlingAdjustment, weightedHandlingTaxAdjustment, weightedLineItemTaxAdjustment, weightedShipmentAdjustment, weightedShippingAdjustment, weightedShippingTaxAdjustment, width);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubstitutedItem {\n");
    sb.append("    actualPrice: ").append(toIndentedString(actualPrice)).append("\n");
    sb.append("    allocatedQuantity: ").append(toIndentedString(allocatedQuantity)).append("\n");
    sb.append("    allowsBackOrder: ").append(toIndentedString(allowsBackOrder)).append("\n");
    sb.append("    allowsFutureAllocate: ").append(toIndentedString(allowsFutureAllocate)).append("\n");
    sb.append("    allowsSubstitution: ").append(toIndentedString(allowsSubstitution)).append("\n");
    sb.append("    appeasementReason: ").append(toIndentedString(appeasementReason)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    backorderReleaseDate: ").append(toIndentedString(backorderReleaseDate)).append("\n");
    sb.append("    cartItemId: ").append(toIndentedString(cartItemId)).append("\n");
    sb.append("    childItemIds: ").append(toIndentedString(childItemIds)).append("\n");
    sb.append("    creditCurrencyCode: ").append(toIndentedString(creditCurrencyCode)).append("\n");
    sb.append("    creditValue: ").append(toIndentedString(creditValue)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    duty: ").append(toIndentedString(duty)).append("\n");
    sb.append("    expectedDeliveryDate: ").append(toIndentedString(expectedDeliveryDate)).append("\n");
    sb.append("    fulfillmentFields: ").append(toIndentedString(fulfillmentFields)).append("\n");
    sb.append("    giftCards: ").append(toIndentedString(giftCards)).append("\n");
    sb.append("    goodsType: ").append(toIndentedString(goodsType)).append("\n");
    sb.append("    handling: ").append(toIndentedString(handling)).append("\n");
    sb.append("    handlingDiscount: ").append(toIndentedString(handlingDiscount)).append("\n");
    sb.append("    handlingTax: ").append(toIndentedString(handlingTax)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    inventoryTags: ").append(toIndentedString(inventoryTags)).append("\n");
    sb.append("    isAssemblyRequired: ").append(toIndentedString(isAssemblyRequired)).append("\n");
    sb.append("    isPackagedStandAlone: ").append(toIndentedString(isPackagedStandAlone)).append("\n");
    sb.append("    isReservedInventory: ").append(toIndentedString(isReservedInventory)).append("\n");
    sb.append("    isTaxable: ").append(toIndentedString(isTaxable)).append("\n");
    sb.append("    itemDiscount: ").append(toIndentedString(itemDiscount)).append("\n");
    sb.append("    itemTax: ").append(toIndentedString(itemTax)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    lineItemAdjustment: ").append(toIndentedString(lineItemAdjustment)).append("\n");
    sb.append("    lineItemCost: ").append(toIndentedString(lineItemCost)).append("\n");
    sb.append("    locatorName: ").append(toIndentedString(locatorName)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    optionAttributeFQN: ").append(toIndentedString(optionAttributeFQN)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    originalLineId: ").append(toIndentedString(originalLineId)).append("\n");
    sb.append("    originalOrderItemId: ").append(toIndentedString(originalOrderItemId)).append("\n");
    sb.append("    originalQuantity: ").append(toIndentedString(originalQuantity)).append("\n");
    sb.append("    overridePrice: ").append(toIndentedString(overridePrice)).append("\n");
    sb.append("    parentItemId: ").append(toIndentedString(parentItemId)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    readyForPickupQuantity: ").append(toIndentedString(readyForPickupQuantity)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    shippingDiscount: ").append(toIndentedString(shippingDiscount)).append("\n");
    sb.append("    shippingTax: ").append(toIndentedString(shippingTax)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    substituteItemLineIds: ").append(toIndentedString(substituteItemLineIds)).append("\n");
    sb.append("    substituteQuantity: ").append(toIndentedString(substituteQuantity)).append("\n");
    sb.append("    substituteReason: ").append(toIndentedString(substituteReason)).append("\n");
    sb.append("    taxData: ").append(toIndentedString(taxData)).append("\n");
    sb.append("    taxableHandling: ").append(toIndentedString(taxableHandling)).append("\n");
    sb.append("    taxableLineItemCost: ").append(toIndentedString(taxableLineItemCost)).append("\n");
    sb.append("    taxableShipping: ").append(toIndentedString(taxableShipping)).append("\n");
    sb.append("    transferQuantity: ").append(toIndentedString(transferQuantity)).append("\n");
    sb.append("    trueTransferQuantity: ").append(toIndentedString(trueTransferQuantity)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    variationProductCode: ").append(toIndentedString(variationProductCode)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    weightedDutyAdjustment: ").append(toIndentedString(weightedDutyAdjustment)).append("\n");
    sb.append("    weightedHandlingAdjustment: ").append(toIndentedString(weightedHandlingAdjustment)).append("\n");
    sb.append("    weightedHandlingTaxAdjustment: ").append(toIndentedString(weightedHandlingTaxAdjustment)).append("\n");
    sb.append("    weightedLineItemTaxAdjustment: ").append(toIndentedString(weightedLineItemTaxAdjustment)).append("\n");
    sb.append("    weightedShipmentAdjustment: ").append(toIndentedString(weightedShipmentAdjustment)).append("\n");
    sb.append("    weightedShippingAdjustment: ").append(toIndentedString(weightedShippingAdjustment)).append("\n");
    sb.append("    weightedShippingTaxAdjustment: ").append(toIndentedString(weightedShippingTaxAdjustment)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actualPrice");
    openapiFields.add("allocatedQuantity");
    openapiFields.add("allowsBackOrder");
    openapiFields.add("allowsFutureAllocate");
    openapiFields.add("allowsSubstitution");
    openapiFields.add("appeasementReason");
    openapiFields.add("attributes");
    openapiFields.add("auditInfo");
    openapiFields.add("backorderReleaseDate");
    openapiFields.add("cartItemId");
    openapiFields.add("childItemIds");
    openapiFields.add("creditCurrencyCode");
    openapiFields.add("creditValue");
    openapiFields.add("data");
    openapiFields.add("duty");
    openapiFields.add("expectedDeliveryDate");
    openapiFields.add("fulfillmentFields");
    openapiFields.add("giftCards");
    openapiFields.add("goodsType");
    openapiFields.add("handling");
    openapiFields.add("handlingDiscount");
    openapiFields.add("handlingTax");
    openapiFields.add("height");
    openapiFields.add("imageUrl");
    openapiFields.add("inventoryTags");
    openapiFields.add("isAssemblyRequired");
    openapiFields.add("isPackagedStandAlone");
    openapiFields.add("isReservedInventory");
    openapiFields.add("isTaxable");
    openapiFields.add("itemDiscount");
    openapiFields.add("itemTax");
    openapiFields.add("length");
    openapiFields.add("lineId");
    openapiFields.add("lineItemAdjustment");
    openapiFields.add("lineItemCost");
    openapiFields.add("locatorName");
    openapiFields.add("manageStock");
    openapiFields.add("name");
    openapiFields.add("optionAttributeFQN");
    openapiFields.add("options");
    openapiFields.add("originalLineId");
    openapiFields.add("originalOrderItemId");
    openapiFields.add("originalQuantity");
    openapiFields.add("overridePrice");
    openapiFields.add("parentItemId");
    openapiFields.add("partNumber");
    openapiFields.add("productCode");
    openapiFields.add("quantity");
    openapiFields.add("readyForPickupQuantity");
    openapiFields.add("shipping");
    openapiFields.add("shippingDiscount");
    openapiFields.add("shippingTax");
    openapiFields.add("sku");
    openapiFields.add("substituteItemLineIds");
    openapiFields.add("substituteQuantity");
    openapiFields.add("substituteReason");
    openapiFields.add("taxData");
    openapiFields.add("taxableHandling");
    openapiFields.add("taxableLineItemCost");
    openapiFields.add("taxableShipping");
    openapiFields.add("transferQuantity");
    openapiFields.add("trueTransferQuantity");
    openapiFields.add("unitPrice");
    openapiFields.add("upc");
    openapiFields.add("variationProductCode");
    openapiFields.add("weight");
    openapiFields.add("weightUnit");
    openapiFields.add("weightedDutyAdjustment");
    openapiFields.add("weightedHandlingAdjustment");
    openapiFields.add("weightedHandlingTaxAdjustment");
    openapiFields.add("weightedLineItemTaxAdjustment");
    openapiFields.add("weightedShipmentAdjustment");
    openapiFields.add("weightedShippingAdjustment");
    openapiFields.add("weightedShippingTaxAdjustment");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SubstitutedItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SubstitutedItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubstitutedItem is not found in the empty JSON string", SubstitutedItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!SubstitutedItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SubstitutedItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `appeasementReason`
      if (jsonObj.get("appeasementReason") != null && !jsonObj.get("appeasementReason").isJsonNull()) {
        FulfillmentServiceAppeasementReason.validateJsonObject(jsonObj.getAsJsonObject("appeasementReason"));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        FulfillmentServiceAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      if ((jsonObj.get("cartItemId") != null && !jsonObj.get("cartItemId").isJsonNull()) && !jsonObj.get("cartItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartItemId").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("childItemIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `childItemIds` to be an array in the JSON string but got `%s`", jsonObj.get("childItemIds").toString()));
      }
      if ((jsonObj.get("creditCurrencyCode") != null && !jsonObj.get("creditCurrencyCode").isJsonNull()) && !jsonObj.get("creditCurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditCurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditCurrencyCode").toString()));
      }
      if (jsonObj.get("fulfillmentFields") != null && !jsonObj.get("fulfillmentFields").isJsonNull()) {
        JsonArray jsonArrayfulfillmentFields = jsonObj.getAsJsonArray("fulfillmentFields");
        if (jsonArrayfulfillmentFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fulfillmentFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fulfillmentFields` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentFields").toString()));
          }

          // validate the optional field `fulfillmentFields` (array)
          for (int i = 0; i < jsonArrayfulfillmentFields.size(); i++) {
            FulfillmentServiceFulfillmentField.validateJsonObject(jsonArrayfulfillmentFields.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("giftCards") != null && !jsonObj.get("giftCards").isJsonNull()) {
        JsonArray jsonArraygiftCards = jsonObj.getAsJsonArray("giftCards");
        if (jsonArraygiftCards != null) {
          // ensure the json data is an array
          if (!jsonObj.get("giftCards").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `giftCards` to be an array in the JSON string but got `%s`", jsonObj.get("giftCards").toString()));
          }

          // validate the optional field `giftCards` (array)
          for (int i = 0; i < jsonArraygiftCards.size(); i++) {
            FulfillmentServiceGiftCard.validateJsonObject(jsonArraygiftCards.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("goodsType") != null && !jsonObj.get("goodsType").isJsonNull()) && !jsonObj.get("goodsType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `goodsType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("goodsType").toString()));
      }
      if ((jsonObj.get("imageUrl") != null && !jsonObj.get("imageUrl").isJsonNull()) && !jsonObj.get("imageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageUrl").toString()));
      }
      if (jsonObj.get("inventoryTags") != null && !jsonObj.get("inventoryTags").isJsonNull()) {
        JsonArray jsonArrayinventoryTags = jsonObj.getAsJsonArray("inventoryTags");
        if (jsonArrayinventoryTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inventoryTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventoryTags` to be an array in the JSON string but got `%s`", jsonObj.get("inventoryTags").toString()));
          }

          // validate the optional field `inventoryTags` (array)
          for (int i = 0; i < jsonArrayinventoryTags.size(); i++) {
            FulfillmentServiceInventoryTag.validateJsonObject(jsonArrayinventoryTags.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("locatorName") != null && !jsonObj.get("locatorName").isJsonNull()) && !jsonObj.get("locatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locatorName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("optionAttributeFQN") != null && !jsonObj.get("optionAttributeFQN").isJsonNull()) && !jsonObj.get("optionAttributeFQN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `optionAttributeFQN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("optionAttributeFQN").toString()));
      }
      if (jsonObj.get("options") != null && !jsonObj.get("options").isJsonNull()) {
        JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
        if (jsonArrayoptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("options").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
          }

          // validate the optional field `options` (array)
          for (int i = 0; i < jsonArrayoptions.size(); i++) {
            FulfillmentServiceProductOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("originalOrderItemId") != null && !jsonObj.get("originalOrderItemId").isJsonNull()) && !jsonObj.get("originalOrderItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalOrderItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalOrderItemId").toString()));
      }
      if ((jsonObj.get("parentItemId") != null && !jsonObj.get("parentItemId").isJsonNull()) && !jsonObj.get("parentItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentItemId").toString()));
      }
      if ((jsonObj.get("partNumber") != null && !jsonObj.get("partNumber").isJsonNull()) && !jsonObj.get("partNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partNumber").toString()));
      }
      if ((jsonObj.get("productCode") != null && !jsonObj.get("productCode").isJsonNull()) && !jsonObj.get("productCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productCode").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("substituteItemLineIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `substituteItemLineIds` to be an array in the JSON string but got `%s`", jsonObj.get("substituteItemLineIds").toString()));
      }
      // validate the optional field `substituteReason`
      if (jsonObj.get("substituteReason") != null && !jsonObj.get("substituteReason").isJsonNull()) {
        FulfillmentServiceSubstituteReason.validateJsonObject(jsonObj.getAsJsonObject("substituteReason"));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
      if ((jsonObj.get("variationProductCode") != null && !jsonObj.get("variationProductCode").isJsonNull()) && !jsonObj.get("variationProductCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `variationProductCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("variationProductCode").toString()));
      }
      if ((jsonObj.get("weightUnit") != null && !jsonObj.get("weightUnit").isJsonNull()) && !jsonObj.get("weightUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weightUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weightUnit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubstitutedItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubstitutedItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubstitutedItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubstitutedItem.class));

       return (TypeAdapter<T>) new TypeAdapter<SubstitutedItem>() {
           @Override
           public void write(JsonWriter out, SubstitutedItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SubstitutedItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SubstitutedItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubstitutedItem
  * @throws IOException if the JSON string is invalid with respect to SubstitutedItem
  */
  public static SubstitutedItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubstitutedItem.class);
  }

 /**
  * Convert an instance of SubstitutedItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

