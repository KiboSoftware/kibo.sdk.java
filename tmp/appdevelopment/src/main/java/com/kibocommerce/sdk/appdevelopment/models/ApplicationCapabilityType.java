/*
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.appdevelopment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationCapability;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationCapabilityDomain;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApplicationCapabilityType implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITY_TYPE_ID = "applicationCapabilityTypeId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITY_TYPE_ID)
  private Integer applicationCapabilityTypeId;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Integer applicationId;

  public static final String SERIALIZED_NAME_CAPABILITY_TYPE_ID = "capabilityTypeId";
  @SerializedName(SERIALIZED_NAME_CAPABILITY_TYPE_ID)
  private Integer capabilityTypeId;

  public static final String SERIALIZED_NAME_CAPABILITY_TYPE_NAME = "capabilityTypeName";
  @SerializedName(SERIALIZED_NAME_CAPABILITY_TYPE_NAME)
  private String capabilityTypeName;

  public static final String SERIALIZED_NAME_IS_IMPLEMENTED = "isImplemented";
  @SerializedName(SERIALIZED_NAME_IS_IMPLEMENTED)
  private Boolean isImplemented;

  public static final String SERIALIZED_NAME_IS_INITIALIZED_BY_DEFAULT = "isInitializedByDefault";
  @SerializedName(SERIALIZED_NAME_IS_INITIALIZED_BY_DEFAULT)
  private Boolean isInitializedByDefault;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITIES = "applicationCapabilities";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITIES)
  private List<ApplicationCapability> applicationCapabilities = null;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAINS = "applicationCapabilityDomains";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAINS)
  private List<ApplicationCapabilityDomain> applicationCapabilityDomains = null;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "packageId";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private Integer packageId;

  public ApplicationCapabilityType() {
  }

  public ApplicationCapabilityType applicationCapabilityTypeId(Integer applicationCapabilityTypeId) {
    
    this.applicationCapabilityTypeId = applicationCapabilityTypeId;
    return this;
  }

   /**
   * 
   * @return applicationCapabilityTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationCapabilityTypeId() {
    return applicationCapabilityTypeId;
  }


  public void setApplicationCapabilityTypeId(Integer applicationCapabilityTypeId) {
    this.applicationCapabilityTypeId = applicationCapabilityTypeId;
  }


  public ApplicationCapabilityType applicationId(Integer applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * 
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }


  public ApplicationCapabilityType capabilityTypeId(Integer capabilityTypeId) {
    
    this.capabilityTypeId = capabilityTypeId;
    return this;
  }

   /**
   * 
   * @return capabilityTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCapabilityTypeId() {
    return capabilityTypeId;
  }


  public void setCapabilityTypeId(Integer capabilityTypeId) {
    this.capabilityTypeId = capabilityTypeId;
  }


  public ApplicationCapabilityType capabilityTypeName(String capabilityTypeName) {
    
    this.capabilityTypeName = capabilityTypeName;
    return this;
  }

   /**
   * 
   * @return capabilityTypeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCapabilityTypeName() {
    return capabilityTypeName;
  }


  public void setCapabilityTypeName(String capabilityTypeName) {
    this.capabilityTypeName = capabilityTypeName;
  }


  public ApplicationCapabilityType isImplemented(Boolean isImplemented) {
    
    this.isImplemented = isImplemented;
    return this;
  }

   /**
   * 
   * @return isImplemented
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsImplemented() {
    return isImplemented;
  }


  public void setIsImplemented(Boolean isImplemented) {
    this.isImplemented = isImplemented;
  }


  public ApplicationCapabilityType isInitializedByDefault(Boolean isInitializedByDefault) {
    
    this.isInitializedByDefault = isInitializedByDefault;
    return this;
  }

   /**
   * 
   * @return isInitializedByDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsInitializedByDefault() {
    return isInitializedByDefault;
  }


  public void setIsInitializedByDefault(Boolean isInitializedByDefault) {
    this.isInitializedByDefault = isInitializedByDefault;
  }


  public ApplicationCapabilityType applicationCapabilities(List<ApplicationCapability> applicationCapabilities) {
    
    this.applicationCapabilities = applicationCapabilities;
    return this;
  }

  public ApplicationCapabilityType addApplicationCapabilitiesItem(ApplicationCapability applicationCapabilitiesItem) {
    if (this.applicationCapabilities == null) {
      this.applicationCapabilities = new ArrayList<>();
    }
    this.applicationCapabilities.add(applicationCapabilitiesItem);
    return this;
  }

   /**
   * 
   * @return applicationCapabilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationCapability> getApplicationCapabilities() {
    return applicationCapabilities;
  }


  public void setApplicationCapabilities(List<ApplicationCapability> applicationCapabilities) {
    this.applicationCapabilities = applicationCapabilities;
  }


  public ApplicationCapabilityType applicationCapabilityDomains(List<ApplicationCapabilityDomain> applicationCapabilityDomains) {
    
    this.applicationCapabilityDomains = applicationCapabilityDomains;
    return this;
  }

  public ApplicationCapabilityType addApplicationCapabilityDomainsItem(ApplicationCapabilityDomain applicationCapabilityDomainsItem) {
    if (this.applicationCapabilityDomains == null) {
      this.applicationCapabilityDomains = new ArrayList<>();
    }
    this.applicationCapabilityDomains.add(applicationCapabilityDomainsItem);
    return this;
  }

   /**
   * 
   * @return applicationCapabilityDomains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationCapabilityDomain> getApplicationCapabilityDomains() {
    return applicationCapabilityDomains;
  }


  public void setApplicationCapabilityDomains(List<ApplicationCapabilityDomain> applicationCapabilityDomains) {
    this.applicationCapabilityDomains = applicationCapabilityDomains;
  }


  public ApplicationCapabilityType packageId(Integer packageId) {
    
    this.packageId = packageId;
    return this;
  }

   /**
   * 
   * @return packageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPackageId() {
    return packageId;
  }


  public void setPackageId(Integer packageId) {
    this.packageId = packageId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationCapabilityType applicationCapabilityType = (ApplicationCapabilityType) o;
    return Objects.equals(this.applicationCapabilityTypeId, applicationCapabilityType.applicationCapabilityTypeId) &&
        Objects.equals(this.applicationId, applicationCapabilityType.applicationId) &&
        Objects.equals(this.capabilityTypeId, applicationCapabilityType.capabilityTypeId) &&
        Objects.equals(this.capabilityTypeName, applicationCapabilityType.capabilityTypeName) &&
        Objects.equals(this.isImplemented, applicationCapabilityType.isImplemented) &&
        Objects.equals(this.isInitializedByDefault, applicationCapabilityType.isInitializedByDefault) &&
        Objects.equals(this.applicationCapabilities, applicationCapabilityType.applicationCapabilities) &&
        Objects.equals(this.applicationCapabilityDomains, applicationCapabilityType.applicationCapabilityDomains) &&
        Objects.equals(this.packageId, applicationCapabilityType.packageId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationCapabilityTypeId, applicationId, capabilityTypeId, capabilityTypeName, isImplemented, isInitializedByDefault, applicationCapabilities, applicationCapabilityDomains, packageId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationCapabilityType {\n");
    sb.append("    applicationCapabilityTypeId: ").append(toIndentedString(applicationCapabilityTypeId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    capabilityTypeId: ").append(toIndentedString(capabilityTypeId)).append("\n");
    sb.append("    capabilityTypeName: ").append(toIndentedString(capabilityTypeName)).append("\n");
    sb.append("    isImplemented: ").append(toIndentedString(isImplemented)).append("\n");
    sb.append("    isInitializedByDefault: ").append(toIndentedString(isInitializedByDefault)).append("\n");
    sb.append("    applicationCapabilities: ").append(toIndentedString(applicationCapabilities)).append("\n");
    sb.append("    applicationCapabilityDomains: ").append(toIndentedString(applicationCapabilityDomains)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicationCapabilityTypeId");
    openapiFields.add("applicationId");
    openapiFields.add("capabilityTypeId");
    openapiFields.add("capabilityTypeName");
    openapiFields.add("isImplemented");
    openapiFields.add("isInitializedByDefault");
    openapiFields.add("applicationCapabilities");
    openapiFields.add("applicationCapabilityDomains");
    openapiFields.add("packageId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ApplicationCapabilityType
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ApplicationCapabilityType.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationCapabilityType is not found in the empty JSON string", ApplicationCapabilityType.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ApplicationCapabilityType.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationCapabilityType` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("capabilityTypeName") != null && !jsonObj.get("capabilityTypeName").isJsonNull()) && !jsonObj.get("capabilityTypeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `capabilityTypeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("capabilityTypeName").toString()));
      }
      if (jsonObj.get("applicationCapabilities") != null && !jsonObj.get("applicationCapabilities").isJsonNull()) {
        JsonArray jsonArrayapplicationCapabilities = jsonObj.getAsJsonArray("applicationCapabilities");
        if (jsonArrayapplicationCapabilities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationCapabilities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationCapabilities` to be an array in the JSON string but got `%s`", jsonObj.get("applicationCapabilities").toString()));
          }

          // validate the optional field `applicationCapabilities` (array)
          for (int i = 0; i < jsonArrayapplicationCapabilities.size(); i++) {
            ApplicationCapability.validateJsonObject(jsonArrayapplicationCapabilities.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("applicationCapabilityDomains") != null && !jsonObj.get("applicationCapabilityDomains").isJsonNull()) {
        JsonArray jsonArrayapplicationCapabilityDomains = jsonObj.getAsJsonArray("applicationCapabilityDomains");
        if (jsonArrayapplicationCapabilityDomains != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationCapabilityDomains").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationCapabilityDomains` to be an array in the JSON string but got `%s`", jsonObj.get("applicationCapabilityDomains").toString()));
          }

          // validate the optional field `applicationCapabilityDomains` (array)
          for (int i = 0; i < jsonArrayapplicationCapabilityDomains.size(); i++) {
            ApplicationCapabilityDomain.validateJsonObject(jsonArrayapplicationCapabilityDomains.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationCapabilityType.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationCapabilityType' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationCapabilityType> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationCapabilityType.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationCapabilityType>() {
           @Override
           public void write(JsonWriter out, ApplicationCapabilityType value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationCapabilityType read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApplicationCapabilityType given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApplicationCapabilityType
  * @throws IOException if the JSON string is invalid with respect to ApplicationCapabilityType
  */
  public static ApplicationCapabilityType fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationCapabilityType.class);
  }

 /**
  * Convert an instance of ApplicationCapabilityType to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

