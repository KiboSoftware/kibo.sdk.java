/*
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.settings.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.settings.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.settings.models.BPMConfiguration;
import com.kibocommerce.sdk.settings.models.ConfigurableShipmentRelease;
import com.kibocommerce.sdk.settings.models.CreateShipmentsOnPendingReview;
import com.kibocommerce.sdk.settings.models.FulfillerSettings;
import com.kibocommerce.sdk.settings.models.FulfillmentJobSettings;
import com.kibocommerce.sdk.settings.models.FutureDateLimit;
import com.kibocommerce.sdk.settings.models.ShipToHomeConsolidation;
import com.kibocommerce.sdk.settings.models.ShipToStore;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * FulfillmentSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FulfillmentSettings implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DEFAULT_BACK_ORDER_DAYS = "defaultBackOrderDays";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BACK_ORDER_DAYS)
  private Integer defaultBackOrderDays;

  public static final String SERIALIZED_NAME_PAYMENT_VOID_AND_REAUTH = "paymentVoidAndReauth";
  @SerializedName(SERIALIZED_NAME_PAYMENT_VOID_AND_REAUTH)
  private Boolean paymentVoidAndReauth;

  public static final String SERIALIZED_NAME_FUTURE_INVENTORY_ENABLED = "futureInventoryEnabled";
  @SerializedName(SERIALIZED_NAME_FUTURE_INVENTORY_ENABLED)
  private Boolean futureInventoryEnabled;

  public static final String SERIALIZED_NAME_BPM_CONFIGURATION = "bpmConfiguration";
  @SerializedName(SERIALIZED_NAME_BPM_CONFIGURATION)
  private BPMConfiguration bpmConfiguration;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_FULFILLMENT_JOB_SETTINGS = "fulfillmentJobSettings";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_JOB_SETTINGS)
  private FulfillmentJobSettings fulfillmentJobSettings;

  public static final String SERIALIZED_NAME_SHIP_TO_STORE = "shipToStore";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_STORE)
  private ShipToStore shipToStore;

  public static final String SERIALIZED_NAME_SHIP_TO_HOME_CONSOLIDATION = "shipToHomeConsolidation";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_HOME_CONSOLIDATION)
  private ShipToHomeConsolidation shipToHomeConsolidation;

  public static final String SERIALIZED_NAME_CREATE_SHIPMENTS_ON_PENDING_REVIEW = "createShipmentsOnPendingReview";
  @SerializedName(SERIALIZED_NAME_CREATE_SHIPMENTS_ON_PENDING_REVIEW)
  private CreateShipmentsOnPendingReview createShipmentsOnPendingReview;

  public static final String SERIALIZED_NAME_FUTURE_DATE_LIMIT = "futureDateLimit";
  @SerializedName(SERIALIZED_NAME_FUTURE_DATE_LIMIT)
  private FutureDateLimit futureDateLimit;

  public static final String SERIALIZED_NAME_FULFILLER_SETTINGS = "fulfillerSettings";
  @SerializedName(SERIALIZED_NAME_FULFILLER_SETTINGS)
  private FulfillerSettings fulfillerSettings;

  public static final String SERIALIZED_NAME_ACTION_ON_B_O_P_I_S_REJECT = "actionOnBOPISReject";
  @SerializedName(SERIALIZED_NAME_ACTION_ON_B_O_P_I_S_REJECT)
  private String actionOnBOPISReject;

  public static final String SERIALIZED_NAME_CONFIGURABLE_SHIPMENT_RELEASE = "configurableShipmentRelease";
  @SerializedName(SERIALIZED_NAME_CONFIGURABLE_SHIPMENT_RELEASE)
  private ConfigurableShipmentRelease configurableShipmentRelease;

  public FulfillmentSettings() {
  }

  public FulfillmentSettings defaultBackOrderDays(Integer defaultBackOrderDays) {
    
    this.defaultBackOrderDays = defaultBackOrderDays;
    return this;
  }

   /**
   * Get defaultBackOrderDays
   * @return defaultBackOrderDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDefaultBackOrderDays() {
    return defaultBackOrderDays;
  }


  public void setDefaultBackOrderDays(Integer defaultBackOrderDays) {
    this.defaultBackOrderDays = defaultBackOrderDays;
  }


  public FulfillmentSettings paymentVoidAndReauth(Boolean paymentVoidAndReauth) {
    
    this.paymentVoidAndReauth = paymentVoidAndReauth;
    return this;
  }

   /**
   * Get paymentVoidAndReauth
   * @return paymentVoidAndReauth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPaymentVoidAndReauth() {
    return paymentVoidAndReauth;
  }


  public void setPaymentVoidAndReauth(Boolean paymentVoidAndReauth) {
    this.paymentVoidAndReauth = paymentVoidAndReauth;
  }


  public FulfillmentSettings futureInventoryEnabled(Boolean futureInventoryEnabled) {
    
    this.futureInventoryEnabled = futureInventoryEnabled;
    return this;
  }

   /**
   * Get futureInventoryEnabled
   * @return futureInventoryEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFutureInventoryEnabled() {
    return futureInventoryEnabled;
  }


  public void setFutureInventoryEnabled(Boolean futureInventoryEnabled) {
    this.futureInventoryEnabled = futureInventoryEnabled;
  }


  public FulfillmentSettings bpmConfiguration(BPMConfiguration bpmConfiguration) {
    
    this.bpmConfiguration = bpmConfiguration;
    return this;
  }

   /**
   * Get bpmConfiguration
   * @return bpmConfiguration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BPMConfiguration getBpmConfiguration() {
    return bpmConfiguration;
  }


  public void setBpmConfiguration(BPMConfiguration bpmConfiguration) {
    this.bpmConfiguration = bpmConfiguration;
  }


  public FulfillmentSettings auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public FulfillmentSettings fulfillmentJobSettings(FulfillmentJobSettings fulfillmentJobSettings) {
    
    this.fulfillmentJobSettings = fulfillmentJobSettings;
    return this;
  }

   /**
   * Get fulfillmentJobSettings
   * @return fulfillmentJobSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentJobSettings getFulfillmentJobSettings() {
    return fulfillmentJobSettings;
  }


  public void setFulfillmentJobSettings(FulfillmentJobSettings fulfillmentJobSettings) {
    this.fulfillmentJobSettings = fulfillmentJobSettings;
  }


  public FulfillmentSettings shipToStore(ShipToStore shipToStore) {
    
    this.shipToStore = shipToStore;
    return this;
  }

   /**
   * Get shipToStore
   * @return shipToStore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShipToStore getShipToStore() {
    return shipToStore;
  }


  public void setShipToStore(ShipToStore shipToStore) {
    this.shipToStore = shipToStore;
  }


  public FulfillmentSettings shipToHomeConsolidation(ShipToHomeConsolidation shipToHomeConsolidation) {
    
    this.shipToHomeConsolidation = shipToHomeConsolidation;
    return this;
  }

   /**
   * Get shipToHomeConsolidation
   * @return shipToHomeConsolidation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShipToHomeConsolidation getShipToHomeConsolidation() {
    return shipToHomeConsolidation;
  }


  public void setShipToHomeConsolidation(ShipToHomeConsolidation shipToHomeConsolidation) {
    this.shipToHomeConsolidation = shipToHomeConsolidation;
  }


  public FulfillmentSettings createShipmentsOnPendingReview(CreateShipmentsOnPendingReview createShipmentsOnPendingReview) {
    
    this.createShipmentsOnPendingReview = createShipmentsOnPendingReview;
    return this;
  }

   /**
   * Get createShipmentsOnPendingReview
   * @return createShipmentsOnPendingReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CreateShipmentsOnPendingReview getCreateShipmentsOnPendingReview() {
    return createShipmentsOnPendingReview;
  }


  public void setCreateShipmentsOnPendingReview(CreateShipmentsOnPendingReview createShipmentsOnPendingReview) {
    this.createShipmentsOnPendingReview = createShipmentsOnPendingReview;
  }


  public FulfillmentSettings futureDateLimit(FutureDateLimit futureDateLimit) {
    
    this.futureDateLimit = futureDateLimit;
    return this;
  }

   /**
   * Get futureDateLimit
   * @return futureDateLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FutureDateLimit getFutureDateLimit() {
    return futureDateLimit;
  }


  public void setFutureDateLimit(FutureDateLimit futureDateLimit) {
    this.futureDateLimit = futureDateLimit;
  }


  public FulfillmentSettings fulfillerSettings(FulfillerSettings fulfillerSettings) {
    
    this.fulfillerSettings = fulfillerSettings;
    return this;
  }

   /**
   * Get fulfillerSettings
   * @return fulfillerSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillerSettings getFulfillerSettings() {
    return fulfillerSettings;
  }


  public void setFulfillerSettings(FulfillerSettings fulfillerSettings) {
    this.fulfillerSettings = fulfillerSettings;
  }


  public FulfillmentSettings actionOnBOPISReject(String actionOnBOPISReject) {
    
    this.actionOnBOPISReject = actionOnBOPISReject;
    return this;
  }

   /**
   * Get actionOnBOPISReject
   * @return actionOnBOPISReject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getActionOnBOPISReject() {
    return actionOnBOPISReject;
  }


  public void setActionOnBOPISReject(String actionOnBOPISReject) {
    this.actionOnBOPISReject = actionOnBOPISReject;
  }


  public FulfillmentSettings configurableShipmentRelease(ConfigurableShipmentRelease configurableShipmentRelease) {
    
    this.configurableShipmentRelease = configurableShipmentRelease;
    return this;
  }

   /**
   * Get configurableShipmentRelease
   * @return configurableShipmentRelease
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ConfigurableShipmentRelease getConfigurableShipmentRelease() {
    return configurableShipmentRelease;
  }


  public void setConfigurableShipmentRelease(ConfigurableShipmentRelease configurableShipmentRelease) {
    this.configurableShipmentRelease = configurableShipmentRelease;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FulfillmentSettings fulfillmentSettings = (FulfillmentSettings) o;
    return Objects.equals(this.defaultBackOrderDays, fulfillmentSettings.defaultBackOrderDays) &&
        Objects.equals(this.paymentVoidAndReauth, fulfillmentSettings.paymentVoidAndReauth) &&
        Objects.equals(this.futureInventoryEnabled, fulfillmentSettings.futureInventoryEnabled) &&
        Objects.equals(this.bpmConfiguration, fulfillmentSettings.bpmConfiguration) &&
        Objects.equals(this.auditInfo, fulfillmentSettings.auditInfo) &&
        Objects.equals(this.fulfillmentJobSettings, fulfillmentSettings.fulfillmentJobSettings) &&
        Objects.equals(this.shipToStore, fulfillmentSettings.shipToStore) &&
        Objects.equals(this.shipToHomeConsolidation, fulfillmentSettings.shipToHomeConsolidation) &&
        Objects.equals(this.createShipmentsOnPendingReview, fulfillmentSettings.createShipmentsOnPendingReview) &&
        Objects.equals(this.futureDateLimit, fulfillmentSettings.futureDateLimit) &&
        Objects.equals(this.fulfillerSettings, fulfillmentSettings.fulfillerSettings) &&
        Objects.equals(this.actionOnBOPISReject, fulfillmentSettings.actionOnBOPISReject) &&
        Objects.equals(this.configurableShipmentRelease, fulfillmentSettings.configurableShipmentRelease);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultBackOrderDays, paymentVoidAndReauth, futureInventoryEnabled, bpmConfiguration, auditInfo, fulfillmentJobSettings, shipToStore, shipToHomeConsolidation, createShipmentsOnPendingReview, futureDateLimit, fulfillerSettings, actionOnBOPISReject, configurableShipmentRelease);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FulfillmentSettings {\n");
    sb.append("    defaultBackOrderDays: ").append(toIndentedString(defaultBackOrderDays)).append("\n");
    sb.append("    paymentVoidAndReauth: ").append(toIndentedString(paymentVoidAndReauth)).append("\n");
    sb.append("    futureInventoryEnabled: ").append(toIndentedString(futureInventoryEnabled)).append("\n");
    sb.append("    bpmConfiguration: ").append(toIndentedString(bpmConfiguration)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    fulfillmentJobSettings: ").append(toIndentedString(fulfillmentJobSettings)).append("\n");
    sb.append("    shipToStore: ").append(toIndentedString(shipToStore)).append("\n");
    sb.append("    shipToHomeConsolidation: ").append(toIndentedString(shipToHomeConsolidation)).append("\n");
    sb.append("    createShipmentsOnPendingReview: ").append(toIndentedString(createShipmentsOnPendingReview)).append("\n");
    sb.append("    futureDateLimit: ").append(toIndentedString(futureDateLimit)).append("\n");
    sb.append("    fulfillerSettings: ").append(toIndentedString(fulfillerSettings)).append("\n");
    sb.append("    actionOnBOPISReject: ").append(toIndentedString(actionOnBOPISReject)).append("\n");
    sb.append("    configurableShipmentRelease: ").append(toIndentedString(configurableShipmentRelease)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("defaultBackOrderDays");
    openapiFields.add("paymentVoidAndReauth");
    openapiFields.add("futureInventoryEnabled");
    openapiFields.add("bpmConfiguration");
    openapiFields.add("auditInfo");
    openapiFields.add("fulfillmentJobSettings");
    openapiFields.add("shipToStore");
    openapiFields.add("shipToHomeConsolidation");
    openapiFields.add("createShipmentsOnPendingReview");
    openapiFields.add("futureDateLimit");
    openapiFields.add("fulfillerSettings");
    openapiFields.add("actionOnBOPISReject");
    openapiFields.add("configurableShipmentRelease");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FulfillmentSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FulfillmentSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FulfillmentSettings is not found in the empty JSON string", FulfillmentSettings.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!FulfillmentSettings.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FulfillmentSettings` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `bpmConfiguration`
      if (jsonObj.get("bpmConfiguration") != null && !jsonObj.get("bpmConfiguration").isJsonNull()) {
        BPMConfiguration.validateJsonObject(jsonObj.getAsJsonObject("bpmConfiguration"));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      // validate the optional field `fulfillmentJobSettings`
      if (jsonObj.get("fulfillmentJobSettings") != null && !jsonObj.get("fulfillmentJobSettings").isJsonNull()) {
        FulfillmentJobSettings.validateJsonObject(jsonObj.getAsJsonObject("fulfillmentJobSettings"));
      }
      // validate the optional field `shipToStore`
      if (jsonObj.get("shipToStore") != null && !jsonObj.get("shipToStore").isJsonNull()) {
        ShipToStore.validateJsonObject(jsonObj.getAsJsonObject("shipToStore"));
      }
      // validate the optional field `shipToHomeConsolidation`
      if (jsonObj.get("shipToHomeConsolidation") != null && !jsonObj.get("shipToHomeConsolidation").isJsonNull()) {
        ShipToHomeConsolidation.validateJsonObject(jsonObj.getAsJsonObject("shipToHomeConsolidation"));
      }
      // validate the optional field `createShipmentsOnPendingReview`
      if (jsonObj.get("createShipmentsOnPendingReview") != null && !jsonObj.get("createShipmentsOnPendingReview").isJsonNull()) {
        CreateShipmentsOnPendingReview.validateJsonObject(jsonObj.getAsJsonObject("createShipmentsOnPendingReview"));
      }
      // validate the optional field `futureDateLimit`
      if (jsonObj.get("futureDateLimit") != null && !jsonObj.get("futureDateLimit").isJsonNull()) {
        FutureDateLimit.validateJsonObject(jsonObj.getAsJsonObject("futureDateLimit"));
      }
      // validate the optional field `fulfillerSettings`
      if (jsonObj.get("fulfillerSettings") != null && !jsonObj.get("fulfillerSettings").isJsonNull()) {
        FulfillerSettings.validateJsonObject(jsonObj.getAsJsonObject("fulfillerSettings"));
      }
      if ((jsonObj.get("actionOnBOPISReject") != null && !jsonObj.get("actionOnBOPISReject").isJsonNull()) && !jsonObj.get("actionOnBOPISReject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actionOnBOPISReject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actionOnBOPISReject").toString()));
      }
      // validate the optional field `configurableShipmentRelease`
      if (jsonObj.get("configurableShipmentRelease") != null && !jsonObj.get("configurableShipmentRelease").isJsonNull()) {
        ConfigurableShipmentRelease.validateJsonObject(jsonObj.getAsJsonObject("configurableShipmentRelease"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FulfillmentSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FulfillmentSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FulfillmentSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FulfillmentSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<FulfillmentSettings>() {
           @Override
           public void write(JsonWriter out, FulfillmentSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FulfillmentSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FulfillmentSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FulfillmentSettings
  * @throws IOException if the JSON string is invalid with respect to FulfillmentSettings
  */
  public static FulfillmentSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FulfillmentSettings.class);
  }

 /**
  * Convert an instance of FulfillmentSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

