/*
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.settings.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.settings.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.settings.models.SiteShippingHandlingFee;
import com.kibocommerce.sdk.settings.models.SiteShippingSignatureRequirement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Defines the site setting for the active shipping rate provider that rate provider calculates domestic and international shipping rates.  Your site may have multiple shipping rate providers, for example, FedEx, DHL, USPS. However, only one shipping rate provider can be active at the same time.
 */
@ApiModel(description = "Defines the site setting for the active shipping rate provider that rate provider calculates domestic and international shipping rates.  Your site may have multiple shipping rate providers, for example, FedEx, DHL, USPS. However, only one shipping rate provider can be active at the same time.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SiteShippingSettings implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ORDER_HANDLING_FEE = "orderHandlingFee";
  @SerializedName(SERIALIZED_NAME_ORDER_HANDLING_FEE)
  private SiteShippingHandlingFee orderHandlingFee;

  public static final String SERIALIZED_NAME_SIGNATURE_REQUIREMENT = "signatureRequirement";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_REQUIREMENT)
  private SiteShippingSignatureRequirement signatureRequirement;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public SiteShippingSettings() {
  }

  public SiteShippingSettings orderHandlingFee(SiteShippingHandlingFee orderHandlingFee) {
    
    this.orderHandlingFee = orderHandlingFee;
    return this;
  }

   /**
   * Get orderHandlingFee
   * @return orderHandlingFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SiteShippingHandlingFee getOrderHandlingFee() {
    return orderHandlingFee;
  }


  public void setOrderHandlingFee(SiteShippingHandlingFee orderHandlingFee) {
    this.orderHandlingFee = orderHandlingFee;
  }


  public SiteShippingSettings signatureRequirement(SiteShippingSignatureRequirement signatureRequirement) {
    
    this.signatureRequirement = signatureRequirement;
    return this;
  }

   /**
   * Get signatureRequirement
   * @return signatureRequirement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SiteShippingSignatureRequirement getSignatureRequirement() {
    return signatureRequirement;
  }


  public void setSignatureRequirement(SiteShippingSignatureRequirement signatureRequirement) {
    this.signatureRequirement = signatureRequirement;
  }


  public SiteShippingSettings auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SiteShippingSettings siteShippingSettings = (SiteShippingSettings) o;
    return Objects.equals(this.orderHandlingFee, siteShippingSettings.orderHandlingFee) &&
        Objects.equals(this.signatureRequirement, siteShippingSettings.signatureRequirement) &&
        Objects.equals(this.auditInfo, siteShippingSettings.auditInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderHandlingFee, signatureRequirement, auditInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SiteShippingSettings {\n");
    sb.append("    orderHandlingFee: ").append(toIndentedString(orderHandlingFee)).append("\n");
    sb.append("    signatureRequirement: ").append(toIndentedString(signatureRequirement)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("orderHandlingFee");
    openapiFields.add("signatureRequirement");
    openapiFields.add("auditInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SiteShippingSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SiteShippingSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SiteShippingSettings is not found in the empty JSON string", SiteShippingSettings.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!SiteShippingSettings.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SiteShippingSettings` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `orderHandlingFee`
      if (jsonObj.get("orderHandlingFee") != null && !jsonObj.get("orderHandlingFee").isJsonNull()) {
        SiteShippingHandlingFee.validateJsonObject(jsonObj.getAsJsonObject("orderHandlingFee"));
      }
      // validate the optional field `signatureRequirement`
      if (jsonObj.get("signatureRequirement") != null && !jsonObj.get("signatureRequirement").isJsonNull()) {
        SiteShippingSignatureRequirement.validateJsonObject(jsonObj.getAsJsonObject("signatureRequirement"));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SiteShippingSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SiteShippingSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SiteShippingSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SiteShippingSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<SiteShippingSettings>() {
           @Override
           public void write(JsonWriter out, SiteShippingSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SiteShippingSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SiteShippingSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SiteShippingSettings
  * @throws IOException if the JSON string is invalid with respect to SiteShippingSettings
  */
  public static SiteShippingSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SiteShippingSettings.class);
  }

 /**
  * Convert an instance of SiteShippingSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

