/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Price of the product and currency used.
 */
@ApiModel(description = "Price of the product and currency used.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ProductPublishingInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_PUBLISHED_STATE = "publishedState";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_STATE)
  private String publishedState;

  public static final String SERIALIZED_NAME_LAST_PUBLISHED_BY = "lastPublishedBy";
  @SerializedName(SERIALIZED_NAME_LAST_PUBLISHED_BY)
  private String lastPublishedBy;

  public static final String SERIALIZED_NAME_LAST_PUBLISHED_DATE = "lastPublishedDate";
  @SerializedName(SERIALIZED_NAME_LAST_PUBLISHED_DATE)
  private OffsetDateTime lastPublishedDate;

  public static final String SERIALIZED_NAME_PUBLISH_SET_CODE = "publishSetCode";
  @SerializedName(SERIALIZED_NAME_PUBLISH_SET_CODE)
  private String publishSetCode;

  public ProductPublishingInfo() {
  }

  public ProductPublishingInfo publishedState(String publishedState) {
    
    this.publishedState = publishedState;
    return this;
  }

   /**
   * Get publishedState
   * @return publishedState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPublishedState() {
    return publishedState;
  }


  public void setPublishedState(String publishedState) {
    this.publishedState = publishedState;
  }


  public ProductPublishingInfo lastPublishedBy(String lastPublishedBy) {
    
    this.lastPublishedBy = lastPublishedBy;
    return this;
  }

   /**
   * Get lastPublishedBy
   * @return lastPublishedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastPublishedBy() {
    return lastPublishedBy;
  }


  public void setLastPublishedBy(String lastPublishedBy) {
    this.lastPublishedBy = lastPublishedBy;
  }


  public ProductPublishingInfo lastPublishedDate(OffsetDateTime lastPublishedDate) {
    
    this.lastPublishedDate = lastPublishedDate;
    return this;
  }

   /**
   * Get lastPublishedDate
   * @return lastPublishedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastPublishedDate() {
    return lastPublishedDate;
  }


  public void setLastPublishedDate(OffsetDateTime lastPublishedDate) {
    this.lastPublishedDate = lastPublishedDate;
  }


  public ProductPublishingInfo publishSetCode(String publishSetCode) {
    
    this.publishSetCode = publishSetCode;
    return this;
  }

   /**
   * Get publishSetCode
   * @return publishSetCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPublishSetCode() {
    return publishSetCode;
  }


  public void setPublishSetCode(String publishSetCode) {
    this.publishSetCode = publishSetCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductPublishingInfo productPublishingInfo = (ProductPublishingInfo) o;
    return Objects.equals(this.publishedState, productPublishingInfo.publishedState) &&
        Objects.equals(this.lastPublishedBy, productPublishingInfo.lastPublishedBy) &&
        Objects.equals(this.lastPublishedDate, productPublishingInfo.lastPublishedDate) &&
        Objects.equals(this.publishSetCode, productPublishingInfo.publishSetCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(publishedState, lastPublishedBy, lastPublishedDate, publishSetCode);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductPublishingInfo {\n");
    sb.append("    publishedState: ").append(toIndentedString(publishedState)).append("\n");
    sb.append("    lastPublishedBy: ").append(toIndentedString(lastPublishedBy)).append("\n");
    sb.append("    lastPublishedDate: ").append(toIndentedString(lastPublishedDate)).append("\n");
    sb.append("    publishSetCode: ").append(toIndentedString(publishSetCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("publishedState");
    openapiFields.add("lastPublishedBy");
    openapiFields.add("lastPublishedDate");
    openapiFields.add("publishSetCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ProductPublishingInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ProductPublishingInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProductPublishingInfo is not found in the empty JSON string", ProductPublishingInfo.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ProductPublishingInfo.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProductPublishingInfo` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("publishedState") != null && !jsonObj.get("publishedState").isJsonNull()) && !jsonObj.get("publishedState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publishedState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publishedState").toString()));
      }
      if ((jsonObj.get("lastPublishedBy") != null && !jsonObj.get("lastPublishedBy").isJsonNull()) && !jsonObj.get("lastPublishedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastPublishedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastPublishedBy").toString()));
      }
      if ((jsonObj.get("publishSetCode") != null && !jsonObj.get("publishSetCode").isJsonNull()) && !jsonObj.get("publishSetCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publishSetCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publishSetCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProductPublishingInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProductPublishingInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProductPublishingInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProductPublishingInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ProductPublishingInfo>() {
           @Override
           public void write(JsonWriter out, ProductPublishingInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProductPublishingInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ProductPublishingInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ProductPublishingInfo
  * @throws IOException if the JSON string is invalid with respect to ProductPublishingInfo
  */
  public static ProductPublishingInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProductPublishingInfo.class);
  }

 /**
  * Convert an instance of ProductPublishingInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

