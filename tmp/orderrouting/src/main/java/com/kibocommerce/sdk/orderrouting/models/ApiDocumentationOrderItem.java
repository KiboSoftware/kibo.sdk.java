/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.orderrouting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.orderrouting.models.ExtendedProductInfo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * ApiDocumentationOrderItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApiDocumentationOrderItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_BACKORDERABLE = "backorderable";
  @SerializedName(SERIALIZED_NAME_BACKORDERABLE)
  private Boolean backorderable;

  public static final String SERIALIZED_NAME_CUSTOM_ITEM_DATA = "customItemData";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ITEM_DATA)
  private Object customItemData;

  public static final String SERIALIZED_NAME_EXTENDED_PRODUCT_INFO = "extendedProductInfo";
  @SerializedName(SERIALIZED_NAME_EXTENDED_PRODUCT_INFO)
  private ExtendedProductInfo extendedProductInfo;

  public static final String SERIALIZED_NAME_FUTURE_ORDERABLE = "futureOrderable";
  @SerializedName(SERIALIZED_NAME_FUTURE_ORDERABLE)
  private Boolean futureOrderable;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private Double height;

  public static final String SERIALIZED_NAME_ITEM_DEPENDENCY = "itemDependency";
  @SerializedName(SERIALIZED_NAME_ITEM_DEPENDENCY)
  private Integer itemDependency;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private Double length;

  public static final String SERIALIZED_NAME_ORDER_ITEM_I_D = "orderItemID";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_I_D)
  private Integer orderItemID;

  public static final String SERIALIZED_NAME_PART_NUMBER = "partNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_PRODUCT_TITLE = "productTitle";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TITLE)
  private String productTitle;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_TAXABLE = "taxable";
  @SerializedName(SERIALIZED_NAME_TAXABLE)
  private Boolean taxable;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Double weight;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private Double width;

  public ApiDocumentationOrderItem() {
  }

  public ApiDocumentationOrderItem backorderable(Boolean backorderable) {
    
    this.backorderable = backorderable;
    return this;
  }

   /**
   * Get backorderable
   * @return backorderable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBackorderable() {
    return backorderable;
  }


  public void setBackorderable(Boolean backorderable) {
    this.backorderable = backorderable;
  }


  public ApiDocumentationOrderItem customItemData(Object customItemData) {
    
    this.customItemData = customItemData;
    return this;
  }

   /**
   * Get customItemData
   * @return customItemData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCustomItemData() {
    return customItemData;
  }


  public void setCustomItemData(Object customItemData) {
    this.customItemData = customItemData;
  }


  public ApiDocumentationOrderItem extendedProductInfo(ExtendedProductInfo extendedProductInfo) {
    
    this.extendedProductInfo = extendedProductInfo;
    return this;
  }

   /**
   * Get extendedProductInfo
   * @return extendedProductInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExtendedProductInfo getExtendedProductInfo() {
    return extendedProductInfo;
  }


  public void setExtendedProductInfo(ExtendedProductInfo extendedProductInfo) {
    this.extendedProductInfo = extendedProductInfo;
  }


  public ApiDocumentationOrderItem futureOrderable(Boolean futureOrderable) {
    
    this.futureOrderable = futureOrderable;
    return this;
  }

   /**
   * Get futureOrderable
   * @return futureOrderable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFutureOrderable() {
    return futureOrderable;
  }


  public void setFutureOrderable(Boolean futureOrderable) {
    this.futureOrderable = futureOrderable;
  }


  public ApiDocumentationOrderItem height(Double height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHeight() {
    return height;
  }


  public void setHeight(Double height) {
    this.height = height;
  }


  public ApiDocumentationOrderItem itemDependency(Integer itemDependency) {
    
    this.itemDependency = itemDependency;
    return this;
  }

   /**
   * Get itemDependency
   * @return itemDependency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getItemDependency() {
    return itemDependency;
  }


  public void setItemDependency(Integer itemDependency) {
    this.itemDependency = itemDependency;
  }


  public ApiDocumentationOrderItem length(Double length) {
    
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLength() {
    return length;
  }


  public void setLength(Double length) {
    this.length = length;
  }


  public ApiDocumentationOrderItem orderItemID(Integer orderItemID) {
    
    this.orderItemID = orderItemID;
    return this;
  }

   /**
   * Get orderItemID
   * @return orderItemID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOrderItemID() {
    return orderItemID;
  }


  public void setOrderItemID(Integer orderItemID) {
    this.orderItemID = orderItemID;
  }


  public ApiDocumentationOrderItem partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Get partNumber
   * @return partNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartNumber() {
    return partNumber;
  }


  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public ApiDocumentationOrderItem productTitle(String productTitle) {
    
    this.productTitle = productTitle;
    return this;
  }

   /**
   * Get productTitle
   * @return productTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProductTitle() {
    return productTitle;
  }


  public void setProductTitle(String productTitle) {
    this.productTitle = productTitle;
  }


  public ApiDocumentationOrderItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public ApiDocumentationOrderItem sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public ApiDocumentationOrderItem taxable(Boolean taxable) {
    
    this.taxable = taxable;
    return this;
  }

   /**
   * Get taxable
   * @return taxable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTaxable() {
    return taxable;
  }


  public void setTaxable(Boolean taxable) {
    this.taxable = taxable;
  }


  public ApiDocumentationOrderItem upc(String upc) {
    
    this.upc = upc;
    return this;
  }

   /**
   * Get upc
   * @return upc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpc() {
    return upc;
  }


  public void setUpc(String upc) {
    this.upc = upc;
  }


  public ApiDocumentationOrderItem weight(Double weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeight() {
    return weight;
  }


  public void setWeight(Double weight) {
    this.weight = weight;
  }


  public ApiDocumentationOrderItem width(Double width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWidth() {
    return width;
  }


  public void setWidth(Double width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiDocumentationOrderItem apiDocumentationOrderItem = (ApiDocumentationOrderItem) o;
    return Objects.equals(this.backorderable, apiDocumentationOrderItem.backorderable) &&
        Objects.equals(this.customItemData, apiDocumentationOrderItem.customItemData) &&
        Objects.equals(this.extendedProductInfo, apiDocumentationOrderItem.extendedProductInfo) &&
        Objects.equals(this.futureOrderable, apiDocumentationOrderItem.futureOrderable) &&
        Objects.equals(this.height, apiDocumentationOrderItem.height) &&
        Objects.equals(this.itemDependency, apiDocumentationOrderItem.itemDependency) &&
        Objects.equals(this.length, apiDocumentationOrderItem.length) &&
        Objects.equals(this.orderItemID, apiDocumentationOrderItem.orderItemID) &&
        Objects.equals(this.partNumber, apiDocumentationOrderItem.partNumber) &&
        Objects.equals(this.productTitle, apiDocumentationOrderItem.productTitle) &&
        Objects.equals(this.quantity, apiDocumentationOrderItem.quantity) &&
        Objects.equals(this.sku, apiDocumentationOrderItem.sku) &&
        Objects.equals(this.taxable, apiDocumentationOrderItem.taxable) &&
        Objects.equals(this.upc, apiDocumentationOrderItem.upc) &&
        Objects.equals(this.weight, apiDocumentationOrderItem.weight) &&
        Objects.equals(this.width, apiDocumentationOrderItem.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backorderable, customItemData, extendedProductInfo, futureOrderable, height, itemDependency, length, orderItemID, partNumber, productTitle, quantity, sku, taxable, upc, weight, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiDocumentationOrderItem {\n");
    sb.append("    backorderable: ").append(toIndentedString(backorderable)).append("\n");
    sb.append("    customItemData: ").append(toIndentedString(customItemData)).append("\n");
    sb.append("    extendedProductInfo: ").append(toIndentedString(extendedProductInfo)).append("\n");
    sb.append("    futureOrderable: ").append(toIndentedString(futureOrderable)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    itemDependency: ").append(toIndentedString(itemDependency)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    orderItemID: ").append(toIndentedString(orderItemID)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    productTitle: ").append(toIndentedString(productTitle)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backorderable");
    openapiFields.add("customItemData");
    openapiFields.add("extendedProductInfo");
    openapiFields.add("futureOrderable");
    openapiFields.add("height");
    openapiFields.add("itemDependency");
    openapiFields.add("length");
    openapiFields.add("orderItemID");
    openapiFields.add("partNumber");
    openapiFields.add("productTitle");
    openapiFields.add("quantity");
    openapiFields.add("sku");
    openapiFields.add("taxable");
    openapiFields.add("upc");
    openapiFields.add("weight");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ApiDocumentationOrderItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ApiDocumentationOrderItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiDocumentationOrderItem is not found in the empty JSON string", ApiDocumentationOrderItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ApiDocumentationOrderItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiDocumentationOrderItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `extendedProductInfo`
      if (jsonObj.get("extendedProductInfo") != null && !jsonObj.get("extendedProductInfo").isJsonNull()) {
        ExtendedProductInfo.validateJsonObject(jsonObj.getAsJsonObject("extendedProductInfo"));
      }
      if ((jsonObj.get("partNumber") != null && !jsonObj.get("partNumber").isJsonNull()) && !jsonObj.get("partNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partNumber").toString()));
      }
      if ((jsonObj.get("productTitle") != null && !jsonObj.get("productTitle").isJsonNull()) && !jsonObj.get("productTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productTitle").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiDocumentationOrderItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiDocumentationOrderItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiDocumentationOrderItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiDocumentationOrderItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiDocumentationOrderItem>() {
           @Override
           public void write(JsonWriter out, ApiDocumentationOrderItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiDocumentationOrderItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApiDocumentationOrderItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApiDocumentationOrderItem
  * @throws IOException if the JSON string is invalid with respect to ApiDocumentationOrderItem
  */
  public static ApiDocumentationOrderItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiDocumentationOrderItem.class);
  }

 /**
  * Convert an instance of ApiDocumentationOrderItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

