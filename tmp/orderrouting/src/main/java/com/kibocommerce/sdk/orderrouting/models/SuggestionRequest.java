/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.orderrouting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.orderrouting.models.ApiDocumentationOrderItem;
import com.kibocommerce.sdk.orderrouting.models.ExclusionListEntryLocationCode;
import com.kibocommerce.sdk.orderrouting.models.ExtendedCustomerInfo;
import com.kibocommerce.sdk.orderrouting.models.ExtendedOrderInfo;
import com.kibocommerce.sdk.orderrouting.models.ShippingAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * SuggestionRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SuggestionRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Gets or Sets bundlingStrategy
   */
  @JsonAdapter(BundlingStrategyEnum.Adapter.class)
  public enum BundlingStrategyEnum {
    ITEM_DEPENDENCY("ITEM_DEPENDENCY");

    private String value;

    BundlingStrategyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BundlingStrategyEnum fromValue(String value) {
      for (BundlingStrategyEnum b : BundlingStrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BundlingStrategyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BundlingStrategyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BundlingStrategyEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BundlingStrategyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_BUNDLING_STRATEGY = "bundlingStrategy";
  @SerializedName(SERIALIZED_NAME_BUNDLING_STRATEGY)
  private BundlingStrategyEnum bundlingStrategy;

  public static final String SERIALIZED_NAME_CART_I_D = "cartID";
  @SerializedName(SERIALIZED_NAME_CART_I_D)
  private String cartID;

  public static final String SERIALIZED_NAME_CUSTOM_DATA = "customData";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATA)
  private Map<String, String> customData = null;

  public static final String SERIALIZED_NAME_ENVIRONMENT_I_D = "environmentID";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT_I_D)
  private Integer environmentID;

  public static final String SERIALIZED_NAME_EXCLUSION_LIST_LOCATION_CODE = "exclusionListLocationCode";
  @SerializedName(SERIALIZED_NAME_EXCLUSION_LIST_LOCATION_CODE)
  private List<ExclusionListEntryLocationCode> exclusionListLocationCode = null;

  public static final String SERIALIZED_NAME_EXTENDED_CUSTOMER_INFO = "extendedCustomerInfo";
  @SerializedName(SERIALIZED_NAME_EXTENDED_CUSTOMER_INFO)
  private ExtendedCustomerInfo extendedCustomerInfo;

  public static final String SERIALIZED_NAME_EXTENDED_ORDER_INFO = "extendedOrderInfo";
  @SerializedName(SERIALIZED_NAME_EXTENDED_ORDER_INFO)
  private ExtendedOrderInfo extendedOrderInfo;

  public static final String SERIALIZED_NAME_EXTERNAL_RESPONSE_I_D = "externalResponseID";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_RESPONSE_I_D)
  private String externalResponseID;

  public static final String SERIALIZED_NAME_FRAUD = "fraud";
  @SerializedName(SERIALIZED_NAME_FRAUD)
  private Integer fraud;

  public static final String SERIALIZED_NAME_FUTURE_DATE_LIMIT = "futureDateLimit";
  @SerializedName(SERIALIZED_NAME_FUTURE_DATE_LIMIT)
  private OffsetDateTime futureDateLimit;

  public static final String SERIALIZED_NAME_FUTURE_EXCLUSION_LIST_LOCATION_CODE = "futureExclusionListLocationCode";
  @SerializedName(SERIALIZED_NAME_FUTURE_EXCLUSION_LIST_LOCATION_CODE)
  private List<ExclusionListEntryLocationCode> futureExclusionListLocationCode = null;

  /**
   * Gets or Sets inventoryRequestType
   */
  @JsonAdapter(InventoryRequestTypeEnum.Adapter.class)
  public enum InventoryRequestTypeEnum {
    ALL("ALL"),
    
    PARTIAL("PARTIAL"),
    
    ANY("ANY"),
    
    ALL_STORES("ALL_STORES");

    private String value;

    InventoryRequestTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InventoryRequestTypeEnum fromValue(String value) {
      for (InventoryRequestTypeEnum b : InventoryRequestTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InventoryRequestTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InventoryRequestTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InventoryRequestTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InventoryRequestTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INVENTORY_REQUEST_TYPE = "inventoryRequestType";
  @SerializedName(SERIALIZED_NAME_INVENTORY_REQUEST_TYPE)
  private InventoryRequestTypeEnum inventoryRequestType;

  public static final String SERIALIZED_NAME_IS_EXPRESS = "isExpress";
  @SerializedName(SERIALIZED_NAME_IS_EXPRESS)
  private Boolean isExpress;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<ApiDocumentationOrderItem> items = null;

  public static final String SERIALIZED_NAME_LOCATION_CODE_WHITE_LIST = "locationCodeWhiteList";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE_WHITE_LIST)
  private List<String> locationCodeWhiteList = null;

  public static final String SERIALIZED_NAME_NUM_SHIPMENTS_NOT_IN_REQUEST = "numShipmentsNotInRequest";
  @SerializedName(SERIALIZED_NAME_NUM_SHIPMENTS_NOT_IN_REQUEST)
  private Integer numShipmentsNotInRequest;

  public static final String SERIALIZED_NAME_ORDER_I_D = "orderID";
  @SerializedName(SERIALIZED_NAME_ORDER_I_D)
  private Integer orderID;

  /**
   * Gets or Sets orderType
   */
  @JsonAdapter(OrderTypeEnum.Adapter.class)
  public enum OrderTypeEnum {
    DIRECTSHIP("DIRECTSHIP"),
    
    TRANSFER("TRANSFER"),
    
    STH_CONSOLIDATED("STH_CONSOLIDATED");

    private String value;

    OrderTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderTypeEnum fromValue(String value) {
      for (OrderTypeEnum b : OrderTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OrderTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrderTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ORDER_TYPE = "orderType";
  @SerializedName(SERIALIZED_NAME_ORDER_TYPE)
  private OrderTypeEnum orderType;

  public static final String SERIALIZED_NAME_PICKUP_LOCATION_CODE = "pickupLocationCode";
  @SerializedName(SERIALIZED_NAME_PICKUP_LOCATION_CODE)
  private String pickupLocationCode;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "shippingAddress";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private ShippingAddress shippingAddress;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = null;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private BigDecimal total;

  public SuggestionRequest() {
  }

  public SuggestionRequest bundlingStrategy(BundlingStrategyEnum bundlingStrategy) {
    
    this.bundlingStrategy = bundlingStrategy;
    return this;
  }

   /**
   * Get bundlingStrategy
   * @return bundlingStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BundlingStrategyEnum getBundlingStrategy() {
    return bundlingStrategy;
  }


  public void setBundlingStrategy(BundlingStrategyEnum bundlingStrategy) {
    this.bundlingStrategy = bundlingStrategy;
  }


  public SuggestionRequest cartID(String cartID) {
    
    this.cartID = cartID;
    return this;
  }

   /**
   * Get cartID
   * @return cartID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCartID() {
    return cartID;
  }


  public void setCartID(String cartID) {
    this.cartID = cartID;
  }


  public SuggestionRequest customData(Map<String, String> customData) {
    
    this.customData = customData;
    return this;
  }

  public SuggestionRequest putCustomDataItem(String key, String customDataItem) {
    if (this.customData == null) {
      this.customData = new HashMap<>();
    }
    this.customData.put(key, customDataItem);
    return this;
  }

   /**
   * Get customData
   * @return customData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getCustomData() {
    return customData;
  }


  public void setCustomData(Map<String, String> customData) {
    this.customData = customData;
  }


  public SuggestionRequest environmentID(Integer environmentID) {
    
    this.environmentID = environmentID;
    return this;
  }

   /**
   * Get environmentID
   * @return environmentID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEnvironmentID() {
    return environmentID;
  }


  public void setEnvironmentID(Integer environmentID) {
    this.environmentID = environmentID;
  }


  public SuggestionRequest exclusionListLocationCode(List<ExclusionListEntryLocationCode> exclusionListLocationCode) {
    
    this.exclusionListLocationCode = exclusionListLocationCode;
    return this;
  }

  public SuggestionRequest addExclusionListLocationCodeItem(ExclusionListEntryLocationCode exclusionListLocationCodeItem) {
    if (this.exclusionListLocationCode == null) {
      this.exclusionListLocationCode = new ArrayList<>();
    }
    this.exclusionListLocationCode.add(exclusionListLocationCodeItem);
    return this;
  }

   /**
   * Get exclusionListLocationCode
   * @return exclusionListLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ExclusionListEntryLocationCode> getExclusionListLocationCode() {
    return exclusionListLocationCode;
  }


  public void setExclusionListLocationCode(List<ExclusionListEntryLocationCode> exclusionListLocationCode) {
    this.exclusionListLocationCode = exclusionListLocationCode;
  }


  public SuggestionRequest extendedCustomerInfo(ExtendedCustomerInfo extendedCustomerInfo) {
    
    this.extendedCustomerInfo = extendedCustomerInfo;
    return this;
  }

   /**
   * Get extendedCustomerInfo
   * @return extendedCustomerInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExtendedCustomerInfo getExtendedCustomerInfo() {
    return extendedCustomerInfo;
  }


  public void setExtendedCustomerInfo(ExtendedCustomerInfo extendedCustomerInfo) {
    this.extendedCustomerInfo = extendedCustomerInfo;
  }


  public SuggestionRequest extendedOrderInfo(ExtendedOrderInfo extendedOrderInfo) {
    
    this.extendedOrderInfo = extendedOrderInfo;
    return this;
  }

   /**
   * Get extendedOrderInfo
   * @return extendedOrderInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ExtendedOrderInfo getExtendedOrderInfo() {
    return extendedOrderInfo;
  }


  public void setExtendedOrderInfo(ExtendedOrderInfo extendedOrderInfo) {
    this.extendedOrderInfo = extendedOrderInfo;
  }


  public SuggestionRequest externalResponseID(String externalResponseID) {
    
    this.externalResponseID = externalResponseID;
    return this;
  }

   /**
   * Get externalResponseID
   * @return externalResponseID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalResponseID() {
    return externalResponseID;
  }


  public void setExternalResponseID(String externalResponseID) {
    this.externalResponseID = externalResponseID;
  }


  public SuggestionRequest fraud(Integer fraud) {
    
    this.fraud = fraud;
    return this;
  }

   /**
   * Get fraud
   * @return fraud
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFraud() {
    return fraud;
  }


  public void setFraud(Integer fraud) {
    this.fraud = fraud;
  }


  public SuggestionRequest futureDateLimit(OffsetDateTime futureDateLimit) {
    
    this.futureDateLimit = futureDateLimit;
    return this;
  }

   /**
   * Get futureDateLimit
   * @return futureDateLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getFutureDateLimit() {
    return futureDateLimit;
  }


  public void setFutureDateLimit(OffsetDateTime futureDateLimit) {
    this.futureDateLimit = futureDateLimit;
  }


  public SuggestionRequest futureExclusionListLocationCode(List<ExclusionListEntryLocationCode> futureExclusionListLocationCode) {
    
    this.futureExclusionListLocationCode = futureExclusionListLocationCode;
    return this;
  }

  public SuggestionRequest addFutureExclusionListLocationCodeItem(ExclusionListEntryLocationCode futureExclusionListLocationCodeItem) {
    if (this.futureExclusionListLocationCode == null) {
      this.futureExclusionListLocationCode = new ArrayList<>();
    }
    this.futureExclusionListLocationCode.add(futureExclusionListLocationCodeItem);
    return this;
  }

   /**
   * Get futureExclusionListLocationCode
   * @return futureExclusionListLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ExclusionListEntryLocationCode> getFutureExclusionListLocationCode() {
    return futureExclusionListLocationCode;
  }


  public void setFutureExclusionListLocationCode(List<ExclusionListEntryLocationCode> futureExclusionListLocationCode) {
    this.futureExclusionListLocationCode = futureExclusionListLocationCode;
  }


  public SuggestionRequest inventoryRequestType(InventoryRequestTypeEnum inventoryRequestType) {
    
    this.inventoryRequestType = inventoryRequestType;
    return this;
  }

   /**
   * Get inventoryRequestType
   * @return inventoryRequestType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InventoryRequestTypeEnum getInventoryRequestType() {
    return inventoryRequestType;
  }


  public void setInventoryRequestType(InventoryRequestTypeEnum inventoryRequestType) {
    this.inventoryRequestType = inventoryRequestType;
  }


  public SuggestionRequest isExpress(Boolean isExpress) {
    
    this.isExpress = isExpress;
    return this;
  }

   /**
   * Get isExpress
   * @return isExpress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsExpress() {
    return isExpress;
  }


  public void setIsExpress(Boolean isExpress) {
    this.isExpress = isExpress;
  }


  public SuggestionRequest items(List<ApiDocumentationOrderItem> items) {
    
    this.items = items;
    return this;
  }

  public SuggestionRequest addItemsItem(ApiDocumentationOrderItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApiDocumentationOrderItem> getItems() {
    return items;
  }


  public void setItems(List<ApiDocumentationOrderItem> items) {
    this.items = items;
  }


  public SuggestionRequest locationCodeWhiteList(List<String> locationCodeWhiteList) {
    
    this.locationCodeWhiteList = locationCodeWhiteList;
    return this;
  }

  public SuggestionRequest addLocationCodeWhiteListItem(String locationCodeWhiteListItem) {
    if (this.locationCodeWhiteList == null) {
      this.locationCodeWhiteList = new ArrayList<>();
    }
    this.locationCodeWhiteList.add(locationCodeWhiteListItem);
    return this;
  }

   /**
   * Get locationCodeWhiteList
   * @return locationCodeWhiteList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getLocationCodeWhiteList() {
    return locationCodeWhiteList;
  }


  public void setLocationCodeWhiteList(List<String> locationCodeWhiteList) {
    this.locationCodeWhiteList = locationCodeWhiteList;
  }


  public SuggestionRequest numShipmentsNotInRequest(Integer numShipmentsNotInRequest) {
    
    this.numShipmentsNotInRequest = numShipmentsNotInRequest;
    return this;
  }

   /**
   * Get numShipmentsNotInRequest
   * @return numShipmentsNotInRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumShipmentsNotInRequest() {
    return numShipmentsNotInRequest;
  }


  public void setNumShipmentsNotInRequest(Integer numShipmentsNotInRequest) {
    this.numShipmentsNotInRequest = numShipmentsNotInRequest;
  }


  public SuggestionRequest orderID(Integer orderID) {
    
    this.orderID = orderID;
    return this;
  }

   /**
   * Get orderID
   * @return orderID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOrderID() {
    return orderID;
  }


  public void setOrderID(Integer orderID) {
    this.orderID = orderID;
  }


  public SuggestionRequest orderType(OrderTypeEnum orderType) {
    
    this.orderType = orderType;
    return this;
  }

   /**
   * Get orderType
   * @return orderType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OrderTypeEnum getOrderType() {
    return orderType;
  }


  public void setOrderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
  }


  public SuggestionRequest pickupLocationCode(String pickupLocationCode) {
    
    this.pickupLocationCode = pickupLocationCode;
    return this;
  }

   /**
   * Get pickupLocationCode
   * @return pickupLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPickupLocationCode() {
    return pickupLocationCode;
  }


  public void setPickupLocationCode(String pickupLocationCode) {
    this.pickupLocationCode = pickupLocationCode;
  }


  public SuggestionRequest shippingAddress(ShippingAddress shippingAddress) {
    
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShippingAddress getShippingAddress() {
    return shippingAddress;
  }


  public void setShippingAddress(ShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public SuggestionRequest tags(Map<String, String> tags) {
    
    this.tags = tags;
    return this;
  }

  public SuggestionRequest putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getTags() {
    return tags;
  }


  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public SuggestionRequest total(BigDecimal total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTotal() {
    return total;
  }


  public void setTotal(BigDecimal total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SuggestionRequest suggestionRequest = (SuggestionRequest) o;
    return Objects.equals(this.bundlingStrategy, suggestionRequest.bundlingStrategy) &&
        Objects.equals(this.cartID, suggestionRequest.cartID) &&
        Objects.equals(this.customData, suggestionRequest.customData) &&
        Objects.equals(this.environmentID, suggestionRequest.environmentID) &&
        Objects.equals(this.exclusionListLocationCode, suggestionRequest.exclusionListLocationCode) &&
        Objects.equals(this.extendedCustomerInfo, suggestionRequest.extendedCustomerInfo) &&
        Objects.equals(this.extendedOrderInfo, suggestionRequest.extendedOrderInfo) &&
        Objects.equals(this.externalResponseID, suggestionRequest.externalResponseID) &&
        Objects.equals(this.fraud, suggestionRequest.fraud) &&
        Objects.equals(this.futureDateLimit, suggestionRequest.futureDateLimit) &&
        Objects.equals(this.futureExclusionListLocationCode, suggestionRequest.futureExclusionListLocationCode) &&
        Objects.equals(this.inventoryRequestType, suggestionRequest.inventoryRequestType) &&
        Objects.equals(this.isExpress, suggestionRequest.isExpress) &&
        Objects.equals(this.items, suggestionRequest.items) &&
        Objects.equals(this.locationCodeWhiteList, suggestionRequest.locationCodeWhiteList) &&
        Objects.equals(this.numShipmentsNotInRequest, suggestionRequest.numShipmentsNotInRequest) &&
        Objects.equals(this.orderID, suggestionRequest.orderID) &&
        Objects.equals(this.orderType, suggestionRequest.orderType) &&
        Objects.equals(this.pickupLocationCode, suggestionRequest.pickupLocationCode) &&
        Objects.equals(this.shippingAddress, suggestionRequest.shippingAddress) &&
        Objects.equals(this.tags, suggestionRequest.tags) &&
        Objects.equals(this.total, suggestionRequest.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bundlingStrategy, cartID, customData, environmentID, exclusionListLocationCode, extendedCustomerInfo, extendedOrderInfo, externalResponseID, fraud, futureDateLimit, futureExclusionListLocationCode, inventoryRequestType, isExpress, items, locationCodeWhiteList, numShipmentsNotInRequest, orderID, orderType, pickupLocationCode, shippingAddress, tags, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SuggestionRequest {\n");
    sb.append("    bundlingStrategy: ").append(toIndentedString(bundlingStrategy)).append("\n");
    sb.append("    cartID: ").append(toIndentedString(cartID)).append("\n");
    sb.append("    customData: ").append(toIndentedString(customData)).append("\n");
    sb.append("    environmentID: ").append(toIndentedString(environmentID)).append("\n");
    sb.append("    exclusionListLocationCode: ").append(toIndentedString(exclusionListLocationCode)).append("\n");
    sb.append("    extendedCustomerInfo: ").append(toIndentedString(extendedCustomerInfo)).append("\n");
    sb.append("    extendedOrderInfo: ").append(toIndentedString(extendedOrderInfo)).append("\n");
    sb.append("    externalResponseID: ").append(toIndentedString(externalResponseID)).append("\n");
    sb.append("    fraud: ").append(toIndentedString(fraud)).append("\n");
    sb.append("    futureDateLimit: ").append(toIndentedString(futureDateLimit)).append("\n");
    sb.append("    futureExclusionListLocationCode: ").append(toIndentedString(futureExclusionListLocationCode)).append("\n");
    sb.append("    inventoryRequestType: ").append(toIndentedString(inventoryRequestType)).append("\n");
    sb.append("    isExpress: ").append(toIndentedString(isExpress)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    locationCodeWhiteList: ").append(toIndentedString(locationCodeWhiteList)).append("\n");
    sb.append("    numShipmentsNotInRequest: ").append(toIndentedString(numShipmentsNotInRequest)).append("\n");
    sb.append("    orderID: ").append(toIndentedString(orderID)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    pickupLocationCode: ").append(toIndentedString(pickupLocationCode)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bundlingStrategy");
    openapiFields.add("cartID");
    openapiFields.add("customData");
    openapiFields.add("environmentID");
    openapiFields.add("exclusionListLocationCode");
    openapiFields.add("extendedCustomerInfo");
    openapiFields.add("extendedOrderInfo");
    openapiFields.add("externalResponseID");
    openapiFields.add("fraud");
    openapiFields.add("futureDateLimit");
    openapiFields.add("futureExclusionListLocationCode");
    openapiFields.add("inventoryRequestType");
    openapiFields.add("isExpress");
    openapiFields.add("items");
    openapiFields.add("locationCodeWhiteList");
    openapiFields.add("numShipmentsNotInRequest");
    openapiFields.add("orderID");
    openapiFields.add("orderType");
    openapiFields.add("pickupLocationCode");
    openapiFields.add("shippingAddress");
    openapiFields.add("tags");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SuggestionRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SuggestionRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SuggestionRequest is not found in the empty JSON string", SuggestionRequest.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!SuggestionRequest.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SuggestionRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("bundlingStrategy") != null && !jsonObj.get("bundlingStrategy").isJsonNull()) && !jsonObj.get("bundlingStrategy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bundlingStrategy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bundlingStrategy").toString()));
      }
      if ((jsonObj.get("cartID") != null && !jsonObj.get("cartID").isJsonNull()) && !jsonObj.get("cartID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartID").toString()));
      }
      if (jsonObj.get("exclusionListLocationCode") != null && !jsonObj.get("exclusionListLocationCode").isJsonNull()) {
        JsonArray jsonArrayexclusionListLocationCode = jsonObj.getAsJsonArray("exclusionListLocationCode");
        if (jsonArrayexclusionListLocationCode != null) {
          // ensure the json data is an array
          if (!jsonObj.get("exclusionListLocationCode").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `exclusionListLocationCode` to be an array in the JSON string but got `%s`", jsonObj.get("exclusionListLocationCode").toString()));
          }

          // validate the optional field `exclusionListLocationCode` (array)
          for (int i = 0; i < jsonArrayexclusionListLocationCode.size(); i++) {
            ExclusionListEntryLocationCode.validateJsonObject(jsonArrayexclusionListLocationCode.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `extendedCustomerInfo`
      if (jsonObj.get("extendedCustomerInfo") != null && !jsonObj.get("extendedCustomerInfo").isJsonNull()) {
        ExtendedCustomerInfo.validateJsonObject(jsonObj.getAsJsonObject("extendedCustomerInfo"));
      }
      // validate the optional field `extendedOrderInfo`
      if (jsonObj.get("extendedOrderInfo") != null && !jsonObj.get("extendedOrderInfo").isJsonNull()) {
        ExtendedOrderInfo.validateJsonObject(jsonObj.getAsJsonObject("extendedOrderInfo"));
      }
      if ((jsonObj.get("externalResponseID") != null && !jsonObj.get("externalResponseID").isJsonNull()) && !jsonObj.get("externalResponseID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalResponseID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalResponseID").toString()));
      }
      if (jsonObj.get("futureExclusionListLocationCode") != null && !jsonObj.get("futureExclusionListLocationCode").isJsonNull()) {
        JsonArray jsonArrayfutureExclusionListLocationCode = jsonObj.getAsJsonArray("futureExclusionListLocationCode");
        if (jsonArrayfutureExclusionListLocationCode != null) {
          // ensure the json data is an array
          if (!jsonObj.get("futureExclusionListLocationCode").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `futureExclusionListLocationCode` to be an array in the JSON string but got `%s`", jsonObj.get("futureExclusionListLocationCode").toString()));
          }

          // validate the optional field `futureExclusionListLocationCode` (array)
          for (int i = 0; i < jsonArrayfutureExclusionListLocationCode.size(); i++) {
            ExclusionListEntryLocationCode.validateJsonObject(jsonArrayfutureExclusionListLocationCode.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("inventoryRequestType") != null && !jsonObj.get("inventoryRequestType").isJsonNull()) && !jsonObj.get("inventoryRequestType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventoryRequestType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventoryRequestType").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            ApiDocumentationOrderItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("locationCodeWhiteList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCodeWhiteList` to be an array in the JSON string but got `%s`", jsonObj.get("locationCodeWhiteList").toString()));
      }
      if ((jsonObj.get("orderType") != null && !jsonObj.get("orderType").isJsonNull()) && !jsonObj.get("orderType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderType").toString()));
      }
      if ((jsonObj.get("pickupLocationCode") != null && !jsonObj.get("pickupLocationCode").isJsonNull()) && !jsonObj.get("pickupLocationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pickupLocationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pickupLocationCode").toString()));
      }
      // validate the optional field `shippingAddress`
      if (jsonObj.get("shippingAddress") != null && !jsonObj.get("shippingAddress").isJsonNull()) {
        ShippingAddress.validateJsonObject(jsonObj.getAsJsonObject("shippingAddress"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SuggestionRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SuggestionRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SuggestionRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SuggestionRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SuggestionRequest>() {
           @Override
           public void write(JsonWriter out, SuggestionRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SuggestionRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SuggestionRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SuggestionRequest
  * @throws IOException if the JSON string is invalid with respect to SuggestionRequest
  */
  public static SuggestionRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SuggestionRequest.class);
  }

 /**
  * Convert an instance of SuggestionRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

