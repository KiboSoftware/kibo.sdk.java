/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * OpenAPI spec version: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.kibo.sdk.java.inventory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Export Settings FTP
 */
@ApiModel(description = "Export Settings FTP")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-22T23:27:35.732-05:00[America/Chicago]")
public class ExportSettingsFTP {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_EXPORT_SETTINGS_I_D = "exportSettingsID";
  @SerializedName(SERIALIZED_NAME_EXPORT_SETTINGS_I_D)
  private Integer exportSettingsID;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_FTP_SERVER = "ftpServer";
  @SerializedName(SERIALIZED_NAME_FTP_SERVER)
  private String ftpServer;

  public static final String SERIALIZED_NAME_FTP_PORT = "ftpPort";
  @SerializedName(SERIALIZED_NAME_FTP_PORT)
  private Integer ftpPort;

  public static final String SERIALIZED_NAME_FTP_DIRECTORY = "ftpDirectory";
  @SerializedName(SERIALIZED_NAME_FTP_DIRECTORY)
  private String ftpDirectory;

  public static final String SERIALIZED_NAME_FTP_DIRECTORY_CONTROL_FILE = "ftpDirectoryControlFile";
  @SerializedName(SERIALIZED_NAME_FTP_DIRECTORY_CONTROL_FILE)
  private String ftpDirectoryControlFile;

  public static final String SERIALIZED_NAME_FTP_USER = "ftpUser";
  @SerializedName(SERIALIZED_NAME_FTP_USER)
  private String ftpUser;

  public static final String SERIALIZED_NAME_FTP_PASSWORD = "ftpPassword";
  @SerializedName(SERIALIZED_NAME_FTP_PASSWORD)
  private String ftpPassword;

  public static final String SERIALIZED_NAME_DELIVERY_CLASS = "deliveryClass";
  @SerializedName(SERIALIZED_NAME_DELIVERY_CLASS)
  private String deliveryClass;

  public static final String SERIALIZED_NAME_CONTROL_FILE = "controlFile";
  @SerializedName(SERIALIZED_NAME_CONTROL_FILE)
  private String controlFile;

  public static final String SERIALIZED_NAME_CONTROL_FILE_EMAIL = "controlFileEmail";
  @SerializedName(SERIALIZED_NAME_CONTROL_FILE_EMAIL)
  private String controlFileEmail;

  public static final String SERIALIZED_NAME_REMOTE_FILE_NAME = "remoteFileName";
  @SerializedName(SERIALIZED_NAME_REMOTE_FILE_NAME)
  private String remoteFileName;

  public static final String SERIALIZED_NAME_CONTROL_FILE_NAME = "controlFileName";
  @SerializedName(SERIALIZED_NAME_CONTROL_FILE_NAME)
  private String controlFileName;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_ENVIRONMENT = "environment";
  @SerializedName(SERIALIZED_NAME_ENVIRONMENT)
  private String environment;

  public ExportSettingsFTP active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Flag for Active State
   * @return active
  **/
  @ApiModelProperty(value = "Flag for Active State")
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public ExportSettingsFTP exportSettingsID(Integer exportSettingsID) {
    this.exportSettingsID = exportSettingsID;
    return this;
  }

   /**
   * Export Settings ID
   * @return exportSettingsID
  **/
  @ApiModelProperty(value = "Export Settings ID")
  public Integer getExportSettingsID() {
    return exportSettingsID;
  }

  public void setExportSettingsID(Integer exportSettingsID) {
    this.exportSettingsID = exportSettingsID;
  }

  public ExportSettingsFTP name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Export Settings FTP Name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Export Settings FTP Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ExportSettingsFTP ftpServer(String ftpServer) {
    this.ftpServer = ftpServer;
    return this;
  }

   /**
   * FTP Server Address
   * @return ftpServer
  **/
  @ApiModelProperty(required = true, value = "FTP Server Address")
  public String getFtpServer() {
    return ftpServer;
  }

  public void setFtpServer(String ftpServer) {
    this.ftpServer = ftpServer;
  }

  public ExportSettingsFTP ftpPort(Integer ftpPort) {
    this.ftpPort = ftpPort;
    return this;
  }

   /**
   * FTP Server Port
   * @return ftpPort
  **/
  @ApiModelProperty(required = true, value = "FTP Server Port")
  public Integer getFtpPort() {
    return ftpPort;
  }

  public void setFtpPort(Integer ftpPort) {
    this.ftpPort = ftpPort;
  }

  public ExportSettingsFTP ftpDirectory(String ftpDirectory) {
    this.ftpDirectory = ftpDirectory;
    return this;
  }

   /**
   * FTP Server Directory
   * @return ftpDirectory
  **/
  @ApiModelProperty(required = true, value = "FTP Server Directory")
  public String getFtpDirectory() {
    return ftpDirectory;
  }

  public void setFtpDirectory(String ftpDirectory) {
    this.ftpDirectory = ftpDirectory;
  }

  public ExportSettingsFTP ftpDirectoryControlFile(String ftpDirectoryControlFile) {
    this.ftpDirectoryControlFile = ftpDirectoryControlFile;
    return this;
  }

   /**
   * FTP Server Control File Directory
   * @return ftpDirectoryControlFile
  **/
  @ApiModelProperty(value = "FTP Server Control File Directory")
  public String getFtpDirectoryControlFile() {
    return ftpDirectoryControlFile;
  }

  public void setFtpDirectoryControlFile(String ftpDirectoryControlFile) {
    this.ftpDirectoryControlFile = ftpDirectoryControlFile;
  }

  public ExportSettingsFTP ftpUser(String ftpUser) {
    this.ftpUser = ftpUser;
    return this;
  }

   /**
   * FTP Username
   * @return ftpUser
  **/
  @ApiModelProperty(value = "FTP Username")
  public String getFtpUser() {
    return ftpUser;
  }

  public void setFtpUser(String ftpUser) {
    this.ftpUser = ftpUser;
  }

  public ExportSettingsFTP ftpPassword(String ftpPassword) {
    this.ftpPassword = ftpPassword;
    return this;
  }

   /**
   * FTP Password
   * @return ftpPassword
  **/
  @ApiModelProperty(value = "FTP Password")
  public String getFtpPassword() {
    return ftpPassword;
  }

  public void setFtpPassword(String ftpPassword) {
    this.ftpPassword = ftpPassword;
  }

  public ExportSettingsFTP deliveryClass(String deliveryClass) {
    this.deliveryClass = deliveryClass;
    return this;
  }

   /**
   * FTP Delivery Class. Defaults to ExportDeliveryDefault
   * @return deliveryClass
  **/
  @ApiModelProperty(value = "FTP Delivery Class. Defaults to ExportDeliveryDefault")
  public String getDeliveryClass() {
    return deliveryClass;
  }

  public void setDeliveryClass(String deliveryClass) {
    this.deliveryClass = deliveryClass;
  }

  public ExportSettingsFTP controlFile(String controlFile) {
    this.controlFile = controlFile;
    return this;
  }

   /**
   * Control File
   * @return controlFile
  **/
  @ApiModelProperty(value = "Control File")
  public String getControlFile() {
    return controlFile;
  }

  public void setControlFile(String controlFile) {
    this.controlFile = controlFile;
  }

  public ExportSettingsFTP controlFileEmail(String controlFileEmail) {
    this.controlFileEmail = controlFileEmail;
    return this;
  }

   /**
   * Control File Email
   * @return controlFileEmail
  **/
  @ApiModelProperty(value = "Control File Email")
  public String getControlFileEmail() {
    return controlFileEmail;
  }

  public void setControlFileEmail(String controlFileEmail) {
    this.controlFileEmail = controlFileEmail;
  }

  public ExportSettingsFTP remoteFileName(String remoteFileName) {
    this.remoteFileName = remoteFileName;
    return this;
  }

   /**
   * Remote File Name
   * @return remoteFileName
  **/
  @ApiModelProperty(value = "Remote File Name")
  public String getRemoteFileName() {
    return remoteFileName;
  }

  public void setRemoteFileName(String remoteFileName) {
    this.remoteFileName = remoteFileName;
  }

  public ExportSettingsFTP controlFileName(String controlFileName) {
    this.controlFileName = controlFileName;
    return this;
  }

   /**
   * Control File Name
   * @return controlFileName
  **/
  @ApiModelProperty(value = "Control File Name")
  public String getControlFileName() {
    return controlFileName;
  }

  public void setControlFileName(String controlFileName) {
    this.controlFileName = controlFileName;
  }

  public ExportSettingsFTP endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

   /**
   * Endpoint
   * @return endpoint
  **/
  @ApiModelProperty(value = "Endpoint")
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  public ExportSettingsFTP environment(String environment) {
    this.environment = environment;
    return this;
  }

   /**
   * Environment
   * @return environment
  **/
  @ApiModelProperty(value = "Environment")
  public String getEnvironment() {
    return environment;
  }

  public void setEnvironment(String environment) {
    this.environment = environment;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExportSettingsFTP exportSettingsFTP = (ExportSettingsFTP) o;
    return Objects.equals(this.active, exportSettingsFTP.active) &&
        Objects.equals(this.exportSettingsID, exportSettingsFTP.exportSettingsID) &&
        Objects.equals(this.name, exportSettingsFTP.name) &&
        Objects.equals(this.ftpServer, exportSettingsFTP.ftpServer) &&
        Objects.equals(this.ftpPort, exportSettingsFTP.ftpPort) &&
        Objects.equals(this.ftpDirectory, exportSettingsFTP.ftpDirectory) &&
        Objects.equals(this.ftpDirectoryControlFile, exportSettingsFTP.ftpDirectoryControlFile) &&
        Objects.equals(this.ftpUser, exportSettingsFTP.ftpUser) &&
        Objects.equals(this.ftpPassword, exportSettingsFTP.ftpPassword) &&
        Objects.equals(this.deliveryClass, exportSettingsFTP.deliveryClass) &&
        Objects.equals(this.controlFile, exportSettingsFTP.controlFile) &&
        Objects.equals(this.controlFileEmail, exportSettingsFTP.controlFileEmail) &&
        Objects.equals(this.remoteFileName, exportSettingsFTP.remoteFileName) &&
        Objects.equals(this.controlFileName, exportSettingsFTP.controlFileName) &&
        Objects.equals(this.endpoint, exportSettingsFTP.endpoint) &&
        Objects.equals(this.environment, exportSettingsFTP.environment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, exportSettingsID, name, ftpServer, ftpPort, ftpDirectory, ftpDirectoryControlFile, ftpUser, ftpPassword, deliveryClass, controlFile, controlFileEmail, remoteFileName, controlFileName, endpoint, environment);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExportSettingsFTP {\n");
    
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    exportSettingsID: ").append(toIndentedString(exportSettingsID)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ftpServer: ").append(toIndentedString(ftpServer)).append("\n");
    sb.append("    ftpPort: ").append(toIndentedString(ftpPort)).append("\n");
    sb.append("    ftpDirectory: ").append(toIndentedString(ftpDirectory)).append("\n");
    sb.append("    ftpDirectoryControlFile: ").append(toIndentedString(ftpDirectoryControlFile)).append("\n");
    sb.append("    ftpUser: ").append(toIndentedString(ftpUser)).append("\n");
    sb.append("    ftpPassword: ").append(toIndentedString(ftpPassword)).append("\n");
    sb.append("    deliveryClass: ").append(toIndentedString(deliveryClass)).append("\n");
    sb.append("    controlFile: ").append(toIndentedString(controlFile)).append("\n");
    sb.append("    controlFileEmail: ").append(toIndentedString(controlFileEmail)).append("\n");
    sb.append("    remoteFileName: ").append(toIndentedString(remoteFileName)).append("\n");
    sb.append("    controlFileName: ").append(toIndentedString(controlFileName)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    environment: ").append(toIndentedString(environment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

