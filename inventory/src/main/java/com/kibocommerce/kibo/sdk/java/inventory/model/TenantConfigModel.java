/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * OpenAPI spec version: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.kibo.sdk.java.inventory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Model of a tenant config.
 */
@ApiModel(description = "Model of a tenant config.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-22T23:27:35.732-05:00[America/Chicago]")
public class TenantConfigModel {
  public static final String SERIALIZED_NAME_TENANT_I_D = "tenantID";
  @SerializedName(SERIALIZED_NAME_TENANT_I_D)
  private Integer tenantID;

  public static final String SERIALIZED_NAME_NUM_EVENT_SENDER_WORKERS = "numEventSenderWorkers";
  @SerializedName(SERIALIZED_NAME_NUM_EVENT_SENDER_WORKERS)
  private Integer numEventSenderWorkers;

  public static final String SERIALIZED_NAME_FETCH_WORKER_CONFIG_IDS = "fetchWorkerConfigIds";
  @SerializedName(SERIALIZED_NAME_FETCH_WORKER_CONFIG_IDS)
  private List<String> fetchWorkerConfigIds = null;

  public static final String SERIALIZED_NAME_EVENTS_TO_SEND = "eventsToSend";
  @SerializedName(SERIALIZED_NAME_EVENTS_TO_SEND)
  private String eventsToSend;

  public static final String SERIALIZED_NAME_ENABLE_SYNC_API = "enableSyncApi";
  @SerializedName(SERIALIZED_NAME_ENABLE_SYNC_API)
  private Boolean enableSyncApi;

  public TenantConfigModel tenantID(Integer tenantID) {
    this.tenantID = tenantID;
    return this;
  }

   /**
   * A Tenant ID
   * @return tenantID
  **/
  @ApiModelProperty(value = "A Tenant ID")
  public Integer getTenantID() {
    return tenantID;
  }

  public void setTenantID(Integer tenantID) {
    this.tenantID = tenantID;
  }

  public TenantConfigModel numEventSenderWorkers(Integer numEventSenderWorkers) {
    this.numEventSenderWorkers = numEventSenderWorkers;
    return this;
  }

   /**
   * Number of Event Sender Workers to run for this tenant.
   * @return numEventSenderWorkers
  **/
  @ApiModelProperty(value = "Number of Event Sender Workers to run for this tenant.")
  public Integer getNumEventSenderWorkers() {
    return numEventSenderWorkers;
  }

  public void setNumEventSenderWorkers(Integer numEventSenderWorkers) {
    this.numEventSenderWorkers = numEventSenderWorkers;
  }

  public TenantConfigModel fetchWorkerConfigIds(List<String> fetchWorkerConfigIds) {
    this.fetchWorkerConfigIds = fetchWorkerConfigIds;
    return this;
  }

  public TenantConfigModel addFetchWorkerConfigIdsItem(String fetchWorkerConfigIdsItem) {
    if (this.fetchWorkerConfigIds == null) {
      this.fetchWorkerConfigIds = new ArrayList<String>();
    }
    this.fetchWorkerConfigIds.add(fetchWorkerConfigIdsItem);
    return this;
  }

   /**
   * Config IDs of Fetch Worker Configs to regularly run. Set this to [0] to run all configs.
   * @return fetchWorkerConfigIds
  **/
  @ApiModelProperty(value = "Config IDs of Fetch Worker Configs to regularly run. Set this to [0] to run all configs.")
  public List<String> getFetchWorkerConfigIds() {
    return fetchWorkerConfigIds;
  }

  public void setFetchWorkerConfigIds(List<String> fetchWorkerConfigIds) {
    this.fetchWorkerConfigIds = fetchWorkerConfigIds;
  }

  public TenantConfigModel eventsToSend(String eventsToSend) {
    this.eventsToSend = eventsToSend;
    return this;
  }

   /**
   * What level of events to send. Must be one of: NO_REFRESH_LOGS, WITH_REFRESH_LOGS, WITH_BASIC_EVENTS, ALL
   * @return eventsToSend
  **/
  @ApiModelProperty(value = "What level of events to send. Must be one of: NO_REFRESH_LOGS, WITH_REFRESH_LOGS, WITH_BASIC_EVENTS, ALL")
  public String getEventsToSend() {
    return eventsToSend;
  }

  public void setEventsToSend(String eventsToSend) {
    this.eventsToSend = eventsToSend;
  }

  public TenantConfigModel enableSyncApi(Boolean enableSyncApi) {
    this.enableSyncApi = enableSyncApi;
    return this;
  }

   /**
   * Whether our secret sync api is enabled for this tenant.
   * @return enableSyncApi
  **/
  @ApiModelProperty(value = "Whether our secret sync api is enabled for this tenant.")
  public Boolean getEnableSyncApi() {
    return enableSyncApi;
  }

  public void setEnableSyncApi(Boolean enableSyncApi) {
    this.enableSyncApi = enableSyncApi;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TenantConfigModel tenantConfigModel = (TenantConfigModel) o;
    return Objects.equals(this.tenantID, tenantConfigModel.tenantID) &&
        Objects.equals(this.numEventSenderWorkers, tenantConfigModel.numEventSenderWorkers) &&
        Objects.equals(this.fetchWorkerConfigIds, tenantConfigModel.fetchWorkerConfigIds) &&
        Objects.equals(this.eventsToSend, tenantConfigModel.eventsToSend) &&
        Objects.equals(this.enableSyncApi, tenantConfigModel.enableSyncApi);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tenantID, numEventSenderWorkers, fetchWorkerConfigIds, eventsToSend, enableSyncApi);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TenantConfigModel {\n");
    
    sb.append("    tenantID: ").append(toIndentedString(tenantID)).append("\n");
    sb.append("    numEventSenderWorkers: ").append(toIndentedString(numEventSenderWorkers)).append("\n");
    sb.append("    fetchWorkerConfigIds: ").append(toIndentedString(fetchWorkerConfigIds)).append("\n");
    sb.append("    eventsToSend: ").append(toIndentedString(eventsToSend)).append("\n");
    sb.append("    enableSyncApi: ").append(toIndentedString(enableSyncApi)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

