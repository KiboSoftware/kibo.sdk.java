/*
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.api;

import com.kibocommerce.sdk.fulfillment.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShipmentDataControllerApi
 */
@Ignore
public class ShipmentDataControllerApiTest {

    private final ShipmentDataControllerApi api = new ShipmentDataControllerApi();

    
    /**
     * deleteShipmentAttribute
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteShipmentAttributeUsingDELETE1Test() throws ApiException {
        Integer shipmentNumber = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        api.deleteShipmentAttributeUsingDELETE1(shipmentNumber, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * deleteShipmentAttribute
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteShipmentAttributeUsingDELETE2Test() throws ApiException {
        Integer lineId = null;
        Integer shipmentNumber = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        api.deleteShipmentAttributeUsingDELETE2(lineId, shipmentNumber, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getShipmentData
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShipmentDataUsingGETTest() throws ApiException {
        Integer shipmentNumber = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        Map<String, Object> response = api.getShipmentDataUsingGET(shipmentNumber, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getShipmentData
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShipmentDataUsingGET1Test() throws ApiException {
        Integer lineId = null;
        Integer shipmentNumber = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        Map<String, Object> response = api.getShipmentDataUsingGET1(lineId, shipmentNumber, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * replaceShipmentData
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceShipmentDataUsingPUTTest() throws ApiException {
        Integer shipmentNumber = null;
        Integer xVolTenant = null;
        Map<String, Object> requestBody = null;
        Integer xVolSite = null;
        Map<String, Object> response = api.replaceShipmentDataUsingPUT(shipmentNumber, xVolTenant, requestBody, xVolSite);

        // TODO: test validations
    }
    
    /**
     * replaceShipmentItemData
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceShipmentItemDataUsingPUTTest() throws ApiException {
        Integer lineId = null;
        Integer shipmentNumber = null;
        Integer xVolTenant = null;
        Map<String, Object> requestBody = null;
        Integer xVolSite = null;
        Map<String, Object> response = api.replaceShipmentItemDataUsingPUT(lineId, shipmentNumber, xVolTenant, requestBody, xVolSite);

        // TODO: test validations
    }
    
}
