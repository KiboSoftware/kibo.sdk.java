/*
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.api;

import com.kibocommerce.sdk.fulfillment.ApiException;
import com.kibocommerce.sdk.fulfillment.model.CollectionModelOfEntityModelOfWorkflowProcess;
import com.kibocommerce.sdk.fulfillment.model.EntityModelOfWorkflowProcess;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowProcessControllerApi
 */
@Ignore
public class WorkflowProcessControllerApiTest {

    private final WorkflowProcessControllerApi api = new WorkflowProcessControllerApi();

    
    /**
     * getDefinitionImage
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDefinitionImageUsingGETTest() throws ApiException {
        String containerIdOrAlias = null;
        String processId = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        String response = api.getDefinitionImageUsingGET(containerIdOrAlias, processId, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getWorkflowProcessByShipmentTypeLocationCode
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowProcessByShipmentTypeLocationCodeUsingGETTest() throws ApiException {
        String locationCode = null;
        String shipmentType = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessByShipmentTypeLocationCodeUsingGET(locationCode, shipmentType, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getWorkflowProcessByShipmentTypeLocationGroupCode
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowProcessByShipmentTypeLocationGroupCodeUsingGETTest() throws ApiException {
        String locationGroupCode = null;
        String shipmentType = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessByShipmentTypeLocationGroupCodeUsingGET(locationGroupCode, shipmentType, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getWorkflowProcessByShipmentType
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowProcessByShipmentTypeUsingGETTest() throws ApiException {
        String shipmentType = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessByShipmentTypeUsingGET(shipmentType, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getWorkflowProcess
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowProcessUsingGETTest() throws ApiException {
        String containerIdOrAlias = null;
        String processId = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        EntityModelOfWorkflowProcess response = api.getWorkflowProcessUsingGET(containerIdOrAlias, processId, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getWorkflowProcesses
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getWorkflowProcessesUsingGETTest() throws ApiException {
        Integer xVolTenant = null;
        Integer xVolSite = null;
        CollectionModelOfEntityModelOfWorkflowProcess response = api.getWorkflowProcessesUsingGET(xVolTenant, xVolSite);

        // TODO: test validations
    }
    
}
