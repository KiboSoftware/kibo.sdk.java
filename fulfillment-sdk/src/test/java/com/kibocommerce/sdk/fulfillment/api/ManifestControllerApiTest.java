/*
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.api;

import com.kibocommerce.sdk.fulfillment.ApiException;
import com.kibocommerce.sdk.fulfillment.model.CollectionModelOfManifest;
import com.kibocommerce.sdk.fulfillment.model.CollectionModelOfShipment;
import com.kibocommerce.sdk.fulfillment.model.EntityModelOfManifest;
import com.kibocommerce.sdk.fulfillment.model.ManifestRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManifestControllerApi
 */
@Ignore
public class ManifestControllerApiTest {

    private final ManifestControllerApi api = new ManifestControllerApi();

    
    /**
     * createManifest
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createManifestUsingPOSTTest() throws ApiException {
        Integer xVolTenant = null;
        ManifestRequest manifestRequest = null;
        Integer xVolSite = null;
        EntityModelOfManifest response = api.createManifestUsingPOST(xVolTenant, manifestRequest, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getEligibleShipments
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEligibleShipmentsUsingGETTest() throws ApiException {
        String carrier = null;
        String fulfillmentLocationCode = null;
        Integer xVolTenant = null;
        Integer fromDays = null;
        Integer xVolSite = null;
        CollectionModelOfShipment response = api.getEligibleShipmentsUsingGET(carrier, fulfillmentLocationCode, xVolTenant, fromDays, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getManifest
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getManifestUsingGETTest() throws ApiException {
        String manifestId = null;
        Integer xVolTenant = null;
        Integer xVolSite = null;
        EntityModelOfManifest response = api.getManifestUsingGET(manifestId, xVolTenant, xVolSite);

        // TODO: test validations
    }
    
    /**
     * getManifests
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getManifestsUsingGETTest() throws ApiException {
        String fulfillmentLocationCode = null;
        Integer xVolTenant = null;
        Integer fromDays = null;
        Integer xVolSite = null;
        CollectionModelOfManifest response = api.getManifestsUsingGET(fulfillmentLocationCode, xVolTenant, fromDays, xVolSite);

        // TODO: test validations
    }
    
}
