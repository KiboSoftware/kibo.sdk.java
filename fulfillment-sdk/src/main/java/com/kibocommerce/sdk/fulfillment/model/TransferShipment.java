/*
 * Kibo Fulfillment API - Production Profile
 * REST API backing the Kibo Fulfiller User Interface
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.fulfillment.model.TransferItem;
import com.kibocommerce.sdk.fulfillment.model.TransferredReason;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TransferShipment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-12-08T12:42:53.880-06:00[America/Chicago]")
public class TransferShipment {
  public static final String SERIALIZED_NAME_BLOCK_ASSIGNMENT = "blockAssignment";
  @SerializedName(SERIALIZED_NAME_BLOCK_ASSIGNMENT)
  private Boolean blockAssignment;

  public static final String SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE = "fulfillmentLocationCode";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE)
  private String fulfillmentLocationCode;

  public static final String SERIALIZED_NAME_IS_USER_ACTION = "isUserAction";
  @SerializedName(SERIALIZED_NAME_IS_USER_ACTION)
  private Boolean isUserAction;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<TransferItem> items = null;

  public static final String SERIALIZED_NAME_TRANSFERRED_REASON = "transferredReason";
  @SerializedName(SERIALIZED_NAME_TRANSFERRED_REASON)
  private TransferredReason transferredReason = null;

  public TransferShipment blockAssignment(Boolean blockAssignment) {
    this.blockAssignment = blockAssignment;
    return this;
  }

   /**
   * Get blockAssignment
   * @return blockAssignment
  **/
  @ApiModelProperty(value = "")
  public Boolean getBlockAssignment() {
    return blockAssignment;
  }

  public void setBlockAssignment(Boolean blockAssignment) {
    this.blockAssignment = blockAssignment;
  }

  public TransferShipment fulfillmentLocationCode(String fulfillmentLocationCode) {
    this.fulfillmentLocationCode = fulfillmentLocationCode;
    return this;
  }

   /**
   * Get fulfillmentLocationCode
   * @return fulfillmentLocationCode
  **/
  @ApiModelProperty(value = "")
  public String getFulfillmentLocationCode() {
    return fulfillmentLocationCode;
  }

  public void setFulfillmentLocationCode(String fulfillmentLocationCode) {
    this.fulfillmentLocationCode = fulfillmentLocationCode;
  }

  public TransferShipment isUserAction(Boolean isUserAction) {
    this.isUserAction = isUserAction;
    return this;
  }

   /**
   * Get isUserAction
   * @return isUserAction
  **/
  @ApiModelProperty(value = "")
  public Boolean getIsUserAction() {
    return isUserAction;
  }

  public void setIsUserAction(Boolean isUserAction) {
    this.isUserAction = isUserAction;
  }

  public TransferShipment items(List<TransferItem> items) {
    this.items = items;
    return this;
  }

  public TransferShipment addItemsItem(TransferItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<TransferItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @ApiModelProperty(value = "")
  public List<TransferItem> getItems() {
    return items;
  }

  public void setItems(List<TransferItem> items) {
    this.items = items;
  }

  public TransferShipment transferredReason(TransferredReason transferredReason) {
    this.transferredReason = transferredReason;
    return this;
  }

   /**
   * Get transferredReason
   * @return transferredReason
  **/
  @ApiModelProperty(value = "")
  public TransferredReason getTransferredReason() {
    return transferredReason;
  }

  public void setTransferredReason(TransferredReason transferredReason) {
    this.transferredReason = transferredReason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferShipment transferShipment = (TransferShipment) o;
    return Objects.equals(this.blockAssignment, transferShipment.blockAssignment) &&
        Objects.equals(this.fulfillmentLocationCode, transferShipment.fulfillmentLocationCode) &&
        Objects.equals(this.isUserAction, transferShipment.isUserAction) &&
        Objects.equals(this.items, transferShipment.items) &&
        Objects.equals(this.transferredReason, transferShipment.transferredReason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockAssignment, fulfillmentLocationCode, isUserAction, items, transferredReason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferShipment {\n");
    
    sb.append("    blockAssignment: ").append(toIndentedString(blockAssignment)).append("\n");
    sb.append("    fulfillmentLocationCode: ").append(toIndentedString(fulfillmentLocationCode)).append("\n");
    sb.append("    isUserAction: ").append(toIndentedString(isUserAction)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    transferredReason: ").append(toIndentedString(transferredReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

