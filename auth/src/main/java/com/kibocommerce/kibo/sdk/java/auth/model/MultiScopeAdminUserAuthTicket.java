/*
 * Kibo Admin User Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.kibo.sdk.java.auth.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.kibo.sdk.java.auth.model.UserProfile;
import com.kibocommerce.kibo.sdk.java.auth.model.UserScope;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * MultiScopeAdminUserAuthTicket
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-24T10:12:53.586362-05:00[America/Chicago]")
public class MultiScopeAdminUserAuthTicket {
  public static final String SERIALIZED_NAME_AVAILABLE_SCOPES = "availableScopes";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_SCOPES)
  private List<UserScope> availableScopes = null;

  public static final String SERIALIZED_NAME_REFRESH_TOKEN = "refreshToken";
  @SerializedName(SERIALIZED_NAME_REFRESH_TOKEN)
  private String refreshToken;

  public static final String SERIALIZED_NAME_REFRESH_TOKEN_EXPIRATION = "refreshTokenExpiration";
  @SerializedName(SERIALIZED_NAME_REFRESH_TOKEN_EXPIRATION)
  private OffsetDateTime refreshTokenExpiration;

  public static final String SERIALIZED_NAME_ACCESS_TOKEN = "accessToken";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN)
  private String accessToken;

  public static final String SERIALIZED_NAME_JWT_ACCESS_TOKEN = "jwtAccessToken";
  @SerializedName(SERIALIZED_NAME_JWT_ACCESS_TOKEN)
  private String jwtAccessToken;

  public static final String SERIALIZED_NAME_ACCESS_TOKEN_EXPIRATION = "accessTokenExpiration";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN_EXPIRATION)
  private OffsetDateTime accessTokenExpiration;

  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private UserProfile user = null;

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private UserScope scope = null;

  public static final String SERIALIZED_NAME_GRANTED_BEHAVIORS = "grantedBehaviors";
  @SerializedName(SERIALIZED_NAME_GRANTED_BEHAVIORS)
  private List<Integer> grantedBehaviors = null;

  public MultiScopeAdminUserAuthTicket availableScopes(List<UserScope> availableScopes) {
    this.availableScopes = availableScopes;
    return this;
  }

  public MultiScopeAdminUserAuthTicket addAvailableScopesItem(UserScope availableScopesItem) {
    if (this.availableScopes == null) {
      this.availableScopes = new ArrayList<UserScope>();
    }
    this.availableScopes.add(availableScopesItem);
    return this;
  }

   /**
   * Get availableScopes
   * @return availableScopes
  **/
  @ApiModelProperty(value = "")
  public List<UserScope> getAvailableScopes() {
    return availableScopes;
  }

  public void setAvailableScopes(List<UserScope> availableScopes) {
    this.availableScopes = availableScopes;
  }

  public MultiScopeAdminUserAuthTicket refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Get refreshToken
   * @return refreshToken
  **/
  @ApiModelProperty(value = "")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public MultiScopeAdminUserAuthTicket refreshTokenExpiration(OffsetDateTime refreshTokenExpiration) {
    this.refreshTokenExpiration = refreshTokenExpiration;
    return this;
  }

   /**
   * Get refreshTokenExpiration
   * @return refreshTokenExpiration
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRefreshTokenExpiration() {
    return refreshTokenExpiration;
  }

  public void setRefreshTokenExpiration(OffsetDateTime refreshTokenExpiration) {
    this.refreshTokenExpiration = refreshTokenExpiration;
  }

  public MultiScopeAdminUserAuthTicket accessToken(String accessToken) {
    this.accessToken = accessToken;
    return this;
  }

   /**
   * Get accessToken
   * @return accessToken
  **/
  @ApiModelProperty(value = "")
  public String getAccessToken() {
    return accessToken;
  }

  public void setAccessToken(String accessToken) {
    this.accessToken = accessToken;
  }

  public MultiScopeAdminUserAuthTicket jwtAccessToken(String jwtAccessToken) {
    this.jwtAccessToken = jwtAccessToken;
    return this;
  }

   /**
   * Get jwtAccessToken
   * @return jwtAccessToken
  **/
  @ApiModelProperty(value = "")
  public String getJwtAccessToken() {
    return jwtAccessToken;
  }

  public void setJwtAccessToken(String jwtAccessToken) {
    this.jwtAccessToken = jwtAccessToken;
  }

  public MultiScopeAdminUserAuthTicket accessTokenExpiration(OffsetDateTime accessTokenExpiration) {
    this.accessTokenExpiration = accessTokenExpiration;
    return this;
  }

   /**
   * Get accessTokenExpiration
   * @return accessTokenExpiration
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getAccessTokenExpiration() {
    return accessTokenExpiration;
  }

  public void setAccessTokenExpiration(OffsetDateTime accessTokenExpiration) {
    this.accessTokenExpiration = accessTokenExpiration;
  }

  public MultiScopeAdminUserAuthTicket user(UserProfile user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public UserProfile getUser() {
    return user;
  }

  public void setUser(UserProfile user) {
    this.user = user;
  }

  public MultiScopeAdminUserAuthTicket scope(UserScope scope) {
    this.scope = scope;
    return this;
  }

   /**
   * Get scope
   * @return scope
  **/
  @ApiModelProperty(value = "")
  public UserScope getScope() {
    return scope;
  }

  public void setScope(UserScope scope) {
    this.scope = scope;
  }

  public MultiScopeAdminUserAuthTicket grantedBehaviors(List<Integer> grantedBehaviors) {
    this.grantedBehaviors = grantedBehaviors;
    return this;
  }

  public MultiScopeAdminUserAuthTicket addGrantedBehaviorsItem(Integer grantedBehaviorsItem) {
    if (this.grantedBehaviors == null) {
      this.grantedBehaviors = new ArrayList<Integer>();
    }
    this.grantedBehaviors.add(grantedBehaviorsItem);
    return this;
  }

   /**
   * Get grantedBehaviors
   * @return grantedBehaviors
  **/
  @ApiModelProperty(value = "")
  public List<Integer> getGrantedBehaviors() {
    return grantedBehaviors;
  }

  public void setGrantedBehaviors(List<Integer> grantedBehaviors) {
    this.grantedBehaviors = grantedBehaviors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiScopeAdminUserAuthTicket multiScopeAdminUserAuthTicket = (MultiScopeAdminUserAuthTicket) o;
    return Objects.equals(this.availableScopes, multiScopeAdminUserAuthTicket.availableScopes) &&
        Objects.equals(this.refreshToken, multiScopeAdminUserAuthTicket.refreshToken) &&
        Objects.equals(this.refreshTokenExpiration, multiScopeAdminUserAuthTicket.refreshTokenExpiration) &&
        Objects.equals(this.accessToken, multiScopeAdminUserAuthTicket.accessToken) &&
        Objects.equals(this.jwtAccessToken, multiScopeAdminUserAuthTicket.jwtAccessToken) &&
        Objects.equals(this.accessTokenExpiration, multiScopeAdminUserAuthTicket.accessTokenExpiration) &&
        Objects.equals(this.user, multiScopeAdminUserAuthTicket.user) &&
        Objects.equals(this.scope, multiScopeAdminUserAuthTicket.scope) &&
        Objects.equals(this.grantedBehaviors, multiScopeAdminUserAuthTicket.grantedBehaviors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableScopes, refreshToken, refreshTokenExpiration, accessToken, jwtAccessToken, accessTokenExpiration, user, scope, grantedBehaviors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiScopeAdminUserAuthTicket {\n");
    
    sb.append("    availableScopes: ").append(toIndentedString(availableScopes)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    refreshTokenExpiration: ").append(toIndentedString(refreshTokenExpiration)).append("\n");
    sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    sb.append("    jwtAccessToken: ").append(toIndentedString(jwtAccessToken)).append("\n");
    sb.append("    accessTokenExpiration: ").append(toIndentedString(accessTokenExpiration)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    grantedBehaviors: ").append(toIndentedString(grantedBehaviors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

