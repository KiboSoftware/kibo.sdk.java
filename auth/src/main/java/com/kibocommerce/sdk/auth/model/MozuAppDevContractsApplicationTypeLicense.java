/*
 * Kibo AppDev Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.auth.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MozuAppDevContractsApplicationTypeLicense
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-25T09:21:37.137-05:00[America/Chicago]")
public class MozuAppDevContractsApplicationTypeLicense {
  public static final String SERIALIZED_NAME_TYPE_NAME = "typeName";
  @SerializedName(SERIALIZED_NAME_TYPE_NAME)
  private String typeName;

  public static final String SERIALIZED_NAME_APPLICATION_LICENSE_TYPE_ID = "applicationLicenseTypeId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_LICENSE_TYPE_ID)
  private Integer applicationLicenseTypeId;

  public static final String SERIALIZED_NAME_LICENSE_TYPE = "licenseType";
  @SerializedName(SERIALIZED_NAME_LICENSE_TYPE)
  private String licenseType;

  public MozuAppDevContractsApplicationTypeLicense typeName(String typeName) {
    this.typeName = typeName;
    return this;
  }

   /**
   * Get typeName
   * @return typeName
  **/
  @ApiModelProperty(value = "")
  public String getTypeName() {
    return typeName;
  }

  public void setTypeName(String typeName) {
    this.typeName = typeName;
  }

  public MozuAppDevContractsApplicationTypeLicense applicationLicenseTypeId(Integer applicationLicenseTypeId) {
    this.applicationLicenseTypeId = applicationLicenseTypeId;
    return this;
  }

   /**
   * Get applicationLicenseTypeId
   * @return applicationLicenseTypeId
  **/
  @ApiModelProperty(value = "")
  public Integer getApplicationLicenseTypeId() {
    return applicationLicenseTypeId;
  }

  public void setApplicationLicenseTypeId(Integer applicationLicenseTypeId) {
    this.applicationLicenseTypeId = applicationLicenseTypeId;
  }

  public MozuAppDevContractsApplicationTypeLicense licenseType(String licenseType) {
    this.licenseType = licenseType;
    return this;
  }

   /**
   * Get licenseType
   * @return licenseType
  **/
  @ApiModelProperty(value = "")
  public String getLicenseType() {
    return licenseType;
  }

  public void setLicenseType(String licenseType) {
    this.licenseType = licenseType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MozuAppDevContractsApplicationTypeLicense mozuAppDevContractsApplicationTypeLicense = (MozuAppDevContractsApplicationTypeLicense) o;
    return Objects.equals(this.typeName, mozuAppDevContractsApplicationTypeLicense.typeName) &&
        Objects.equals(this.applicationLicenseTypeId, mozuAppDevContractsApplicationTypeLicense.applicationLicenseTypeId) &&
        Objects.equals(this.licenseType, mozuAppDevContractsApplicationTypeLicense.licenseType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(typeName, applicationLicenseTypeId, licenseType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MozuAppDevContractsApplicationTypeLicense {\n");
    
    sb.append("    typeName: ").append(toIndentedString(typeName)).append("\n");
    sb.append("    applicationLicenseTypeId: ").append(toIndentedString(applicationLicenseTypeId)).append("\n");
    sb.append("    licenseType: ").append(toIndentedString(licenseType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

