/*
 * Kibo Admin User Service
 * OpenAPI Spec for Kibo Admin User Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.adminuser.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.adminuser.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.adminuser.models.Resource;
import com.kibocommerce.sdk.adminuser.models.UserScope;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * UserRole
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UserRole implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_ASSIGNED_IN_SCOPE = "assignedInScope";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_IN_SCOPE)
  private UserScope assignedInScope;

  public static final String SERIALIZED_NAME_ROLE_ID = "roleId";
  @SerializedName(SERIALIZED_NAME_ROLE_ID)
  private Integer roleId;

  public static final String SERIALIZED_NAME_ROLE_NAME = "roleName";
  @SerializedName(SERIALIZED_NAME_ROLE_NAME)
  private String roleName;

  public static final String SERIALIZED_NAME_ROLE_RESOURCES = "roleResources";
  @SerializedName(SERIALIZED_NAME_ROLE_RESOURCES)
  private List<Resource> roleResources = null;

  public static final String SERIALIZED_NAME_ROLE_TAGS = "roleTags";
  @SerializedName(SERIALIZED_NAME_ROLE_TAGS)
  private List<String> roleTags = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public UserRole() {
  }

  public UserRole userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public UserRole assignedInScope(UserScope assignedInScope) {
    
    this.assignedInScope = assignedInScope;
    return this;
  }

   /**
   * Get assignedInScope
   * @return assignedInScope
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserScope getAssignedInScope() {
    return assignedInScope;
  }


  public void setAssignedInScope(UserScope assignedInScope) {
    this.assignedInScope = assignedInScope;
  }


  public UserRole roleId(Integer roleId) {
    
    this.roleId = roleId;
    return this;
  }

   /**
   * Get roleId
   * @return roleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRoleId() {
    return roleId;
  }


  public void setRoleId(Integer roleId) {
    this.roleId = roleId;
  }


  public UserRole roleName(String roleName) {
    
    this.roleName = roleName;
    return this;
  }

   /**
   * Get roleName
   * @return roleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRoleName() {
    return roleName;
  }


  public void setRoleName(String roleName) {
    this.roleName = roleName;
  }


  public UserRole roleResources(List<Resource> roleResources) {
    
    this.roleResources = roleResources;
    return this;
  }

  public UserRole addRoleResourcesItem(Resource roleResourcesItem) {
    if (this.roleResources == null) {
      this.roleResources = new ArrayList<>();
    }
    this.roleResources.add(roleResourcesItem);
    return this;
  }

   /**
   * Get roleResources
   * @return roleResources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Resource> getRoleResources() {
    return roleResources;
  }


  public void setRoleResources(List<Resource> roleResources) {
    this.roleResources = roleResources;
  }


  public UserRole roleTags(List<String> roleTags) {
    
    this.roleTags = roleTags;
    return this;
  }

  public UserRole addRoleTagsItem(String roleTagsItem) {
    if (this.roleTags == null) {
      this.roleTags = new ArrayList<>();
    }
    this.roleTags.add(roleTagsItem);
    return this;
  }

   /**
   * Get roleTags
   * @return roleTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getRoleTags() {
    return roleTags;
  }


  public void setRoleTags(List<String> roleTags) {
    this.roleTags = roleTags;
  }


  public UserRole auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRole userRole = (UserRole) o;
    return Objects.equals(this.userId, userRole.userId) &&
        Objects.equals(this.assignedInScope, userRole.assignedInScope) &&
        Objects.equals(this.roleId, userRole.roleId) &&
        Objects.equals(this.roleName, userRole.roleName) &&
        Objects.equals(this.roleResources, userRole.roleResources) &&
        Objects.equals(this.roleTags, userRole.roleTags) &&
        Objects.equals(this.auditInfo, userRole.auditInfo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, assignedInScope, roleId, roleName, roleResources, roleTags, auditInfo);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRole {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    assignedInScope: ").append(toIndentedString(assignedInScope)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("    roleResources: ").append(toIndentedString(roleResources)).append("\n");
    sb.append("    roleTags: ").append(toIndentedString(roleTags)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("userId");
    openapiFields.add("assignedInScope");
    openapiFields.add("roleId");
    openapiFields.add("roleName");
    openapiFields.add("roleResources");
    openapiFields.add("roleTags");
    openapiFields.add("auditInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserRole
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserRole.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserRole is not found in the empty JSON string", UserRole.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!UserRole.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserRole` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      // validate the optional field `assignedInScope`
      if (jsonObj.get("assignedInScope") != null && !jsonObj.get("assignedInScope").isJsonNull()) {
        UserScope.validateJsonObject(jsonObj.getAsJsonObject("assignedInScope"));
      }
      if ((jsonObj.get("roleName") != null && !jsonObj.get("roleName").isJsonNull()) && !jsonObj.get("roleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleName").toString()));
      }
      if (jsonObj.get("roleResources") != null && !jsonObj.get("roleResources").isJsonNull()) {
        JsonArray jsonArrayroleResources = jsonObj.getAsJsonArray("roleResources");
        if (jsonArrayroleResources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("roleResources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `roleResources` to be an array in the JSON string but got `%s`", jsonObj.get("roleResources").toString()));
          }

          // validate the optional field `roleResources` (array)
          for (int i = 0; i < jsonArrayroleResources.size(); i++) {
            Resource.validateJsonObject(jsonArrayroleResources.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("roleTags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleTags` to be an array in the JSON string but got `%s`", jsonObj.get("roleTags").toString()));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserRole.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserRole' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserRole> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserRole.class));

       return (TypeAdapter<T>) new TypeAdapter<UserRole>() {
           @Override
           public void write(JsonWriter out, UserRole value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserRole read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserRole given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserRole
  * @throws IOException if the JSON string is invalid with respect to UserRole
  */
  public static UserRole fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserRole.class);
  }

 /**
  * Convert an instance of UserRole to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

