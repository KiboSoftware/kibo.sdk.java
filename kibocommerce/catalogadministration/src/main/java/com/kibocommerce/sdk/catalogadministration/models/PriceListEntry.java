/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogadministration.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.catalogadministration.models.CatalogAdminsProductOption;
import com.kibocommerce.sdk.catalogadministration.models.PriceListEntryExtra;
import com.kibocommerce.sdk.catalogadministration.models.PriceListEntryPrice;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Category
 */
@ApiModel(description = "Category")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PriceListEntry implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_PRICE_LIST_CODE = "priceListCode";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_CODE)
  private String priceListCode;

  public static final String SERIALIZED_NAME_PRICE_LIST_ENTRY_SEQUENCE = "priceListEntrySequence";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_ENTRY_SEQUENCE)
  private Integer priceListEntrySequence;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "productCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_PRODUCT_NAME = "productName";
  @SerializedName(SERIALIZED_NAME_PRODUCT_NAME)
  private String productName;

  public static final String SERIALIZED_NAME_IS_VARIATION = "isVariation";
  @SerializedName(SERIALIZED_NAME_IS_VARIATION)
  private Boolean isVariation;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<CatalogAdminsProductOption> options = null;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_PRICE_LIST_ENTRY_MODE = "priceListEntryMode";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_ENTRY_MODE)
  private String priceListEntryMode;

  public static final String SERIALIZED_NAME_PRICE_LIST_ENTRY_TYPE_CODE = "priceListEntryTypeCode";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_ENTRY_TYPE_CODE)
  private String priceListEntryTypeCode;

  public static final String SERIALIZED_NAME_DISCOUNTS_RESTRICTED_MODE = "discountsRestrictedMode";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS_RESTRICTED_MODE)
  private String discountsRestrictedMode;

  public static final String SERIALIZED_NAME_DISCOUNTS_RESTRICTED = "discountsRestricted";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS_RESTRICTED)
  private Boolean discountsRestricted;

  public static final String SERIALIZED_NAME_DISCOUNTS_RESTRICTED_START_DATE = "discountsRestrictedStartDate";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS_RESTRICTED_START_DATE)
  private OffsetDateTime discountsRestrictedStartDate;

  public static final String SERIALIZED_NAME_DISCOUNTS_RESTRICTED_END_DATE = "discountsRestrictedEndDate";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS_RESTRICTED_END_DATE)
  private OffsetDateTime discountsRestrictedEndDate;

  public static final String SERIALIZED_NAME_MSRP_MODE = "msrpMode";
  @SerializedName(SERIALIZED_NAME_MSRP_MODE)
  private String msrpMode;

  public static final String SERIALIZED_NAME_MSRP = "msrp";
  @SerializedName(SERIALIZED_NAME_MSRP)
  private Double msrp;

  public static final String SERIALIZED_NAME_MAP_MODE = "mapMode";
  @SerializedName(SERIALIZED_NAME_MAP_MODE)
  private String mapMode;

  public static final String SERIALIZED_NAME_MAP = "map";
  @SerializedName(SERIALIZED_NAME_MAP)
  private Double map;

  public static final String SERIALIZED_NAME_MAP_START_DATE = "mapStartDate";
  @SerializedName(SERIALIZED_NAME_MAP_START_DATE)
  private OffsetDateTime mapStartDate;

  public static final String SERIALIZED_NAME_MAP_END_DATE = "mapEndDate";
  @SerializedName(SERIALIZED_NAME_MAP_END_DATE)
  private OffsetDateTime mapEndDate;

  public static final String SERIALIZED_NAME_COST_MODE = "costMode";
  @SerializedName(SERIALIZED_NAME_COST_MODE)
  private String costMode;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private Double cost;

  public static final String SERIALIZED_NAME_PRICE_ENTRIES = "priceEntries";
  @SerializedName(SERIALIZED_NAME_PRICE_ENTRIES)
  private List<PriceListEntryPrice> priceEntries = null;

  public static final String SERIALIZED_NAME_EXTRA_ENTRIES = "extraEntries";
  @SerializedName(SERIALIZED_NAME_EXTRA_ENTRIES)
  private List<PriceListEntryExtra> extraEntries = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public PriceListEntry() {
  }

  public PriceListEntry priceListCode(String priceListCode) {
    
    this.priceListCode = priceListCode;
    return this;
  }

   /**
   * External unique identifier of the PriceList. Must be unique an only contain url sanitized characters. Max length is  50
   * @return priceListCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "External unique identifier of the PriceList. Must be unique an only contain url sanitized characters. Max length is  50")

  public String getPriceListCode() {
    return priceListCode;
  }


  public void setPriceListCode(String priceListCode) {
    this.priceListCode = priceListCode;
  }


  public PriceListEntry priceListEntrySequence(Integer priceListEntrySequence) {
    
    this.priceListEntrySequence = priceListEntrySequence;
    return this;
  }

   /**
   * Get priceListEntrySequence
   * @return priceListEntrySequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPriceListEntrySequence() {
    return priceListEntrySequence;
  }


  public void setPriceListEntrySequence(Integer priceListEntrySequence) {
    this.priceListEntrySequence = priceListEntrySequence;
  }


  public PriceListEntry productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Get productCode
   * @return productCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public PriceListEntry productName(String productName) {
    
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProductName() {
    return productName;
  }


  public void setProductName(String productName) {
    this.productName = productName;
  }


  public PriceListEntry isVariation(Boolean isVariation) {
    
    this.isVariation = isVariation;
    return this;
  }

   /**
   * Get isVariation
   * @return isVariation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVariation() {
    return isVariation;
  }


  public void setIsVariation(Boolean isVariation) {
    this.isVariation = isVariation;
  }


  public PriceListEntry options(List<CatalogAdminsProductOption> options) {
    
    this.options = options;
    return this;
  }

  public PriceListEntry addOptionsItem(CatalogAdminsProductOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CatalogAdminsProductOption> getOptions() {
    return options;
  }


  public void setOptions(List<CatalogAdminsProductOption> options) {
    this.options = options;
  }


  public PriceListEntry currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public PriceListEntry startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public PriceListEntry endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public PriceListEntry priceListEntryMode(String priceListEntryMode) {
    
    this.priceListEntryMode = priceListEntryMode;
    return this;
  }

   /**
   * Get priceListEntryMode
   * @return priceListEntryMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPriceListEntryMode() {
    return priceListEntryMode;
  }


  public void setPriceListEntryMode(String priceListEntryMode) {
    this.priceListEntryMode = priceListEntryMode;
  }


  public PriceListEntry priceListEntryTypeCode(String priceListEntryTypeCode) {
    
    this.priceListEntryTypeCode = priceListEntryTypeCode;
    return this;
  }

   /**
   * Get priceListEntryTypeCode
   * @return priceListEntryTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPriceListEntryTypeCode() {
    return priceListEntryTypeCode;
  }


  public void setPriceListEntryTypeCode(String priceListEntryTypeCode) {
    this.priceListEntryTypeCode = priceListEntryTypeCode;
  }


  public PriceListEntry discountsRestrictedMode(String discountsRestrictedMode) {
    
    this.discountsRestrictedMode = discountsRestrictedMode;
    return this;
  }

   /**
   * Get discountsRestrictedMode
   * @return discountsRestrictedMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDiscountsRestrictedMode() {
    return discountsRestrictedMode;
  }


  public void setDiscountsRestrictedMode(String discountsRestrictedMode) {
    this.discountsRestrictedMode = discountsRestrictedMode;
  }


  public PriceListEntry discountsRestricted(Boolean discountsRestricted) {
    
    this.discountsRestricted = discountsRestricted;
    return this;
  }

   /**
   * Get discountsRestricted
   * @return discountsRestricted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDiscountsRestricted() {
    return discountsRestricted;
  }


  public void setDiscountsRestricted(Boolean discountsRestricted) {
    this.discountsRestricted = discountsRestricted;
  }


  public PriceListEntry discountsRestrictedStartDate(OffsetDateTime discountsRestrictedStartDate) {
    
    this.discountsRestrictedStartDate = discountsRestrictedStartDate;
    return this;
  }

   /**
   * Get discountsRestrictedStartDate
   * @return discountsRestrictedStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDiscountsRestrictedStartDate() {
    return discountsRestrictedStartDate;
  }


  public void setDiscountsRestrictedStartDate(OffsetDateTime discountsRestrictedStartDate) {
    this.discountsRestrictedStartDate = discountsRestrictedStartDate;
  }


  public PriceListEntry discountsRestrictedEndDate(OffsetDateTime discountsRestrictedEndDate) {
    
    this.discountsRestrictedEndDate = discountsRestrictedEndDate;
    return this;
  }

   /**
   * Get discountsRestrictedEndDate
   * @return discountsRestrictedEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDiscountsRestrictedEndDate() {
    return discountsRestrictedEndDate;
  }


  public void setDiscountsRestrictedEndDate(OffsetDateTime discountsRestrictedEndDate) {
    this.discountsRestrictedEndDate = discountsRestrictedEndDate;
  }


  public PriceListEntry msrpMode(String msrpMode) {
    
    this.msrpMode = msrpMode;
    return this;
  }

   /**
   * Get msrpMode
   * @return msrpMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMsrpMode() {
    return msrpMode;
  }


  public void setMsrpMode(String msrpMode) {
    this.msrpMode = msrpMode;
  }


  public PriceListEntry msrp(Double msrp) {
    
    this.msrp = msrp;
    return this;
  }

   /**
   * Get msrp
   * @return msrp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getMsrp() {
    return msrp;
  }


  public void setMsrp(Double msrp) {
    this.msrp = msrp;
  }


  public PriceListEntry mapMode(String mapMode) {
    
    this.mapMode = mapMode;
    return this;
  }

   /**
   * Get mapMode
   * @return mapMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMapMode() {
    return mapMode;
  }


  public void setMapMode(String mapMode) {
    this.mapMode = mapMode;
  }


  public PriceListEntry map(Double map) {
    
    this.map = map;
    return this;
  }

   /**
   * Get map
   * @return map
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getMap() {
    return map;
  }


  public void setMap(Double map) {
    this.map = map;
  }


  public PriceListEntry mapStartDate(OffsetDateTime mapStartDate) {
    
    this.mapStartDate = mapStartDate;
    return this;
  }

   /**
   * Get mapStartDate
   * @return mapStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getMapStartDate() {
    return mapStartDate;
  }


  public void setMapStartDate(OffsetDateTime mapStartDate) {
    this.mapStartDate = mapStartDate;
  }


  public PriceListEntry mapEndDate(OffsetDateTime mapEndDate) {
    
    this.mapEndDate = mapEndDate;
    return this;
  }

   /**
   * Get mapEndDate
   * @return mapEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getMapEndDate() {
    return mapEndDate;
  }


  public void setMapEndDate(OffsetDateTime mapEndDate) {
    this.mapEndDate = mapEndDate;
  }


  public PriceListEntry costMode(String costMode) {
    
    this.costMode = costMode;
    return this;
  }

   /**
   * Get costMode
   * @return costMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCostMode() {
    return costMode;
  }


  public void setCostMode(String costMode) {
    this.costMode = costMode;
  }


  public PriceListEntry cost(Double cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCost() {
    return cost;
  }


  public void setCost(Double cost) {
    this.cost = cost;
  }


  public PriceListEntry priceEntries(List<PriceListEntryPrice> priceEntries) {
    
    this.priceEntries = priceEntries;
    return this;
  }

  public PriceListEntry addPriceEntriesItem(PriceListEntryPrice priceEntriesItem) {
    if (this.priceEntries == null) {
      this.priceEntries = new ArrayList<>();
    }
    this.priceEntries.add(priceEntriesItem);
    return this;
  }

   /**
   * Get priceEntries
   * @return priceEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PriceListEntryPrice> getPriceEntries() {
    return priceEntries;
  }


  public void setPriceEntries(List<PriceListEntryPrice> priceEntries) {
    this.priceEntries = priceEntries;
  }


  public PriceListEntry extraEntries(List<PriceListEntryExtra> extraEntries) {
    
    this.extraEntries = extraEntries;
    return this;
  }

  public PriceListEntry addExtraEntriesItem(PriceListEntryExtra extraEntriesItem) {
    if (this.extraEntries == null) {
      this.extraEntries = new ArrayList<>();
    }
    this.extraEntries.add(extraEntriesItem);
    return this;
  }

   /**
   * Get extraEntries
   * @return extraEntries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PriceListEntryExtra> getExtraEntries() {
    return extraEntries;
  }


  public void setExtraEntries(List<PriceListEntryExtra> extraEntries) {
    this.extraEntries = extraEntries;
  }


  public PriceListEntry auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceListEntry priceListEntry = (PriceListEntry) o;
    return Objects.equals(this.priceListCode, priceListEntry.priceListCode) &&
        Objects.equals(this.priceListEntrySequence, priceListEntry.priceListEntrySequence) &&
        Objects.equals(this.productCode, priceListEntry.productCode) &&
        Objects.equals(this.productName, priceListEntry.productName) &&
        Objects.equals(this.isVariation, priceListEntry.isVariation) &&
        Objects.equals(this.options, priceListEntry.options) &&
        Objects.equals(this.currencyCode, priceListEntry.currencyCode) &&
        Objects.equals(this.startDate, priceListEntry.startDate) &&
        Objects.equals(this.endDate, priceListEntry.endDate) &&
        Objects.equals(this.priceListEntryMode, priceListEntry.priceListEntryMode) &&
        Objects.equals(this.priceListEntryTypeCode, priceListEntry.priceListEntryTypeCode) &&
        Objects.equals(this.discountsRestrictedMode, priceListEntry.discountsRestrictedMode) &&
        Objects.equals(this.discountsRestricted, priceListEntry.discountsRestricted) &&
        Objects.equals(this.discountsRestrictedStartDate, priceListEntry.discountsRestrictedStartDate) &&
        Objects.equals(this.discountsRestrictedEndDate, priceListEntry.discountsRestrictedEndDate) &&
        Objects.equals(this.msrpMode, priceListEntry.msrpMode) &&
        Objects.equals(this.msrp, priceListEntry.msrp) &&
        Objects.equals(this.mapMode, priceListEntry.mapMode) &&
        Objects.equals(this.map, priceListEntry.map) &&
        Objects.equals(this.mapStartDate, priceListEntry.mapStartDate) &&
        Objects.equals(this.mapEndDate, priceListEntry.mapEndDate) &&
        Objects.equals(this.costMode, priceListEntry.costMode) &&
        Objects.equals(this.cost, priceListEntry.cost) &&
        Objects.equals(this.priceEntries, priceListEntry.priceEntries) &&
        Objects.equals(this.extraEntries, priceListEntry.extraEntries) &&
        Objects.equals(this.auditInfo, priceListEntry.auditInfo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(priceListCode, priceListEntrySequence, productCode, productName, isVariation, options, currencyCode, startDate, endDate, priceListEntryMode, priceListEntryTypeCode, discountsRestrictedMode, discountsRestricted, discountsRestrictedStartDate, discountsRestrictedEndDate, msrpMode, msrp, mapMode, map, mapStartDate, mapEndDate, costMode, cost, priceEntries, extraEntries, auditInfo);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceListEntry {\n");
    sb.append("    priceListCode: ").append(toIndentedString(priceListCode)).append("\n");
    sb.append("    priceListEntrySequence: ").append(toIndentedString(priceListEntrySequence)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    isVariation: ").append(toIndentedString(isVariation)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    priceListEntryMode: ").append(toIndentedString(priceListEntryMode)).append("\n");
    sb.append("    priceListEntryTypeCode: ").append(toIndentedString(priceListEntryTypeCode)).append("\n");
    sb.append("    discountsRestrictedMode: ").append(toIndentedString(discountsRestrictedMode)).append("\n");
    sb.append("    discountsRestricted: ").append(toIndentedString(discountsRestricted)).append("\n");
    sb.append("    discountsRestrictedStartDate: ").append(toIndentedString(discountsRestrictedStartDate)).append("\n");
    sb.append("    discountsRestrictedEndDate: ").append(toIndentedString(discountsRestrictedEndDate)).append("\n");
    sb.append("    msrpMode: ").append(toIndentedString(msrpMode)).append("\n");
    sb.append("    msrp: ").append(toIndentedString(msrp)).append("\n");
    sb.append("    mapMode: ").append(toIndentedString(mapMode)).append("\n");
    sb.append("    map: ").append(toIndentedString(map)).append("\n");
    sb.append("    mapStartDate: ").append(toIndentedString(mapStartDate)).append("\n");
    sb.append("    mapEndDate: ").append(toIndentedString(mapEndDate)).append("\n");
    sb.append("    costMode: ").append(toIndentedString(costMode)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    priceEntries: ").append(toIndentedString(priceEntries)).append("\n");
    sb.append("    extraEntries: ").append(toIndentedString(extraEntries)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("priceListCode");
    openapiFields.add("priceListEntrySequence");
    openapiFields.add("productCode");
    openapiFields.add("productName");
    openapiFields.add("isVariation");
    openapiFields.add("options");
    openapiFields.add("currencyCode");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("priceListEntryMode");
    openapiFields.add("priceListEntryTypeCode");
    openapiFields.add("discountsRestrictedMode");
    openapiFields.add("discountsRestricted");
    openapiFields.add("discountsRestrictedStartDate");
    openapiFields.add("discountsRestrictedEndDate");
    openapiFields.add("msrpMode");
    openapiFields.add("msrp");
    openapiFields.add("mapMode");
    openapiFields.add("map");
    openapiFields.add("mapStartDate");
    openapiFields.add("mapEndDate");
    openapiFields.add("costMode");
    openapiFields.add("cost");
    openapiFields.add("priceEntries");
    openapiFields.add("extraEntries");
    openapiFields.add("auditInfo");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("productCode");
    openapiRequiredFields.add("currencyCode");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PriceListEntry
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PriceListEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PriceListEntry is not found in the empty JSON string", PriceListEntry.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!PriceListEntry.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PriceListEntry` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PriceListEntry.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("priceListCode") != null && !jsonObj.get("priceListCode").isJsonNull()) && !jsonObj.get("priceListCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceListCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceListCode").toString()));
      }
      if (!jsonObj.get("productCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productCode").toString()));
      }
      if ((jsonObj.get("productName") != null && !jsonObj.get("productName").isJsonNull()) && !jsonObj.get("productName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productName").toString()));
      }
      if (jsonObj.get("options") != null && !jsonObj.get("options").isJsonNull()) {
        JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
        if (jsonArrayoptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("options").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
          }

          // validate the optional field `options` (array)
          for (int i = 0; i < jsonArrayoptions.size(); i++) {
            CatalogAdminsProductOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
          };
        }
      }
      if (!jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("priceListEntryMode") != null && !jsonObj.get("priceListEntryMode").isJsonNull()) && !jsonObj.get("priceListEntryMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceListEntryMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceListEntryMode").toString()));
      }
      if ((jsonObj.get("priceListEntryTypeCode") != null && !jsonObj.get("priceListEntryTypeCode").isJsonNull()) && !jsonObj.get("priceListEntryTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceListEntryTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceListEntryTypeCode").toString()));
      }
      if ((jsonObj.get("discountsRestrictedMode") != null && !jsonObj.get("discountsRestrictedMode").isJsonNull()) && !jsonObj.get("discountsRestrictedMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discountsRestrictedMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discountsRestrictedMode").toString()));
      }
      if ((jsonObj.get("msrpMode") != null && !jsonObj.get("msrpMode").isJsonNull()) && !jsonObj.get("msrpMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `msrpMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("msrpMode").toString()));
      }
      if ((jsonObj.get("mapMode") != null && !jsonObj.get("mapMode").isJsonNull()) && !jsonObj.get("mapMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mapMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mapMode").toString()));
      }
      if ((jsonObj.get("costMode") != null && !jsonObj.get("costMode").isJsonNull()) && !jsonObj.get("costMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `costMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("costMode").toString()));
      }
      if (jsonObj.get("priceEntries") != null && !jsonObj.get("priceEntries").isJsonNull()) {
        JsonArray jsonArraypriceEntries = jsonObj.getAsJsonArray("priceEntries");
        if (jsonArraypriceEntries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("priceEntries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `priceEntries` to be an array in the JSON string but got `%s`", jsonObj.get("priceEntries").toString()));
          }

          // validate the optional field `priceEntries` (array)
          for (int i = 0; i < jsonArraypriceEntries.size(); i++) {
            PriceListEntryPrice.validateJsonObject(jsonArraypriceEntries.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("extraEntries") != null && !jsonObj.get("extraEntries").isJsonNull()) {
        JsonArray jsonArrayextraEntries = jsonObj.getAsJsonArray("extraEntries");
        if (jsonArrayextraEntries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("extraEntries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `extraEntries` to be an array in the JSON string but got `%s`", jsonObj.get("extraEntries").toString()));
          }

          // validate the optional field `extraEntries` (array)
          for (int i = 0; i < jsonArrayextraEntries.size(); i++) {
            PriceListEntryExtra.validateJsonObject(jsonArrayextraEntries.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PriceListEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PriceListEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PriceListEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PriceListEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<PriceListEntry>() {
           @Override
           public void write(JsonWriter out, PriceListEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PriceListEntry read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PriceListEntry given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PriceListEntry
  * @throws IOException if the JSON string is invalid with respect to PriceListEntry
  */
  public static PriceListEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PriceListEntry.class);
  }

 /**
  * Convert an instance of PriceListEntry to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

