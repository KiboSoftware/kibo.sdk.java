/*
 * Kibo Catalog Admin Services
 * OpenAPI Spec for Kibo Catalog Admin Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogadministration.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * PriceListEntryPrice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PriceListEntryPrice implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_MIN_QTY = "minQty";
  @SerializedName(SERIALIZED_NAME_MIN_QTY)
  private Integer minQty;

  public static final String SERIALIZED_NAME_LIST_PRICE_MODE = "listPriceMode";
  @SerializedName(SERIALIZED_NAME_LIST_PRICE_MODE)
  private String listPriceMode;

  public static final String SERIALIZED_NAME_LIST_PRICE = "listPrice";
  @SerializedName(SERIALIZED_NAME_LIST_PRICE)
  private Double listPrice;

  public static final String SERIALIZED_NAME_SALE_PRICE_MODE = "salePriceMode";
  @SerializedName(SERIALIZED_NAME_SALE_PRICE_MODE)
  private String salePriceMode;

  public static final String SERIALIZED_NAME_SALE_PRICE = "salePrice";
  @SerializedName(SERIALIZED_NAME_SALE_PRICE)
  private Double salePrice;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_PRICE_MODE = "subscriptionPriceMode";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_PRICE_MODE)
  private String subscriptionPriceMode;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_PRICE = "subscriptionPrice";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_PRICE)
  private Double subscriptionPrice;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_SALE_PRICE_MODE = "subscriptionSalePriceMode";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_SALE_PRICE_MODE)
  private String subscriptionSalePriceMode;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_SALE_PRICE = "subscriptionSalePrice";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_SALE_PRICE)
  private Double subscriptionSalePrice;

  public PriceListEntryPrice() {
  }

  public PriceListEntryPrice minQty(Integer minQty) {
    
    this.minQty = minQty;
    return this;
  }

   /**
   * Get minQty
   * @return minQty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMinQty() {
    return minQty;
  }


  public void setMinQty(Integer minQty) {
    this.minQty = minQty;
  }


  public PriceListEntryPrice listPriceMode(String listPriceMode) {
    
    this.listPriceMode = listPriceMode;
    return this;
  }

   /**
   * Get listPriceMode
   * @return listPriceMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getListPriceMode() {
    return listPriceMode;
  }


  public void setListPriceMode(String listPriceMode) {
    this.listPriceMode = listPriceMode;
  }


  public PriceListEntryPrice listPrice(Double listPrice) {
    
    this.listPrice = listPrice;
    return this;
  }

   /**
   * Get listPrice
   * @return listPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getListPrice() {
    return listPrice;
  }


  public void setListPrice(Double listPrice) {
    this.listPrice = listPrice;
  }


  public PriceListEntryPrice salePriceMode(String salePriceMode) {
    
    this.salePriceMode = salePriceMode;
    return this;
  }

   /**
   * Get salePriceMode
   * @return salePriceMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSalePriceMode() {
    return salePriceMode;
  }


  public void setSalePriceMode(String salePriceMode) {
    this.salePriceMode = salePriceMode;
  }


  public PriceListEntryPrice salePrice(Double salePrice) {
    
    this.salePrice = salePrice;
    return this;
  }

   /**
   * Get salePrice
   * @return salePrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getSalePrice() {
    return salePrice;
  }


  public void setSalePrice(Double salePrice) {
    this.salePrice = salePrice;
  }


  public PriceListEntryPrice subscriptionPriceMode(String subscriptionPriceMode) {
    
    this.subscriptionPriceMode = subscriptionPriceMode;
    return this;
  }

   /**
   * Get subscriptionPriceMode
   * @return subscriptionPriceMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubscriptionPriceMode() {
    return subscriptionPriceMode;
  }


  public void setSubscriptionPriceMode(String subscriptionPriceMode) {
    this.subscriptionPriceMode = subscriptionPriceMode;
  }


  public PriceListEntryPrice subscriptionPrice(Double subscriptionPrice) {
    
    this.subscriptionPrice = subscriptionPrice;
    return this;
  }

   /**
   * Get subscriptionPrice
   * @return subscriptionPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getSubscriptionPrice() {
    return subscriptionPrice;
  }


  public void setSubscriptionPrice(Double subscriptionPrice) {
    this.subscriptionPrice = subscriptionPrice;
  }


  public PriceListEntryPrice subscriptionSalePriceMode(String subscriptionSalePriceMode) {
    
    this.subscriptionSalePriceMode = subscriptionSalePriceMode;
    return this;
  }

   /**
   * Get subscriptionSalePriceMode
   * @return subscriptionSalePriceMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSubscriptionSalePriceMode() {
    return subscriptionSalePriceMode;
  }


  public void setSubscriptionSalePriceMode(String subscriptionSalePriceMode) {
    this.subscriptionSalePriceMode = subscriptionSalePriceMode;
  }


  public PriceListEntryPrice subscriptionSalePrice(Double subscriptionSalePrice) {
    
    this.subscriptionSalePrice = subscriptionSalePrice;
    return this;
  }

   /**
   * Get subscriptionSalePrice
   * @return subscriptionSalePrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getSubscriptionSalePrice() {
    return subscriptionSalePrice;
  }


  public void setSubscriptionSalePrice(Double subscriptionSalePrice) {
    this.subscriptionSalePrice = subscriptionSalePrice;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceListEntryPrice priceListEntryPrice = (PriceListEntryPrice) o;
    return Objects.equals(this.minQty, priceListEntryPrice.minQty) &&
        Objects.equals(this.listPriceMode, priceListEntryPrice.listPriceMode) &&
        Objects.equals(this.listPrice, priceListEntryPrice.listPrice) &&
        Objects.equals(this.salePriceMode, priceListEntryPrice.salePriceMode) &&
        Objects.equals(this.salePrice, priceListEntryPrice.salePrice) &&
        Objects.equals(this.subscriptionPriceMode, priceListEntryPrice.subscriptionPriceMode) &&
        Objects.equals(this.subscriptionPrice, priceListEntryPrice.subscriptionPrice) &&
        Objects.equals(this.subscriptionSalePriceMode, priceListEntryPrice.subscriptionSalePriceMode) &&
        Objects.equals(this.subscriptionSalePrice, priceListEntryPrice.subscriptionSalePrice);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(minQty, listPriceMode, listPrice, salePriceMode, salePrice, subscriptionPriceMode, subscriptionPrice, subscriptionSalePriceMode, subscriptionSalePrice);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceListEntryPrice {\n");
    sb.append("    minQty: ").append(toIndentedString(minQty)).append("\n");
    sb.append("    listPriceMode: ").append(toIndentedString(listPriceMode)).append("\n");
    sb.append("    listPrice: ").append(toIndentedString(listPrice)).append("\n");
    sb.append("    salePriceMode: ").append(toIndentedString(salePriceMode)).append("\n");
    sb.append("    salePrice: ").append(toIndentedString(salePrice)).append("\n");
    sb.append("    subscriptionPriceMode: ").append(toIndentedString(subscriptionPriceMode)).append("\n");
    sb.append("    subscriptionPrice: ").append(toIndentedString(subscriptionPrice)).append("\n");
    sb.append("    subscriptionSalePriceMode: ").append(toIndentedString(subscriptionSalePriceMode)).append("\n");
    sb.append("    subscriptionSalePrice: ").append(toIndentedString(subscriptionSalePrice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("minQty");
    openapiFields.add("listPriceMode");
    openapiFields.add("listPrice");
    openapiFields.add("salePriceMode");
    openapiFields.add("salePrice");
    openapiFields.add("subscriptionPriceMode");
    openapiFields.add("subscriptionPrice");
    openapiFields.add("subscriptionSalePriceMode");
    openapiFields.add("subscriptionSalePrice");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PriceListEntryPrice
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PriceListEntryPrice.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PriceListEntryPrice is not found in the empty JSON string", PriceListEntryPrice.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!PriceListEntryPrice.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PriceListEntryPrice` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("listPriceMode") != null && !jsonObj.get("listPriceMode").isJsonNull()) && !jsonObj.get("listPriceMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listPriceMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listPriceMode").toString()));
      }
      if ((jsonObj.get("salePriceMode") != null && !jsonObj.get("salePriceMode").isJsonNull()) && !jsonObj.get("salePriceMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salePriceMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salePriceMode").toString()));
      }
      if ((jsonObj.get("subscriptionPriceMode") != null && !jsonObj.get("subscriptionPriceMode").isJsonNull()) && !jsonObj.get("subscriptionPriceMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionPriceMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionPriceMode").toString()));
      }
      if ((jsonObj.get("subscriptionSalePriceMode") != null && !jsonObj.get("subscriptionSalePriceMode").isJsonNull()) && !jsonObj.get("subscriptionSalePriceMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionSalePriceMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionSalePriceMode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PriceListEntryPrice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PriceListEntryPrice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PriceListEntryPrice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PriceListEntryPrice.class));

       return (TypeAdapter<T>) new TypeAdapter<PriceListEntryPrice>() {
           @Override
           public void write(JsonWriter out, PriceListEntryPrice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PriceListEntryPrice read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PriceListEntryPrice given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PriceListEntryPrice
  * @throws IOException if the JSON string is invalid with respect to PriceListEntryPrice
  */
  public static PriceListEntryPrice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PriceListEntryPrice.class);
  }

 /**
  * Convert an instance of PriceListEntryPrice to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

