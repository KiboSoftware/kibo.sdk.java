/*
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingadmin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.shippingadmin.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.shippingadmin.models.CustomTableRate;
import com.kibocommerce.sdk.shippingadmin.models.Setting;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * CarrierConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CarrierConfiguration implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_ENABLED_FOR_RETURNS = "enabledForReturns";
  @SerializedName(SERIALIZED_NAME_ENABLED_FOR_RETURNS)
  private Boolean enabledForReturns;

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private List<Setting> settings = null;

  public static final String SERIALIZED_NAME_CUSTOM_TABLE_RATES = "customTableRates";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TABLE_RATES)
  private List<CustomTableRate> customTableRates = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_ARE_CREDENTIALS_SET = "areCredentialsSet";
  @SerializedName(SERIALIZED_NAME_ARE_CREDENTIALS_SET)
  private Boolean areCredentialsSet;

  public CarrierConfiguration() {
  }

  public CarrierConfiguration id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Carrier Id (usually a shortname of a carrier, e.g. FedEx)
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Carrier Id (usually a shortname of a carrier, e.g. FedEx)")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CarrierConfiguration enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Indicates that this CarrierConfiguration should be used at runtime
   * @return enabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that this CarrierConfiguration should be used at runtime")

  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public CarrierConfiguration enabledForReturns(Boolean enabledForReturns) {
    
    this.enabledForReturns = enabledForReturns;
    return this;
  }

   /**
   * Indicates that this CarrierConfiguration should be the default for returns shipping
   * @return enabledForReturns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that this CarrierConfiguration should be the default for returns shipping")

  public Boolean getEnabledForReturns() {
    return enabledForReturns;
  }


  public void setEnabledForReturns(Boolean enabledForReturns) {
    this.enabledForReturns = enabledForReturns;
  }


  public CarrierConfiguration settings(List<Setting> settings) {
    
    this.settings = settings;
    return this;
  }

  public CarrierConfiguration addSettingsItem(Setting settingsItem) {
    if (this.settings == null) {
      this.settings = new ArrayList<>();
    }
    this.settings.add(settingsItem);
    return this;
  }

   /**
   * Carrier Configuration Settings
   * @return settings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Carrier Configuration Settings")

  public List<Setting> getSettings() {
    return settings;
  }


  public void setSettings(List<Setting> settings) {
    this.settings = settings;
  }


  public CarrierConfiguration customTableRates(List<CustomTableRate> customTableRates) {
    
    this.customTableRates = customTableRates;
    return this;
  }

  public CarrierConfiguration addCustomTableRatesItem(CustomTableRate customTableRatesItem) {
    if (this.customTableRates == null) {
      this.customTableRates = new ArrayList<>();
    }
    this.customTableRates.add(customTableRatesItem);
    return this;
  }

   /**
   * A list of custom table rates for the &#39;Custom&#39; carrier  &lt;remarks&gt;only use this if Id &#x3D;&#x3D; &#39;Custom&#39;&lt;/remarks&gt;
   * @return customTableRates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of custom table rates for the 'Custom' carrier  <remarks>only use this if Id == 'Custom'</remarks>")

  public List<CustomTableRate> getCustomTableRates() {
    return customTableRates;
  }


  public void setCustomTableRates(List<CustomTableRate> customTableRates) {
    this.customTableRates = customTableRates;
  }


  public CarrierConfiguration auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public CarrierConfiguration areCredentialsSet(Boolean areCredentialsSet) {
    
    this.areCredentialsSet = areCredentialsSet;
    return this;
  }

   /**
   * Indicates whether the credentials/passwords are set.  &lt;remarks&gt;Credetials are updated only if this flag is set to true&lt;/remarks&gt;
   * @return areCredentialsSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the credentials/passwords are set.  <remarks>Credetials are updated only if this flag is set to true</remarks>")

  public Boolean getAreCredentialsSet() {
    return areCredentialsSet;
  }


  public void setAreCredentialsSet(Boolean areCredentialsSet) {
    this.areCredentialsSet = areCredentialsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarrierConfiguration carrierConfiguration = (CarrierConfiguration) o;
    return Objects.equals(this.id, carrierConfiguration.id) &&
        Objects.equals(this.enabled, carrierConfiguration.enabled) &&
        Objects.equals(this.enabledForReturns, carrierConfiguration.enabledForReturns) &&
        Objects.equals(this.settings, carrierConfiguration.settings) &&
        Objects.equals(this.customTableRates, carrierConfiguration.customTableRates) &&
        Objects.equals(this.auditInfo, carrierConfiguration.auditInfo) &&
        Objects.equals(this.areCredentialsSet, carrierConfiguration.areCredentialsSet);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, enabled, enabledForReturns, settings, customTableRates, auditInfo, areCredentialsSet);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarrierConfiguration {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    enabledForReturns: ").append(toIndentedString(enabledForReturns)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    customTableRates: ").append(toIndentedString(customTableRates)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    areCredentialsSet: ").append(toIndentedString(areCredentialsSet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("enabled");
    openapiFields.add("enabledForReturns");
    openapiFields.add("settings");
    openapiFields.add("customTableRates");
    openapiFields.add("auditInfo");
    openapiFields.add("areCredentialsSet");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CarrierConfiguration
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CarrierConfiguration.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CarrierConfiguration is not found in the empty JSON string", CarrierConfiguration.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CarrierConfiguration.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CarrierConfiguration` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("settings") != null && !jsonObj.get("settings").isJsonNull()) {
        JsonArray jsonArraysettings = jsonObj.getAsJsonArray("settings");
        if (jsonArraysettings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("settings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `settings` to be an array in the JSON string but got `%s`", jsonObj.get("settings").toString()));
          }

          // validate the optional field `settings` (array)
          for (int i = 0; i < jsonArraysettings.size(); i++) {
            Setting.validateJsonObject(jsonArraysettings.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("customTableRates") != null && !jsonObj.get("customTableRates").isJsonNull()) {
        JsonArray jsonArraycustomTableRates = jsonObj.getAsJsonArray("customTableRates");
        if (jsonArraycustomTableRates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customTableRates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customTableRates` to be an array in the JSON string but got `%s`", jsonObj.get("customTableRates").toString()));
          }

          // validate the optional field `customTableRates` (array)
          for (int i = 0; i < jsonArraycustomTableRates.size(); i++) {
            CustomTableRate.validateJsonObject(jsonArraycustomTableRates.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CarrierConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CarrierConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CarrierConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CarrierConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<CarrierConfiguration>() {
           @Override
           public void write(JsonWriter out, CarrierConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CarrierConfiguration read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CarrierConfiguration given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CarrierConfiguration
  * @throws IOException if the JSON string is invalid with respect to CarrierConfiguration
  */
  public static CarrierConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CarrierConfiguration.class);
  }

 /**
  * Convert an instance of CarrierConfiguration to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

