/*
 * Kibo Content Service
 * OpenAPI Spec for Kibo Content Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.content.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Summary information for Move operation
 */
@ApiModel(description = "Summary information for Move operation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentMoveSummary implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "totalCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Long totalCount;

  public static final String SERIALIZED_NAME_MOVE_COUNT = "moveCount";
  @SerializedName(SERIALIZED_NAME_MOVE_COUNT)
  private Long moveCount;

  public static final String SERIALIZED_NAME_DUPLICATE_COUNT = "duplicateCount";
  @SerializedName(SERIALIZED_NAME_DUPLICATE_COUNT)
  private Long duplicateCount;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<String> messages = null;

  public static final String SERIALIZED_NAME_SOURCE_PATH = "sourcePath";
  @SerializedName(SERIALIZED_NAME_SOURCE_PATH)
  private String sourcePath;

  public static final String SERIALIZED_NAME_DEST_PATH = "destPath";
  @SerializedName(SERIALIZED_NAME_DEST_PATH)
  private String destPath;

  public static final String SERIALIZED_NAME_PREVIEW = "preview";
  @SerializedName(SERIALIZED_NAME_PREVIEW)
  private Boolean preview;

  public static final String SERIALIZED_NAME_RENAME_DUPLICATES = "renameDuplicates";
  @SerializedName(SERIALIZED_NAME_RENAME_DUPLICATES)
  private Boolean renameDuplicates;

  public DocumentMoveSummary() {
  }

  public DocumentMoveSummary totalCount(Long totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getTotalCount() {
    return totalCount;
  }


  public void setTotalCount(Long totalCount) {
    this.totalCount = totalCount;
  }


  public DocumentMoveSummary moveCount(Long moveCount) {
    
    this.moveCount = moveCount;
    return this;
  }

   /**
   * Get moveCount
   * @return moveCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getMoveCount() {
    return moveCount;
  }


  public void setMoveCount(Long moveCount) {
    this.moveCount = moveCount;
  }


  public DocumentMoveSummary duplicateCount(Long duplicateCount) {
    
    this.duplicateCount = duplicateCount;
    return this;
  }

   /**
   * Get duplicateCount
   * @return duplicateCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getDuplicateCount() {
    return duplicateCount;
  }


  public void setDuplicateCount(Long duplicateCount) {
    this.duplicateCount = duplicateCount;
  }


  public DocumentMoveSummary messages(List<String> messages) {
    
    this.messages = messages;
    return this;
  }

  public DocumentMoveSummary addMessagesItem(String messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Get messages
   * @return messages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getMessages() {
    return messages;
  }


  public void setMessages(List<String> messages) {
    this.messages = messages;
  }


  public DocumentMoveSummary sourcePath(String sourcePath) {
    
    this.sourcePath = sourcePath;
    return this;
  }

   /**
   * Get sourcePath
   * @return sourcePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSourcePath() {
    return sourcePath;
  }


  public void setSourcePath(String sourcePath) {
    this.sourcePath = sourcePath;
  }


  public DocumentMoveSummary destPath(String destPath) {
    
    this.destPath = destPath;
    return this;
  }

   /**
   * Get destPath
   * @return destPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDestPath() {
    return destPath;
  }


  public void setDestPath(String destPath) {
    this.destPath = destPath;
  }


  public DocumentMoveSummary preview(Boolean preview) {
    
    this.preview = preview;
    return this;
  }

   /**
   * Get preview
   * @return preview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPreview() {
    return preview;
  }


  public void setPreview(Boolean preview) {
    this.preview = preview;
  }


  public DocumentMoveSummary renameDuplicates(Boolean renameDuplicates) {
    
    this.renameDuplicates = renameDuplicates;
    return this;
  }

   /**
   * Get renameDuplicates
   * @return renameDuplicates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRenameDuplicates() {
    return renameDuplicates;
  }


  public void setRenameDuplicates(Boolean renameDuplicates) {
    this.renameDuplicates = renameDuplicates;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentMoveSummary documentMoveSummary = (DocumentMoveSummary) o;
    return Objects.equals(this.totalCount, documentMoveSummary.totalCount) &&
        Objects.equals(this.moveCount, documentMoveSummary.moveCount) &&
        Objects.equals(this.duplicateCount, documentMoveSummary.duplicateCount) &&
        Objects.equals(this.messages, documentMoveSummary.messages) &&
        Objects.equals(this.sourcePath, documentMoveSummary.sourcePath) &&
        Objects.equals(this.destPath, documentMoveSummary.destPath) &&
        Objects.equals(this.preview, documentMoveSummary.preview) &&
        Objects.equals(this.renameDuplicates, documentMoveSummary.renameDuplicates);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalCount, moveCount, duplicateCount, messages, sourcePath, destPath, preview, renameDuplicates);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentMoveSummary {\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    moveCount: ").append(toIndentedString(moveCount)).append("\n");
    sb.append("    duplicateCount: ").append(toIndentedString(duplicateCount)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    sourcePath: ").append(toIndentedString(sourcePath)).append("\n");
    sb.append("    destPath: ").append(toIndentedString(destPath)).append("\n");
    sb.append("    preview: ").append(toIndentedString(preview)).append("\n");
    sb.append("    renameDuplicates: ").append(toIndentedString(renameDuplicates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("totalCount");
    openapiFields.add("moveCount");
    openapiFields.add("duplicateCount");
    openapiFields.add("messages");
    openapiFields.add("sourcePath");
    openapiFields.add("destPath");
    openapiFields.add("preview");
    openapiFields.add("renameDuplicates");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DocumentMoveSummary
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DocumentMoveSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DocumentMoveSummary is not found in the empty JSON string", DocumentMoveSummary.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!DocumentMoveSummary.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DocumentMoveSummary` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // ensure the json data is an array
      if (!jsonObj.get("messages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
      }
      if ((jsonObj.get("sourcePath") != null && !jsonObj.get("sourcePath").isJsonNull()) && !jsonObj.get("sourcePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourcePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourcePath").toString()));
      }
      if ((jsonObj.get("destPath") != null && !jsonObj.get("destPath").isJsonNull()) && !jsonObj.get("destPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destPath").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DocumentMoveSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DocumentMoveSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DocumentMoveSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DocumentMoveSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<DocumentMoveSummary>() {
           @Override
           public void write(JsonWriter out, DocumentMoveSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DocumentMoveSummary read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DocumentMoveSummary given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DocumentMoveSummary
  * @throws IOException if the JSON string is invalid with respect to DocumentMoveSummary
  */
  public static DocumentMoveSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DocumentMoveSummary.class);
  }

 /**
  * Convert an instance of DocumentMoveSummary to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

