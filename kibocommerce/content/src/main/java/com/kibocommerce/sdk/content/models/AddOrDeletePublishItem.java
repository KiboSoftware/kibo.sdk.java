/*
 * Kibo Content Service
 * OpenAPI Spec for Kibo Content Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.content.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * AddOrDeletePublishItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AddOrDeletePublishItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_DOCUMENT_ID = "documentId";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_ID)
  private String documentId;

  public static final String SERIALIZED_NAME_DOC_LIST_F_Q_N = "docListFQN";
  @SerializedName(SERIALIZED_NAME_DOC_LIST_F_Q_N)
  private String docListFQN;

  public static final String SERIALIZED_NAME_SCOPE_TYPE = "scopeType";
  @SerializedName(SERIALIZED_NAME_SCOPE_TYPE)
  private String scopeType;

  public static final String SERIALIZED_NAME_SCOPE_ID = "scopeId";
  @SerializedName(SERIALIZED_NAME_SCOPE_ID)
  private Integer scopeId;

  public AddOrDeletePublishItem() {
  }

  public AddOrDeletePublishItem documentId(String documentId) {
    
    this.documentId = documentId;
    return this;
  }

   /**
   * Get documentId
   * @return documentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentId() {
    return documentId;
  }


  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }


  public AddOrDeletePublishItem docListFQN(String docListFQN) {
    
    this.docListFQN = docListFQN;
    return this;
  }

   /**
   * Get docListFQN
   * @return docListFQN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocListFQN() {
    return docListFQN;
  }


  public void setDocListFQN(String docListFQN) {
    this.docListFQN = docListFQN;
  }


  public AddOrDeletePublishItem scopeType(String scopeType) {
    
    this.scopeType = scopeType;
    return this;
  }

   /**
   * Get scopeType
   * @return scopeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getScopeType() {
    return scopeType;
  }


  public void setScopeType(String scopeType) {
    this.scopeType = scopeType;
  }


  public AddOrDeletePublishItem scopeId(Integer scopeId) {
    
    this.scopeId = scopeId;
    return this;
  }

   /**
   * Get scopeId
   * @return scopeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getScopeId() {
    return scopeId;
  }


  public void setScopeId(Integer scopeId) {
    this.scopeId = scopeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddOrDeletePublishItem addOrDeletePublishItem = (AddOrDeletePublishItem) o;
    return Objects.equals(this.documentId, addOrDeletePublishItem.documentId) &&
        Objects.equals(this.docListFQN, addOrDeletePublishItem.docListFQN) &&
        Objects.equals(this.scopeType, addOrDeletePublishItem.scopeType) &&
        Objects.equals(this.scopeId, addOrDeletePublishItem.scopeId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, docListFQN, scopeType, scopeId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddOrDeletePublishItem {\n");
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    docListFQN: ").append(toIndentedString(docListFQN)).append("\n");
    sb.append("    scopeType: ").append(toIndentedString(scopeType)).append("\n");
    sb.append("    scopeId: ").append(toIndentedString(scopeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("documentId");
    openapiFields.add("docListFQN");
    openapiFields.add("scopeType");
    openapiFields.add("scopeId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AddOrDeletePublishItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AddOrDeletePublishItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddOrDeletePublishItem is not found in the empty JSON string", AddOrDeletePublishItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!AddOrDeletePublishItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddOrDeletePublishItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("documentId") != null && !jsonObj.get("documentId").isJsonNull()) && !jsonObj.get("documentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentId").toString()));
      }
      if ((jsonObj.get("docListFQN") != null && !jsonObj.get("docListFQN").isJsonNull()) && !jsonObj.get("docListFQN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docListFQN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docListFQN").toString()));
      }
      if ((jsonObj.get("scopeType") != null && !jsonObj.get("scopeType").isJsonNull()) && !jsonObj.get("scopeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scopeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scopeType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddOrDeletePublishItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddOrDeletePublishItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddOrDeletePublishItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddOrDeletePublishItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AddOrDeletePublishItem>() {
           @Override
           public void write(JsonWriter out, AddOrDeletePublishItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddOrDeletePublishItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AddOrDeletePublishItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AddOrDeletePublishItem
  * @throws IOException if the JSON string is invalid with respect to AddOrDeletePublishItem
  */
  public static AddOrDeletePublishItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddOrDeletePublishItem.class);
  }

 /**
  * Convert an instance of AddOrDeletePublishItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

