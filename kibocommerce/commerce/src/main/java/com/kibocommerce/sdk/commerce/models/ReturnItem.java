/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeProduct;
import com.kibocommerce.sdk.commerce.models.InventoryTags;
import com.kibocommerce.sdk.commerce.models.OrderNote;
import com.kibocommerce.sdk.commerce.models.ReturnBundle;
import com.kibocommerce.sdk.commerce.models.ReturnReason;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReturnItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ORDER_ITEM_ID = "orderItemId";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_ID)
  private String orderItemId;

  public static final String SERIALIZED_NAME_ORDER_LINE_ID = "orderLineId";
  @SerializedName(SERIALIZED_NAME_ORDER_LINE_ID)
  private Integer orderLineId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_OPTION_ATTRIBUTE_F_Q_N = "orderItemOptionAttributeFQN";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_OPTION_ATTRIBUTE_F_Q_N)
  private String orderItemOptionAttributeFQN;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private CommerceRuntimeProduct product;

  public static final String SERIALIZED_NAME_REASONS = "reasons";
  @SerializedName(SERIALIZED_NAME_REASONS)
  private List<ReturnReason> reasons = null;

  public static final String SERIALIZED_NAME_EXCLUDE_PRODUCT_EXTRAS = "excludeProductExtras";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_PRODUCT_EXTRAS)
  private Boolean excludeProductExtras;

  public static final String SERIALIZED_NAME_RETURN_TYPE = "returnType";
  @SerializedName(SERIALIZED_NAME_RETURN_TYPE)
  private String returnType;

  public static final String SERIALIZED_NAME_RETURN_NOT_REQUIRED = "returnNotRequired";
  @SerializedName(SERIALIZED_NAME_RETURN_NOT_REQUIRED)
  private Boolean returnNotRequired;

  public static final String SERIALIZED_NAME_QUANTITY_RECEIVED = "quantityReceived";
  @SerializedName(SERIALIZED_NAME_QUANTITY_RECEIVED)
  private Integer quantityReceived;

  public static final String SERIALIZED_NAME_RECEIVE_STATUS = "receiveStatus";
  @SerializedName(SERIALIZED_NAME_RECEIVE_STATUS)
  private String receiveStatus;

  public static final String SERIALIZED_NAME_QUANTITY_SHIPPED = "quantityShipped";
  @SerializedName(SERIALIZED_NAME_QUANTITY_SHIPPED)
  private Integer quantityShipped;

  public static final String SERIALIZED_NAME_REPLACE_STATUS = "replaceStatus";
  @SerializedName(SERIALIZED_NAME_REPLACE_STATUS)
  private String replaceStatus;

  public static final String SERIALIZED_NAME_QUANTITY_RESTOCKABLE = "quantityRestockable";
  @SerializedName(SERIALIZED_NAME_QUANTITY_RESTOCKABLE)
  private Integer quantityRestockable;

  public static final String SERIALIZED_NAME_QUANTITY_RESTOCKED = "quantityRestocked";
  @SerializedName(SERIALIZED_NAME_QUANTITY_RESTOCKED)
  private Integer quantityRestocked;

  public static final String SERIALIZED_NAME_REFUND_AMOUNT = "refundAmount";
  @SerializedName(SERIALIZED_NAME_REFUND_AMOUNT)
  private Double refundAmount;

  public static final String SERIALIZED_NAME_RETURN_PROCESSING_FEE_APPLIED = "returnProcessingFeeApplied";
  @SerializedName(SERIALIZED_NAME_RETURN_PROCESSING_FEE_APPLIED)
  private Double returnProcessingFeeApplied;

  public static final String SERIALIZED_NAME_SHIPPING_AND_HANDLING_REFUNDED = "shippingAndHandlingRefunded";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AND_HANDLING_REFUNDED)
  private Boolean shippingAndHandlingRefunded;

  public static final String SERIALIZED_NAME_QUANTITY_REFUNDED = "quantityRefunded";
  @SerializedName(SERIALIZED_NAME_QUANTITY_REFUNDED)
  private Integer quantityRefunded;

  public static final String SERIALIZED_NAME_REFUND_STATUS = "refundStatus";
  @SerializedName(SERIALIZED_NAME_REFUND_STATUS)
  private String refundStatus;

  public static final String SERIALIZED_NAME_QUANTITY_REPLACED = "quantityReplaced";
  @SerializedName(SERIALIZED_NAME_QUANTITY_REPLACED)
  private Integer quantityReplaced;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private List<OrderNote> notes = null;

  public static final String SERIALIZED_NAME_PRODUCT_LOSS_AMOUNT = "productLossAmount";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LOSS_AMOUNT)
  private Double productLossAmount;

  public static final String SERIALIZED_NAME_PRODUCT_LOSS_TAX_AMOUNT = "productLossTaxAmount";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LOSS_TAX_AMOUNT)
  private Double productLossTaxAmount;

  public static final String SERIALIZED_NAME_SHIPPING_LOSS_AMOUNT = "shippingLossAmount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LOSS_AMOUNT)
  private Double shippingLossAmount;

  public static final String SERIALIZED_NAME_SHIPPING_LOSS_TAX_AMOUNT = "shippingLossTaxAmount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LOSS_TAX_AMOUNT)
  private Double shippingLossTaxAmount;

  public static final String SERIALIZED_NAME_BUNDLED_PRODUCTS = "bundledProducts";
  @SerializedName(SERIALIZED_NAME_BUNDLED_PRODUCTS)
  private List<ReturnBundle> bundledProducts = null;

  public static final String SERIALIZED_NAME_TOTAL_WITHOUT_WEIGHTED_SHIPPING_AND_HANDLING = "totalWithoutWeightedShippingAndHandling";
  @SerializedName(SERIALIZED_NAME_TOTAL_WITHOUT_WEIGHTED_SHIPPING_AND_HANDLING)
  private Double totalWithoutWeightedShippingAndHandling;

  public static final String SERIALIZED_NAME_TOTAL_WITH_WEIGHTED_SHIPPING_AND_HANDLING = "totalWithWeightedShippingAndHandling";
  @SerializedName(SERIALIZED_NAME_TOTAL_WITH_WEIGHTED_SHIPPING_AND_HANDLING)
  private Double totalWithWeightedShippingAndHandling;

  public static final String SERIALIZED_NAME_SHIPMENT_ITEM_ID = "shipmentItemId";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_ITEM_ID)
  private Integer shipmentItemId;

  public static final String SERIALIZED_NAME_SHIPMENT_NUMBER = "shipmentNumber";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_NUMBER)
  private Integer shipmentNumber;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data;

  public static final String SERIALIZED_NAME_INVENTORY_TAGS = "inventoryTags";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TAGS)
  private List<InventoryTags> inventoryTags = null;

  public ReturnItem() {
  }

  public ReturnItem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The identifer of the return
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifer of the return")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ReturnItem orderItemId(String orderItemId) {
    
    this.orderItemId = orderItemId;
    return this;
  }

   /**
   * The OrderItem that this ReturnItem is associated with. Either the Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.Product or the OrderItemId must be present.
   * @return orderItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OrderItem that this ReturnItem is associated with. Either the Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.Product or the OrderItemId must be present.")

  public String getOrderItemId() {
    return orderItemId;
  }


  public void setOrderItemId(String orderItemId) {
    this.orderItemId = orderItemId;
  }


  public ReturnItem orderLineId(Integer orderLineId) {
    
    this.orderLineId = orderLineId;
    return this;
  }

   /**
   * The OrderLineId that this ReturnItem is associated with. If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.OrderItemId is present, the OrderLineId should be present also.
   * @return orderLineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The OrderLineId that this ReturnItem is associated with. If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.OrderItemId is present, the OrderLineId should be present also.")

  public Integer getOrderLineId() {
    return orderLineId;
  }


  public void setOrderLineId(Integer orderLineId) {
    this.orderLineId = orderLineId;
  }


  public ReturnItem orderItemOptionAttributeFQN(String orderItemOptionAttributeFQN) {
    
    this.orderItemOptionAttributeFQN = orderItemOptionAttributeFQN;
    return this;
  }

   /**
   * If this item refers to a product extra, provide the item&#39;s corresponding OptionAttributeFQN.
   * @return orderItemOptionAttributeFQN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this item refers to a product extra, provide the item's corresponding OptionAttributeFQN.")

  public String getOrderItemOptionAttributeFQN() {
    return orderItemOptionAttributeFQN;
  }


  public void setOrderItemOptionAttributeFQN(String orderItemOptionAttributeFQN) {
    this.orderItemOptionAttributeFQN = orderItemOptionAttributeFQN;
  }


  public ReturnItem product(CommerceRuntimeProduct product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeProduct getProduct() {
    return product;
  }


  public void setProduct(CommerceRuntimeProduct product) {
    this.product = product;
  }


  public ReturnItem reasons(List<ReturnReason> reasons) {
    
    this.reasons = reasons;
    return this;
  }

  public ReturnItem addReasonsItem(ReturnReason reasonsItem) {
    if (this.reasons == null) {
      this.reasons = new ArrayList<>();
    }
    this.reasons.add(reasonsItem);
    return this;
  }

   /**
   * For a given return reason (Damaged, Defective, MissingParts, DifferentExpectations, Late, NoLongerWanted, Other),  how many of the above OrderItem are to be replaced.  This value is provided by the Shopper when they request a Return.
   * @return reasons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For a given return reason (Damaged, Defective, MissingParts, DifferentExpectations, Late, NoLongerWanted, Other),  how many of the above OrderItem are to be replaced.  This value is provided by the Shopper when they request a Return.")

  public List<ReturnReason> getReasons() {
    return reasons;
  }


  public void setReasons(List<ReturnReason> reasons) {
    this.reasons = reasons;
  }


  public ReturnItem excludeProductExtras(Boolean excludeProductExtras) {
    
    this.excludeProductExtras = excludeProductExtras;
    return this;
  }

   /**
   * If this return item refers to a product/bundle that has product extras, this specifies whether those child items should be included or excluded.  For backward compatibility, a null value will be treated as false, i.e. include the extras.
   * @return excludeProductExtras
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this return item refers to a product/bundle that has product extras, this specifies whether those child items should be included or excluded.  For backward compatibility, a null value will be treated as false, i.e. include the extras.")

  public Boolean getExcludeProductExtras() {
    return excludeProductExtras;
  }


  public void setExcludeProductExtras(Boolean excludeProductExtras) {
    this.excludeProductExtras = excludeProductExtras;
  }


  public ReturnItem returnType(String returnType) {
    
    this.returnType = returnType;
    return this;
  }

   /**
   * Specifies whether the requested resolution for this item is Refund or Replace.
   * @return returnType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether the requested resolution for this item is Refund or Replace.")

  public String getReturnType() {
    return returnType;
  }


  public void setReturnType(String returnType) {
    this.returnType = returnType;
  }


  public ReturnItem returnNotRequired(Boolean returnNotRequired) {
    
    this.returnNotRequired = returnNotRequired;
    return this;
  }

   /**
   * Specifies whether this item should be returned to the merchant, e.g. if the item is irreparably damaged and it&#39;s not worth shipping back.  Even if this is set to true, Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityShipped should still be set to the quantity of items involved in the return.
   * @return returnNotRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether this item should be returned to the merchant, e.g. if the item is irreparably damaged and it's not worth shipping back.  Even if this is set to true, Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityShipped should still be set to the quantity of items involved in the return.")

  public Boolean getReturnNotRequired() {
    return returnNotRequired;
  }


  public void setReturnNotRequired(Boolean returnNotRequired) {
    this.returnNotRequired = returnNotRequired;
  }


  public ReturnItem quantityReceived(Integer quantityReceived) {
    
    this.quantityReceived = quantityReceived;
    return this;
  }

   /**
   * The amount of this item actually received from the shopper. It may differ from the sum of the ReturnReasons.  This is populated by the system when the Receive action is performed.
   * @return quantityReceived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The amount of this item actually received from the shopper. It may differ from the sum of the ReturnReasons.  This is populated by the system when the Receive action is performed.")

  public Integer getQuantityReceived() {
    return quantityReceived;
  }


  public void setQuantityReceived(Integer quantityReceived) {
    this.quantityReceived = quantityReceived;
  }


  public ReturnItem receiveStatus(String receiveStatus) {
    
    this.receiveStatus = receiveStatus;
    return this;
  }

   /**
   * Describes the receive status of this item.  If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnNotRequired is {true}, then this should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatusConst.NOT_REQUESTED.  Otherwise the value should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatusConst.RECEIVED or Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatusConst.WAITING depending on Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityReceived.
   * @return receiveStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Describes the receive status of this item.  If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnNotRequired is {true}, then this should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatusConst.NOT_REQUESTED.  Otherwise the value should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatusConst.RECEIVED or Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReceiveStatusConst.WAITING depending on Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityReceived.")

  public String getReceiveStatus() {
    return receiveStatus;
  }


  public void setReceiveStatus(String receiveStatus) {
    this.receiveStatus = receiveStatus;
  }


  public ReturnItem quantityShipped(Integer quantityShipped) {
    
    this.quantityShipped = quantityShipped;
    return this;
  }

   /**
   * The quantity of this item fulfilled on the parent order.
   * @return quantityShipped
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The quantity of this item fulfilled on the parent order.")

  public Integer getQuantityShipped() {
    return quantityShipped;
  }


  public void setQuantityShipped(Integer quantityShipped) {
    this.quantityShipped = quantityShipped;
  }


  public ReturnItem replaceStatus(String replaceStatus) {
    
    this.replaceStatus = replaceStatus;
    return this;
  }

   /**
   * Describes the replace status of this item.  If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnType is Mozu.CommerceRuntime.Contracts.Returns.Return.ReturnTypeConst.REFUND, then this should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatusConst.NOT_REQUESTED.  Otherwise the value should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatusConst.REPLACED or Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatusConst.NOT_REPLACED depending on Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityReplaced.
   * @return replaceStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Describes the replace status of this item.  If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnType is Mozu.CommerceRuntime.Contracts.Returns.Return.ReturnTypeConst.REFUND, then this should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatusConst.NOT_REQUESTED.  Otherwise the value should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatusConst.REPLACED or Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemReplaceStatusConst.NOT_REPLACED depending on Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.QuantityReplaced.")

  public String getReplaceStatus() {
    return replaceStatus;
  }


  public void setReplaceStatus(String replaceStatus) {
    this.replaceStatus = replaceStatus;
  }


  public ReturnItem quantityRestockable(Integer quantityRestockable) {
    
    this.quantityRestockable = quantityRestockable;
    return this;
  }

   /**
   * Of the quantity returned, how many of this item can be added back into the inventory? This item is set by the merchant via an UpdateReturn call.  It is used during the Restock action to set some quantity of this item back into the inventory management system.
   * @return quantityRestockable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Of the quantity returned, how many of this item can be added back into the inventory? This item is set by the merchant via an UpdateReturn call.  It is used during the Restock action to set some quantity of this item back into the inventory management system.")

  public Integer getQuantityRestockable() {
    return quantityRestockable;
  }


  public void setQuantityRestockable(Integer quantityRestockable) {
    this.quantityRestockable = quantityRestockable;
  }


  public ReturnItem quantityRestocked(Integer quantityRestocked) {
    
    this.quantityRestocked = quantityRestocked;
    return this;
  }

   /**
   * Field to specify How many items added to inventory
   * @return quantityRestocked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Field to specify How many items added to inventory")

  public Integer getQuantityRestocked() {
    return quantityRestocked;
  }


  public void setQuantityRestocked(Integer quantityRestocked) {
    this.quantityRestocked = quantityRestocked;
  }


  public ReturnItem refundAmount(Double refundAmount) {
    
    this.refundAmount = refundAmount;
    return this;
  }

   /**
   * If a refund is issued for the return, how much of the refund amount is for this particular item.
   * @return refundAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If a refund is issued for the return, how much of the refund amount is for this particular item.")

  public Double getRefundAmount() {
    return refundAmount;
  }


  public void setRefundAmount(Double refundAmount) {
    this.refundAmount = refundAmount;
  }


  public ReturnItem returnProcessingFeeApplied(Double returnProcessingFeeApplied) {
    
    this.returnProcessingFeeApplied = returnProcessingFeeApplied;
    return this;
  }

   /**
   * The processing fee on the item that gets persisted into the database
   * @return returnProcessingFeeApplied
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The processing fee on the item that gets persisted into the database")

  public Double getReturnProcessingFeeApplied() {
    return returnProcessingFeeApplied;
  }


  public void setReturnProcessingFeeApplied(Double returnProcessingFeeApplied) {
    this.returnProcessingFeeApplied = returnProcessingFeeApplied;
  }


  public ReturnItem shippingAndHandlingRefunded(Boolean shippingAndHandlingRefunded) {
    
    this.shippingAndHandlingRefunded = shippingAndHandlingRefunded;
    return this;
  }

   /**
   * Determines if shipping and handling is returned on the item
   * @return shippingAndHandlingRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines if shipping and handling is returned on the item")

  public Boolean getShippingAndHandlingRefunded() {
    return shippingAndHandlingRefunded;
  }


  public void setShippingAndHandlingRefunded(Boolean shippingAndHandlingRefunded) {
    this.shippingAndHandlingRefunded = shippingAndHandlingRefunded;
  }


  public ReturnItem quantityRefunded(Integer quantityRefunded) {
    
    this.quantityRefunded = quantityRefunded;
    return this;
  }

   /**
   * The quantity of the item being refunded is specified in this field
   * @return quantityRefunded
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The quantity of the item being refunded is specified in this field")

  public Integer getQuantityRefunded() {
    return quantityRefunded;
  }


  public void setQuantityRefunded(Integer quantityRefunded) {
    this.quantityRefunded = quantityRefunded;
  }


  public ReturnItem refundStatus(String refundStatus) {
    
    this.refundStatus = refundStatus;
    return this;
  }

   /**
   * Describes the refund status of this item.  If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnType is Mozu.CommerceRuntime.Contracts.Returns.Return.ReturnTypeConst.REPLACE, then this should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusConst.NOT_REQUESTED.  Otherwise the value should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusConst.REFUNDED or Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusConst.NOT_REFUNDED depending on Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.RefundAmount.
   * @return refundStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Describes the refund status of this item.  If Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ReturnType is Mozu.CommerceRuntime.Contracts.Returns.Return.ReturnTypeConst.REPLACE, then this should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusConst.NOT_REQUESTED.  Otherwise the value should be Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusConst.REFUNDED or Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.ItemRefundStatusConst.NOT_REFUNDED depending on Mozu.CommerceRuntime.Contracts.Returns.ReturnItem.RefundAmount.")

  public String getRefundStatus() {
    return refundStatus;
  }


  public void setRefundStatus(String refundStatus) {
    this.refundStatus = refundStatus;
  }


  public ReturnItem quantityReplaced(Integer quantityReplaced) {
    
    this.quantityReplaced = quantityReplaced;
    return this;
  }

   /**
   * Specifies the quantity of this item that has been marked as replaced, i.e. it has been used to generate a replacement order for the return.  Note that the quantity replaced may not line up with the quantity of the item actually sent back to the shopper,  such as in the case of an exchange, e.g. swapping a medium shirt for a large shirt.
   * @return quantityReplaced
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies the quantity of this item that has been marked as replaced, i.e. it has been used to generate a replacement order for the return.  Note that the quantity replaced may not line up with the quantity of the item actually sent back to the shopper,  such as in the case of an exchange, e.g. swapping a medium shirt for a large shirt.")

  public Integer getQuantityReplaced() {
    return quantityReplaced;
  }


  public void setQuantityReplaced(Integer quantityReplaced) {
    this.quantityReplaced = quantityReplaced;
  }


  public ReturnItem notes(List<OrderNote> notes) {
    
    this.notes = notes;
    return this;
  }

  public ReturnItem addNotesItem(OrderNote notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Any merchant-supplied notes for this ReturnItem.
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any merchant-supplied notes for this ReturnItem.")

  public List<OrderNote> getNotes() {
    return notes;
  }


  public void setNotes(List<OrderNote> notes) {
    this.notes = notes;
  }


  public ReturnItem productLossAmount(Double productLossAmount) {
    
    this.productLossAmount = productLossAmount;
    return this;
  }

   /**
   * The loss incurred of the returned products, used for accounting purposes.
   * @return productLossAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The loss incurred of the returned products, used for accounting purposes.")

  public Double getProductLossAmount() {
    return productLossAmount;
  }


  public void setProductLossAmount(Double productLossAmount) {
    this.productLossAmount = productLossAmount;
  }


  public ReturnItem productLossTaxAmount(Double productLossTaxAmount) {
    
    this.productLossTaxAmount = productLossTaxAmount;
    return this;
  }

   /**
   * The tax on the returned products, used for accounting purposes.
   * @return productLossTaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tax on the returned products, used for accounting purposes.")

  public Double getProductLossTaxAmount() {
    return productLossTaxAmount;
  }


  public void setProductLossTaxAmount(Double productLossTaxAmount) {
    this.productLossTaxAmount = productLossTaxAmount;
  }


  public ReturnItem shippingLossAmount(Double shippingLossAmount) {
    
    this.shippingLossAmount = shippingLossAmount;
    return this;
  }

   /**
   * The loss incurred of the returned product shipping, used for accounting purposes.
   * @return shippingLossAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The loss incurred of the returned product shipping, used for accounting purposes.")

  public Double getShippingLossAmount() {
    return shippingLossAmount;
  }


  public void setShippingLossAmount(Double shippingLossAmount) {
    this.shippingLossAmount = shippingLossAmount;
  }


  public ReturnItem shippingLossTaxAmount(Double shippingLossTaxAmount) {
    
    this.shippingLossTaxAmount = shippingLossTaxAmount;
    return this;
  }

   /**
   * The tax on the returned product shipping, used for accounting purposes.
   * @return shippingLossTaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The tax on the returned product shipping, used for accounting purposes.")

  public Double getShippingLossTaxAmount() {
    return shippingLossTaxAmount;
  }


  public void setShippingLossTaxAmount(Double shippingLossTaxAmount) {
    this.shippingLossTaxAmount = shippingLossTaxAmount;
  }


  public ReturnItem bundledProducts(List<ReturnBundle> bundledProducts) {
    
    this.bundledProducts = bundledProducts;
    return this;
  }

  public ReturnItem addBundledProductsItem(ReturnBundle bundledProductsItem) {
    if (this.bundledProducts == null) {
      this.bundledProducts = new ArrayList<>();
    }
    this.bundledProducts.add(bundledProductsItem);
    return this;
  }

   /**
   * Deprecated. Not used.
   * @return bundledProducts
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated. Not used.")

  public List<ReturnBundle> getBundledProducts() {
    return bundledProducts;
  }


  public void setBundledProducts(List<ReturnBundle> bundledProducts) {
    this.bundledProducts = bundledProducts;
  }


  public ReturnItem totalWithoutWeightedShippingAndHandling(Double totalWithoutWeightedShippingAndHandling) {
    
    this.totalWithoutWeightedShippingAndHandling = totalWithoutWeightedShippingAndHandling;
    return this;
  }

   /**
   * Taxable Subtotal including Weighted Order amounts
   * @return totalWithoutWeightedShippingAndHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Taxable Subtotal including Weighted Order amounts")

  public Double getTotalWithoutWeightedShippingAndHandling() {
    return totalWithoutWeightedShippingAndHandling;
  }


  public void setTotalWithoutWeightedShippingAndHandling(Double totalWithoutWeightedShippingAndHandling) {
    this.totalWithoutWeightedShippingAndHandling = totalWithoutWeightedShippingAndHandling;
  }


  public ReturnItem totalWithWeightedShippingAndHandling(Double totalWithWeightedShippingAndHandling) {
    
    this.totalWithWeightedShippingAndHandling = totalWithWeightedShippingAndHandling;
    return this;
  }

   /**
   * Line item total with line item, Tax, Weighted Tax with Weighted shipping and handling costs
   * @return totalWithWeightedShippingAndHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line item total with line item, Tax, Weighted Tax with Weighted shipping and handling costs")

  public Double getTotalWithWeightedShippingAndHandling() {
    return totalWithWeightedShippingAndHandling;
  }


  public void setTotalWithWeightedShippingAndHandling(Double totalWithWeightedShippingAndHandling) {
    this.totalWithWeightedShippingAndHandling = totalWithWeightedShippingAndHandling;
  }


  public ReturnItem shipmentItemId(Integer shipmentItemId) {
    
    this.shipmentItemId = shipmentItemId;
    return this;
  }

   /**
   * The identifer of the item
   * @return shipmentItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The identifer of the item")

  public Integer getShipmentItemId() {
    return shipmentItemId;
  }


  public void setShipmentItemId(Integer shipmentItemId) {
    this.shipmentItemId = shipmentItemId;
  }


  public ReturnItem shipmentNumber(Integer shipmentNumber) {
    
    this.shipmentNumber = shipmentNumber;
    return this;
  }

   /**
   * Get shipmentNumber
   * @return shipmentNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getShipmentNumber() {
    return shipmentNumber;
  }


  public void setShipmentNumber(Integer shipmentNumber) {
    this.shipmentNumber = shipmentNumber;
  }


  public ReturnItem data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Custom data for a given vendor set within the commerce process.
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom data for a given vendor set within the commerce process.")

  public Object getData() {
    return data;
  }


  public void setData(Object data) {
    this.data = data;
  }


  public ReturnItem inventoryTags(List<InventoryTags> inventoryTags) {
    
    this.inventoryTags = inventoryTags;
    return this;
  }

  public ReturnItem addInventoryTagsItem(InventoryTags inventoryTagsItem) {
    if (this.inventoryTags == null) {
      this.inventoryTags = new ArrayList<>();
    }
    this.inventoryTags.add(inventoryTagsItem);
    return this;
  }

   /**
   * Get inventoryTags
   * @return inventoryTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<InventoryTags> getInventoryTags() {
    return inventoryTags;
  }


  public void setInventoryTags(List<InventoryTags> inventoryTags) {
    this.inventoryTags = inventoryTags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReturnItem returnItem = (ReturnItem) o;
    return Objects.equals(this.id, returnItem.id) &&
        Objects.equals(this.orderItemId, returnItem.orderItemId) &&
        Objects.equals(this.orderLineId, returnItem.orderLineId) &&
        Objects.equals(this.orderItemOptionAttributeFQN, returnItem.orderItemOptionAttributeFQN) &&
        Objects.equals(this.product, returnItem.product) &&
        Objects.equals(this.reasons, returnItem.reasons) &&
        Objects.equals(this.excludeProductExtras, returnItem.excludeProductExtras) &&
        Objects.equals(this.returnType, returnItem.returnType) &&
        Objects.equals(this.returnNotRequired, returnItem.returnNotRequired) &&
        Objects.equals(this.quantityReceived, returnItem.quantityReceived) &&
        Objects.equals(this.receiveStatus, returnItem.receiveStatus) &&
        Objects.equals(this.quantityShipped, returnItem.quantityShipped) &&
        Objects.equals(this.replaceStatus, returnItem.replaceStatus) &&
        Objects.equals(this.quantityRestockable, returnItem.quantityRestockable) &&
        Objects.equals(this.quantityRestocked, returnItem.quantityRestocked) &&
        Objects.equals(this.refundAmount, returnItem.refundAmount) &&
        Objects.equals(this.returnProcessingFeeApplied, returnItem.returnProcessingFeeApplied) &&
        Objects.equals(this.shippingAndHandlingRefunded, returnItem.shippingAndHandlingRefunded) &&
        Objects.equals(this.quantityRefunded, returnItem.quantityRefunded) &&
        Objects.equals(this.refundStatus, returnItem.refundStatus) &&
        Objects.equals(this.quantityReplaced, returnItem.quantityReplaced) &&
        Objects.equals(this.notes, returnItem.notes) &&
        Objects.equals(this.productLossAmount, returnItem.productLossAmount) &&
        Objects.equals(this.productLossTaxAmount, returnItem.productLossTaxAmount) &&
        Objects.equals(this.shippingLossAmount, returnItem.shippingLossAmount) &&
        Objects.equals(this.shippingLossTaxAmount, returnItem.shippingLossTaxAmount) &&
        Objects.equals(this.bundledProducts, returnItem.bundledProducts) &&
        Objects.equals(this.totalWithoutWeightedShippingAndHandling, returnItem.totalWithoutWeightedShippingAndHandling) &&
        Objects.equals(this.totalWithWeightedShippingAndHandling, returnItem.totalWithWeightedShippingAndHandling) &&
        Objects.equals(this.shipmentItemId, returnItem.shipmentItemId) &&
        Objects.equals(this.shipmentNumber, returnItem.shipmentNumber) &&
        Objects.equals(this.data, returnItem.data) &&
        Objects.equals(this.inventoryTags, returnItem.inventoryTags);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, orderItemId, orderLineId, orderItemOptionAttributeFQN, product, reasons, excludeProductExtras, returnType, returnNotRequired, quantityReceived, receiveStatus, quantityShipped, replaceStatus, quantityRestockable, quantityRestocked, refundAmount, returnProcessingFeeApplied, shippingAndHandlingRefunded, quantityRefunded, refundStatus, quantityReplaced, notes, productLossAmount, productLossTaxAmount, shippingLossAmount, shippingLossTaxAmount, bundledProducts, totalWithoutWeightedShippingAndHandling, totalWithWeightedShippingAndHandling, shipmentItemId, shipmentNumber, data, inventoryTags);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReturnItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    orderItemId: ").append(toIndentedString(orderItemId)).append("\n");
    sb.append("    orderLineId: ").append(toIndentedString(orderLineId)).append("\n");
    sb.append("    orderItemOptionAttributeFQN: ").append(toIndentedString(orderItemOptionAttributeFQN)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    reasons: ").append(toIndentedString(reasons)).append("\n");
    sb.append("    excludeProductExtras: ").append(toIndentedString(excludeProductExtras)).append("\n");
    sb.append("    returnType: ").append(toIndentedString(returnType)).append("\n");
    sb.append("    returnNotRequired: ").append(toIndentedString(returnNotRequired)).append("\n");
    sb.append("    quantityReceived: ").append(toIndentedString(quantityReceived)).append("\n");
    sb.append("    receiveStatus: ").append(toIndentedString(receiveStatus)).append("\n");
    sb.append("    quantityShipped: ").append(toIndentedString(quantityShipped)).append("\n");
    sb.append("    replaceStatus: ").append(toIndentedString(replaceStatus)).append("\n");
    sb.append("    quantityRestockable: ").append(toIndentedString(quantityRestockable)).append("\n");
    sb.append("    quantityRestocked: ").append(toIndentedString(quantityRestocked)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    returnProcessingFeeApplied: ").append(toIndentedString(returnProcessingFeeApplied)).append("\n");
    sb.append("    shippingAndHandlingRefunded: ").append(toIndentedString(shippingAndHandlingRefunded)).append("\n");
    sb.append("    quantityRefunded: ").append(toIndentedString(quantityRefunded)).append("\n");
    sb.append("    refundStatus: ").append(toIndentedString(refundStatus)).append("\n");
    sb.append("    quantityReplaced: ").append(toIndentedString(quantityReplaced)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    productLossAmount: ").append(toIndentedString(productLossAmount)).append("\n");
    sb.append("    productLossTaxAmount: ").append(toIndentedString(productLossTaxAmount)).append("\n");
    sb.append("    shippingLossAmount: ").append(toIndentedString(shippingLossAmount)).append("\n");
    sb.append("    shippingLossTaxAmount: ").append(toIndentedString(shippingLossTaxAmount)).append("\n");
    sb.append("    bundledProducts: ").append(toIndentedString(bundledProducts)).append("\n");
    sb.append("    totalWithoutWeightedShippingAndHandling: ").append(toIndentedString(totalWithoutWeightedShippingAndHandling)).append("\n");
    sb.append("    totalWithWeightedShippingAndHandling: ").append(toIndentedString(totalWithWeightedShippingAndHandling)).append("\n");
    sb.append("    shipmentItemId: ").append(toIndentedString(shipmentItemId)).append("\n");
    sb.append("    shipmentNumber: ").append(toIndentedString(shipmentNumber)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    inventoryTags: ").append(toIndentedString(inventoryTags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("orderItemId");
    openapiFields.add("orderLineId");
    openapiFields.add("orderItemOptionAttributeFQN");
    openapiFields.add("product");
    openapiFields.add("reasons");
    openapiFields.add("excludeProductExtras");
    openapiFields.add("returnType");
    openapiFields.add("returnNotRequired");
    openapiFields.add("quantityReceived");
    openapiFields.add("receiveStatus");
    openapiFields.add("quantityShipped");
    openapiFields.add("replaceStatus");
    openapiFields.add("quantityRestockable");
    openapiFields.add("quantityRestocked");
    openapiFields.add("refundAmount");
    openapiFields.add("returnProcessingFeeApplied");
    openapiFields.add("shippingAndHandlingRefunded");
    openapiFields.add("quantityRefunded");
    openapiFields.add("refundStatus");
    openapiFields.add("quantityReplaced");
    openapiFields.add("notes");
    openapiFields.add("productLossAmount");
    openapiFields.add("productLossTaxAmount");
    openapiFields.add("shippingLossAmount");
    openapiFields.add("shippingLossTaxAmount");
    openapiFields.add("bundledProducts");
    openapiFields.add("totalWithoutWeightedShippingAndHandling");
    openapiFields.add("totalWithWeightedShippingAndHandling");
    openapiFields.add("shipmentItemId");
    openapiFields.add("shipmentNumber");
    openapiFields.add("data");
    openapiFields.add("inventoryTags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReturnItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ReturnItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReturnItem is not found in the empty JSON string", ReturnItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ReturnItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReturnItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("orderItemId") != null && !jsonObj.get("orderItemId").isJsonNull()) && !jsonObj.get("orderItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItemId").toString()));
      }
      if ((jsonObj.get("orderItemOptionAttributeFQN") != null && !jsonObj.get("orderItemOptionAttributeFQN").isJsonNull()) && !jsonObj.get("orderItemOptionAttributeFQN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItemOptionAttributeFQN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItemOptionAttributeFQN").toString()));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        CommerceRuntimeProduct.validateJsonObject(jsonObj.getAsJsonObject("product"));
      }
      if (jsonObj.get("reasons") != null && !jsonObj.get("reasons").isJsonNull()) {
        JsonArray jsonArrayreasons = jsonObj.getAsJsonArray("reasons");
        if (jsonArrayreasons != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reasons").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reasons` to be an array in the JSON string but got `%s`", jsonObj.get("reasons").toString()));
          }

          // validate the optional field `reasons` (array)
          for (int i = 0; i < jsonArrayreasons.size(); i++) {
            ReturnReason.validateJsonObject(jsonArrayreasons.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("returnType") != null && !jsonObj.get("returnType").isJsonNull()) && !jsonObj.get("returnType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnType").toString()));
      }
      if ((jsonObj.get("receiveStatus") != null && !jsonObj.get("receiveStatus").isJsonNull()) && !jsonObj.get("receiveStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiveStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiveStatus").toString()));
      }
      if ((jsonObj.get("replaceStatus") != null && !jsonObj.get("replaceStatus").isJsonNull()) && !jsonObj.get("replaceStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replaceStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replaceStatus").toString()));
      }
      if ((jsonObj.get("refundStatus") != null && !jsonObj.get("refundStatus").isJsonNull()) && !jsonObj.get("refundStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refundStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refundStatus").toString()));
      }
      if (jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) {
        JsonArray jsonArraynotes = jsonObj.getAsJsonArray("notes");
        if (jsonArraynotes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("notes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `notes` to be an array in the JSON string but got `%s`", jsonObj.get("notes").toString()));
          }

          // validate the optional field `notes` (array)
          for (int i = 0; i < jsonArraynotes.size(); i++) {
            OrderNote.validateJsonObject(jsonArraynotes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("bundledProducts") != null && !jsonObj.get("bundledProducts").isJsonNull()) {
        JsonArray jsonArraybundledProducts = jsonObj.getAsJsonArray("bundledProducts");
        if (jsonArraybundledProducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bundledProducts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bundledProducts` to be an array in the JSON string but got `%s`", jsonObj.get("bundledProducts").toString()));
          }

          // validate the optional field `bundledProducts` (array)
          for (int i = 0; i < jsonArraybundledProducts.size(); i++) {
            ReturnBundle.validateJsonObject(jsonArraybundledProducts.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("inventoryTags") != null && !jsonObj.get("inventoryTags").isJsonNull()) {
        JsonArray jsonArrayinventoryTags = jsonObj.getAsJsonArray("inventoryTags");
        if (jsonArrayinventoryTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inventoryTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventoryTags` to be an array in the JSON string but got `%s`", jsonObj.get("inventoryTags").toString()));
          }

          // validate the optional field `inventoryTags` (array)
          for (int i = 0; i < jsonArrayinventoryTags.size(); i++) {
            InventoryTags.validateJsonObject(jsonArrayinventoryTags.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReturnItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReturnItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReturnItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReturnItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ReturnItem>() {
           @Override
           public void write(JsonWriter out, ReturnItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReturnItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReturnItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReturnItem
  * @throws IOException if the JSON string is invalid with respect to ReturnItem
  */
  public static ReturnItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReturnItem.class);
  }

 /**
  * Convert an instance of ReturnItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

