/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.commerce.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeCanceledItem;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeChangeMessage;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeContact;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeCustomer;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeDestination;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeFulfillmentShopperNotes;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimePackage;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeShipmentNote;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeShipmentStatusReason;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeWorkflowState;
import com.kibocommerce.sdk.commerce.models.FulfillmentAlternateContact;
import com.kibocommerce.sdk.commerce.models.ShipmentItem;
import com.kibocommerce.sdk.commerce.models.SubstitutedItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * CommerceRuntimeShipment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimeShipment implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_EXTERNAL_SHIPMENT_ID = "externalShipmentId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_SHIPMENT_ID)
  private String externalShipmentId;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Integer number;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private Integer orderNumber;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_ID = "customerAccountId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_ID)
  private Integer customerAccountId;

  public static final String SERIALIZED_NAME_CUSTOMER_TAX_ID = "customerTaxId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TAX_ID)
  private String customerTaxId;

  public static final String SERIALIZED_NAME_SHIPMENT_TYPE = "shipmentType";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_TYPE)
  private String shipmentType;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_CODE = "shippingMethodCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_CODE)
  private String shippingMethodCode;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_NAME = "shippingMethodName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_NAME)
  private String shippingMethodName;

  public static final String SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE = "fulfillmentLocationCode";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE)
  private String fulfillmentLocationCode;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private CommerceRuntimeContact origin;

  public static final String SERIALIZED_NAME_DESTINATION = "destination";
  @SerializedName(SERIALIZED_NAME_DESTINATION)
  private CommerceRuntimeDestination destination;

  public static final String SERIALIZED_NAME_SHIPMENT_STATUS = "shipmentStatus";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_STATUS)
  private String shipmentStatus;

  public static final String SERIALIZED_NAME_SHIPMENT_STATUS_REASON = "shipmentStatusReason";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_STATUS_REASON)
  private CommerceRuntimeShipmentStatusReason shipmentStatusReason;

  public static final String SERIALIZED_NAME_TRANSFER_SHIPMENT_NUMBERS = "transferShipmentNumbers";
  @SerializedName(SERIALIZED_NAME_TRANSFER_SHIPMENT_NUMBERS)
  private List<Integer> transferShipmentNumbers = null;

  public static final String SERIALIZED_NAME_IS_TRANSFER = "isTransfer";
  @SerializedName(SERIALIZED_NAME_IS_TRANSFER)
  private Boolean isTransfer;

  public static final String SERIALIZED_NAME_ORIGINAL_SHIPMENT_NUMBER = "originalShipmentNumber";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_SHIPMENT_NUMBER)
  private Integer originalShipmentNumber;

  public static final String SERIALIZED_NAME_PARENT_CHECKOUT_NUMBER = "parentCheckoutNumber";
  @SerializedName(SERIALIZED_NAME_PARENT_CHECKOUT_NUMBER)
  private Integer parentCheckoutNumber;

  public static final String SERIALIZED_NAME_PARENT_SHIPMENT_NUMBER = "parentShipmentNumber";
  @SerializedName(SERIALIZED_NAME_PARENT_SHIPMENT_NUMBER)
  private Integer parentShipmentNumber;

  public static final String SERIALIZED_NAME_FULFILLMENT_STATUS = "fulfillmentStatus";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_STATUS)
  private String fulfillmentStatus;

  public static final String SERIALIZED_NAME_WORKFLOW_PROCESS_ID = "workflowProcessId";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_PROCESS_ID)
  private String workflowProcessId;

  public static final String SERIALIZED_NAME_WORKFLOW_PROCESS_CONTAINER_ID = "workflowProcessContainerId";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_PROCESS_CONTAINER_ID)
  private String workflowProcessContainerId;

  public static final String SERIALIZED_NAME_WORKFLOW_STATE = "workflowState";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_STATE)
  private CommerceRuntimeWorkflowState workflowState;

  public static final String SERIALIZED_NAME_BACKORDER_CREATED_DATE = "backorderCreatedDate";
  @SerializedName(SERIALIZED_NAME_BACKORDER_CREATED_DATE)
  private Integer backorderCreatedDate;

  public static final String SERIALIZED_NAME_FULFILLMENT_DATE = "fulfillmentDate";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_DATE)
  private OffsetDateTime fulfillmentDate;

  public static final String SERIALIZED_NAME_FUTURE_DATE = "futureDate";
  @SerializedName(SERIALIZED_NAME_FUTURE_DATE)
  private OffsetDateTime futureDate;

  public static final String SERIALIZED_NAME_ORDER_SUBMIT_DATE = "orderSubmitDate";
  @SerializedName(SERIALIZED_NAME_ORDER_SUBMIT_DATE)
  private OffsetDateTime orderSubmitDate;

  public static final String SERIALIZED_NAME_PICK_STATUS = "pickStatus";
  @SerializedName(SERIALIZED_NAME_PICK_STATUS)
  private String pickStatus;

  public static final String SERIALIZED_NAME_PICK_TYPE = "pickType";
  @SerializedName(SERIALIZED_NAME_PICK_TYPE)
  private String pickType;

  public static final String SERIALIZED_NAME_CHANGE_MESSAGES = "changeMessages";
  @SerializedName(SERIALIZED_NAME_CHANGE_MESSAGES)
  private List<CommerceRuntimeChangeMessage> changeMessages = null;

  public static final String SERIALIZED_NAME_PACKAGES = "packages";
  @SerializedName(SERIALIZED_NAME_PACKAGES)
  private List<CommerceRuntimePackage> packages = null;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<ShipmentItem> items = null;

  public static final String SERIALIZED_NAME_CANCELED_ITEMS = "canceledItems";
  @SerializedName(SERIALIZED_NAME_CANCELED_ITEMS)
  private List<CommerceRuntimeCanceledItem> canceledItems = null;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data;

  public static final String SERIALIZED_NAME_TAX_DATA = "taxData";
  @SerializedName(SERIALIZED_NAME_TAX_DATA)
  private Object taxData;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_SHIPMENT_ADJUSTMENT = "shipmentAdjustment";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_ADJUSTMENT)
  private Double shipmentAdjustment;

  public static final String SERIALIZED_NAME_LINE_ITEM_SUBTOTAL = "lineItemSubtotal";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_SUBTOTAL)
  private Double lineItemSubtotal;

  public static final String SERIALIZED_NAME_LINE_ITEM_TAX_ADJUSTMENT = "lineItemTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_TAX_ADJUSTMENT)
  private Double lineItemTaxAdjustment;

  public static final String SERIALIZED_NAME_LINE_ITEM_TAX_TOTAL = "lineItemTaxTotal";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_TAX_TOTAL)
  private Double lineItemTaxTotal;

  public static final String SERIALIZED_NAME_LINE_ITEM_TOTAL = "lineItemTotal";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_TOTAL)
  private Double lineItemTotal;

  public static final String SERIALIZED_NAME_SHIPPING_ADJUSTMENT = "shippingAdjustment";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADJUSTMENT)
  private Double shippingAdjustment;

  public static final String SERIALIZED_NAME_SHIPPING_SUBTOTAL = "shippingSubtotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_SUBTOTAL)
  private Double shippingSubtotal;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_ADJUSTMENT = "shippingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_ADJUSTMENT)
  private Double shippingTaxAdjustment;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_TOTAL = "shippingTaxTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_TOTAL)
  private Double shippingTaxTotal;

  public static final String SERIALIZED_NAME_SHIPPING_TOTAL = "shippingTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TOTAL)
  private Double shippingTotal;

  public static final String SERIALIZED_NAME_HANDLING_ADJUSTMENT = "handlingAdjustment";
  @SerializedName(SERIALIZED_NAME_HANDLING_ADJUSTMENT)
  private Double handlingAdjustment;

  public static final String SERIALIZED_NAME_HANDLING_SUBTOTAL = "handlingSubtotal";
  @SerializedName(SERIALIZED_NAME_HANDLING_SUBTOTAL)
  private Double handlingSubtotal;

  public static final String SERIALIZED_NAME_HANDLING_TAX_ADJUSTMENT = "handlingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_HANDLING_TAX_ADJUSTMENT)
  private Double handlingTaxAdjustment;

  public static final String SERIALIZED_NAME_HANDLING_TAX_TOTAL = "handlingTaxTotal";
  @SerializedName(SERIALIZED_NAME_HANDLING_TAX_TOTAL)
  private Double handlingTaxTotal;

  public static final String SERIALIZED_NAME_HANDLING_TOTAL = "handlingTotal";
  @SerializedName(SERIALIZED_NAME_HANDLING_TOTAL)
  private Double handlingTotal;

  public static final String SERIALIZED_NAME_DUTY_ADJUSTMENT = "dutyAdjustment";
  @SerializedName(SERIALIZED_NAME_DUTY_ADJUSTMENT)
  private Double dutyAdjustment;

  public static final String SERIALIZED_NAME_DUTY_TOTAL = "dutyTotal";
  @SerializedName(SERIALIZED_NAME_DUTY_TOTAL)
  private Double dutyTotal;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public static final String SERIALIZED_NAME_COST = "cost";
  @SerializedName(SERIALIZED_NAME_COST)
  private Double cost;

  public static final String SERIALIZED_NAME_EXTERNAL_ORDER_ID = "externalOrderId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ORDER_ID)
  private String externalOrderId;

  public static final String SERIALIZED_NAME_IS_EXPRESS = "isExpress";
  @SerializedName(SERIALIZED_NAME_IS_EXPRESS)
  private Boolean isExpress;

  public static final String SERIALIZED_NAME_READY_TO_CAPTURE = "readyToCapture";
  @SerializedName(SERIALIZED_NAME_READY_TO_CAPTURE)
  private Boolean readyToCapture;

  public static final String SERIALIZED_NAME_PICKUP_INFO = "pickupInfo";
  @SerializedName(SERIALIZED_NAME_PICKUP_INFO)
  private Object pickupInfo;

  public static final String SERIALIZED_NAME_SHOPPER_NOTES = "shopperNotes";
  @SerializedName(SERIALIZED_NAME_SHOPPER_NOTES)
  private CommerceRuntimeFulfillmentShopperNotes shopperNotes;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private CommerceRuntimeCustomer customer;

  public static final String SERIALIZED_NAME_SHIPMENT_NOTES = "shipmentNotes";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_NOTES)
  private List<CommerceRuntimeShipmentNote> shipmentNotes = null;

  public static final String SERIALIZED_NAME_ALTERNATE_CONTACT = "alternateContact";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_CONTACT)
  private FulfillmentAlternateContact alternateContact;

  public static final String SERIALIZED_NAME_SUBSTITUTED_ITEMS = "substitutedItems";
  @SerializedName(SERIALIZED_NAME_SUBSTITUTED_ITEMS)
  private List<SubstitutedItem> substitutedItems = null;

  public CommerceRuntimeShipment() {
  }

  
  public CommerceRuntimeShipment(
     String customerTaxId
  ) {
    this();
    this.customerTaxId = customerTaxId;
  }

  public CommerceRuntimeShipment id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID of the shipment
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the shipment")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CommerceRuntimeShipment externalShipmentId(String externalShipmentId) {
    
    this.externalShipmentId = externalShipmentId;
    return this;
  }

   /**
   * Get externalShipmentId
   * @return externalShipmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalShipmentId() {
    return externalShipmentId;
  }


  public void setExternalShipmentId(String externalShipmentId) {
    this.externalShipmentId = externalShipmentId;
  }


  public CommerceRuntimeShipment number(Integer number) {
    
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumber() {
    return number;
  }


  public void setNumber(Integer number) {
    this.number = number;
  }


  public CommerceRuntimeShipment orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public CommerceRuntimeShipment orderNumber(Integer orderNumber) {
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Get orderNumber
   * @return orderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(Integer orderNumber) {
    this.orderNumber = orderNumber;
  }


  public CommerceRuntimeShipment email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public CommerceRuntimeShipment currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public CommerceRuntimeShipment customerAccountId(Integer customerAccountId) {
    
    this.customerAccountId = customerAccountId;
    return this;
  }

   /**
   * Get customerAccountId
   * @return customerAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCustomerAccountId() {
    return customerAccountId;
  }


  public void setCustomerAccountId(Integer customerAccountId) {
    this.customerAccountId = customerAccountId;
  }


   /**
   * Get customerTaxId
   * @return customerTaxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomerTaxId() {
    return customerTaxId;
  }




  public CommerceRuntimeShipment shipmentType(String shipmentType) {
    
    this.shipmentType = shipmentType;
    return this;
  }

   /**
   * Get shipmentType
   * @return shipmentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShipmentType() {
    return shipmentType;
  }


  public void setShipmentType(String shipmentType) {
    this.shipmentType = shipmentType;
  }


  public CommerceRuntimeShipment shippingMethodCode(String shippingMethodCode) {
    
    this.shippingMethodCode = shippingMethodCode;
    return this;
  }

   /**
   * Get shippingMethodCode
   * @return shippingMethodCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippingMethodCode() {
    return shippingMethodCode;
  }


  public void setShippingMethodCode(String shippingMethodCode) {
    this.shippingMethodCode = shippingMethodCode;
  }


  public CommerceRuntimeShipment shippingMethodName(String shippingMethodName) {
    
    this.shippingMethodName = shippingMethodName;
    return this;
  }

   /**
   * Get shippingMethodName
   * @return shippingMethodName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippingMethodName() {
    return shippingMethodName;
  }


  public void setShippingMethodName(String shippingMethodName) {
    this.shippingMethodName = shippingMethodName;
  }


  public CommerceRuntimeShipment fulfillmentLocationCode(String fulfillmentLocationCode) {
    
    this.fulfillmentLocationCode = fulfillmentLocationCode;
    return this;
  }

   /**
   * Get fulfillmentLocationCode
   * @return fulfillmentLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFulfillmentLocationCode() {
    return fulfillmentLocationCode;
  }


  public void setFulfillmentLocationCode(String fulfillmentLocationCode) {
    this.fulfillmentLocationCode = fulfillmentLocationCode;
  }


  public CommerceRuntimeShipment origin(CommerceRuntimeContact origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeContact getOrigin() {
    return origin;
  }


  public void setOrigin(CommerceRuntimeContact origin) {
    this.origin = origin;
  }


  public CommerceRuntimeShipment destination(CommerceRuntimeDestination destination) {
    
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeDestination getDestination() {
    return destination;
  }


  public void setDestination(CommerceRuntimeDestination destination) {
    this.destination = destination;
  }


  public CommerceRuntimeShipment shipmentStatus(String shipmentStatus) {
    
    this.shipmentStatus = shipmentStatus;
    return this;
  }

   /**
   * Get shipmentStatus
   * @return shipmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShipmentStatus() {
    return shipmentStatus;
  }


  public void setShipmentStatus(String shipmentStatus) {
    this.shipmentStatus = shipmentStatus;
  }


  public CommerceRuntimeShipment shipmentStatusReason(CommerceRuntimeShipmentStatusReason shipmentStatusReason) {
    
    this.shipmentStatusReason = shipmentStatusReason;
    return this;
  }

   /**
   * Get shipmentStatusReason
   * @return shipmentStatusReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeShipmentStatusReason getShipmentStatusReason() {
    return shipmentStatusReason;
  }


  public void setShipmentStatusReason(CommerceRuntimeShipmentStatusReason shipmentStatusReason) {
    this.shipmentStatusReason = shipmentStatusReason;
  }


  public CommerceRuntimeShipment transferShipmentNumbers(List<Integer> transferShipmentNumbers) {
    
    this.transferShipmentNumbers = transferShipmentNumbers;
    return this;
  }

  public CommerceRuntimeShipment addTransferShipmentNumbersItem(Integer transferShipmentNumbersItem) {
    if (this.transferShipmentNumbers == null) {
      this.transferShipmentNumbers = new ArrayList<>();
    }
    this.transferShipmentNumbers.add(transferShipmentNumbersItem);
    return this;
  }

   /**
   * Get transferShipmentNumbers
   * @return transferShipmentNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getTransferShipmentNumbers() {
    return transferShipmentNumbers;
  }


  public void setTransferShipmentNumbers(List<Integer> transferShipmentNumbers) {
    this.transferShipmentNumbers = transferShipmentNumbers;
  }


  public CommerceRuntimeShipment isTransfer(Boolean isTransfer) {
    
    this.isTransfer = isTransfer;
    return this;
  }

   /**
   * Get isTransfer
   * @return isTransfer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsTransfer() {
    return isTransfer;
  }


  public void setIsTransfer(Boolean isTransfer) {
    this.isTransfer = isTransfer;
  }


  public CommerceRuntimeShipment originalShipmentNumber(Integer originalShipmentNumber) {
    
    this.originalShipmentNumber = originalShipmentNumber;
    return this;
  }

   /**
   * Get originalShipmentNumber
   * @return originalShipmentNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOriginalShipmentNumber() {
    return originalShipmentNumber;
  }


  public void setOriginalShipmentNumber(Integer originalShipmentNumber) {
    this.originalShipmentNumber = originalShipmentNumber;
  }


  public CommerceRuntimeShipment parentCheckoutNumber(Integer parentCheckoutNumber) {
    
    this.parentCheckoutNumber = parentCheckoutNumber;
    return this;
  }

   /**
   * Get parentCheckoutNumber
   * @return parentCheckoutNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getParentCheckoutNumber() {
    return parentCheckoutNumber;
  }


  public void setParentCheckoutNumber(Integer parentCheckoutNumber) {
    this.parentCheckoutNumber = parentCheckoutNumber;
  }


  public CommerceRuntimeShipment parentShipmentNumber(Integer parentShipmentNumber) {
    
    this.parentShipmentNumber = parentShipmentNumber;
    return this;
  }

   /**
   * Get parentShipmentNumber
   * @return parentShipmentNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getParentShipmentNumber() {
    return parentShipmentNumber;
  }


  public void setParentShipmentNumber(Integer parentShipmentNumber) {
    this.parentShipmentNumber = parentShipmentNumber;
  }


  public CommerceRuntimeShipment fulfillmentStatus(String fulfillmentStatus) {
    
    this.fulfillmentStatus = fulfillmentStatus;
    return this;
  }

   /**
   * Get fulfillmentStatus
   * @return fulfillmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFulfillmentStatus() {
    return fulfillmentStatus;
  }


  public void setFulfillmentStatus(String fulfillmentStatus) {
    this.fulfillmentStatus = fulfillmentStatus;
  }


  public CommerceRuntimeShipment workflowProcessId(String workflowProcessId) {
    
    this.workflowProcessId = workflowProcessId;
    return this;
  }

   /**
   * Get workflowProcessId
   * @return workflowProcessId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkflowProcessId() {
    return workflowProcessId;
  }


  public void setWorkflowProcessId(String workflowProcessId) {
    this.workflowProcessId = workflowProcessId;
  }


  public CommerceRuntimeShipment workflowProcessContainerId(String workflowProcessContainerId) {
    
    this.workflowProcessContainerId = workflowProcessContainerId;
    return this;
  }

   /**
   * Get workflowProcessContainerId
   * @return workflowProcessContainerId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkflowProcessContainerId() {
    return workflowProcessContainerId;
  }


  public void setWorkflowProcessContainerId(String workflowProcessContainerId) {
    this.workflowProcessContainerId = workflowProcessContainerId;
  }


  public CommerceRuntimeShipment workflowState(CommerceRuntimeWorkflowState workflowState) {
    
    this.workflowState = workflowState;
    return this;
  }

   /**
   * Get workflowState
   * @return workflowState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeWorkflowState getWorkflowState() {
    return workflowState;
  }


  public void setWorkflowState(CommerceRuntimeWorkflowState workflowState) {
    this.workflowState = workflowState;
  }


  public CommerceRuntimeShipment backorderCreatedDate(Integer backorderCreatedDate) {
    
    this.backorderCreatedDate = backorderCreatedDate;
    return this;
  }

   /**
   * Get backorderCreatedDate
   * @return backorderCreatedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBackorderCreatedDate() {
    return backorderCreatedDate;
  }


  public void setBackorderCreatedDate(Integer backorderCreatedDate) {
    this.backorderCreatedDate = backorderCreatedDate;
  }


  public CommerceRuntimeShipment fulfillmentDate(OffsetDateTime fulfillmentDate) {
    
    this.fulfillmentDate = fulfillmentDate;
    return this;
  }

   /**
   * Get fulfillmentDate
   * @return fulfillmentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getFulfillmentDate() {
    return fulfillmentDate;
  }


  public void setFulfillmentDate(OffsetDateTime fulfillmentDate) {
    this.fulfillmentDate = fulfillmentDate;
  }


  public CommerceRuntimeShipment futureDate(OffsetDateTime futureDate) {
    
    this.futureDate = futureDate;
    return this;
  }

   /**
   * Get futureDate
   * @return futureDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getFutureDate() {
    return futureDate;
  }


  public void setFutureDate(OffsetDateTime futureDate) {
    this.futureDate = futureDate;
  }


  public CommerceRuntimeShipment orderSubmitDate(OffsetDateTime orderSubmitDate) {
    
    this.orderSubmitDate = orderSubmitDate;
    return this;
  }

   /**
   * Get orderSubmitDate
   * @return orderSubmitDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getOrderSubmitDate() {
    return orderSubmitDate;
  }


  public void setOrderSubmitDate(OffsetDateTime orderSubmitDate) {
    this.orderSubmitDate = orderSubmitDate;
  }


  public CommerceRuntimeShipment pickStatus(String pickStatus) {
    
    this.pickStatus = pickStatus;
    return this;
  }

   /**
   * Get pickStatus
   * @return pickStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPickStatus() {
    return pickStatus;
  }


  public void setPickStatus(String pickStatus) {
    this.pickStatus = pickStatus;
  }


  public CommerceRuntimeShipment pickType(String pickType) {
    
    this.pickType = pickType;
    return this;
  }

   /**
   * Get pickType
   * @return pickType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPickType() {
    return pickType;
  }


  public void setPickType(String pickType) {
    this.pickType = pickType;
  }


  public CommerceRuntimeShipment changeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    
    this.changeMessages = changeMessages;
    return this;
  }

  public CommerceRuntimeShipment addChangeMessagesItem(CommerceRuntimeChangeMessage changeMessagesItem) {
    if (this.changeMessages == null) {
      this.changeMessages = new ArrayList<>();
    }
    this.changeMessages.add(changeMessagesItem);
    return this;
  }

   /**
   * Get changeMessages
   * @return changeMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CommerceRuntimeChangeMessage> getChangeMessages() {
    return changeMessages;
  }


  public void setChangeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    this.changeMessages = changeMessages;
  }


  public CommerceRuntimeShipment packages(List<CommerceRuntimePackage> packages) {
    
    this.packages = packages;
    return this;
  }

  public CommerceRuntimeShipment addPackagesItem(CommerceRuntimePackage packagesItem) {
    if (this.packages == null) {
      this.packages = new ArrayList<>();
    }
    this.packages.add(packagesItem);
    return this;
  }

   /**
   * Get packages
   * @return packages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CommerceRuntimePackage> getPackages() {
    return packages;
  }


  public void setPackages(List<CommerceRuntimePackage> packages) {
    this.packages = packages;
  }


  public CommerceRuntimeShipment items(List<ShipmentItem> items) {
    
    this.items = items;
    return this;
  }

  public CommerceRuntimeShipment addItemsItem(ShipmentItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ShipmentItem> getItems() {
    return items;
  }


  public void setItems(List<ShipmentItem> items) {
    this.items = items;
  }


  public CommerceRuntimeShipment canceledItems(List<CommerceRuntimeCanceledItem> canceledItems) {
    
    this.canceledItems = canceledItems;
    return this;
  }

  public CommerceRuntimeShipment addCanceledItemsItem(CommerceRuntimeCanceledItem canceledItemsItem) {
    if (this.canceledItems == null) {
      this.canceledItems = new ArrayList<>();
    }
    this.canceledItems.add(canceledItemsItem);
    return this;
  }

   /**
   * Get canceledItems
   * @return canceledItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CommerceRuntimeCanceledItem> getCanceledItems() {
    return canceledItems;
  }


  public void setCanceledItems(List<CommerceRuntimeCanceledItem> canceledItems) {
    this.canceledItems = canceledItems;
  }


  public CommerceRuntimeShipment data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getData() {
    return data;
  }


  public void setData(Object data) {
    this.data = data;
  }


  public CommerceRuntimeShipment taxData(Object taxData) {
    
    this.taxData = taxData;
    return this;
  }

   /**
   * Get taxData
   * @return taxData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTaxData() {
    return taxData;
  }


  public void setTaxData(Object taxData) {
    this.taxData = taxData;
  }


  public CommerceRuntimeShipment auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public CommerceRuntimeShipment shipmentAdjustment(Double shipmentAdjustment) {
    
    this.shipmentAdjustment = shipmentAdjustment;
    return this;
  }

   /**
   * Get shipmentAdjustment
   * @return shipmentAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShipmentAdjustment() {
    return shipmentAdjustment;
  }


  public void setShipmentAdjustment(Double shipmentAdjustment) {
    this.shipmentAdjustment = shipmentAdjustment;
  }


  public CommerceRuntimeShipment lineItemSubtotal(Double lineItemSubtotal) {
    
    this.lineItemSubtotal = lineItemSubtotal;
    return this;
  }

   /**
   * Get lineItemSubtotal
   * @return lineItemSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemSubtotal() {
    return lineItemSubtotal;
  }


  public void setLineItemSubtotal(Double lineItemSubtotal) {
    this.lineItemSubtotal = lineItemSubtotal;
  }


  public CommerceRuntimeShipment lineItemTaxAdjustment(Double lineItemTaxAdjustment) {
    
    this.lineItemTaxAdjustment = lineItemTaxAdjustment;
    return this;
  }

   /**
   * Get lineItemTaxAdjustment
   * @return lineItemTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemTaxAdjustment() {
    return lineItemTaxAdjustment;
  }


  public void setLineItemTaxAdjustment(Double lineItemTaxAdjustment) {
    this.lineItemTaxAdjustment = lineItemTaxAdjustment;
  }


  public CommerceRuntimeShipment lineItemTaxTotal(Double lineItemTaxTotal) {
    
    this.lineItemTaxTotal = lineItemTaxTotal;
    return this;
  }

   /**
   * Get lineItemTaxTotal
   * @return lineItemTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemTaxTotal() {
    return lineItemTaxTotal;
  }


  public void setLineItemTaxTotal(Double lineItemTaxTotal) {
    this.lineItemTaxTotal = lineItemTaxTotal;
  }


  public CommerceRuntimeShipment lineItemTotal(Double lineItemTotal) {
    
    this.lineItemTotal = lineItemTotal;
    return this;
  }

   /**
   * Get lineItemTotal
   * @return lineItemTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemTotal() {
    return lineItemTotal;
  }


  public void setLineItemTotal(Double lineItemTotal) {
    this.lineItemTotal = lineItemTotal;
  }


  public CommerceRuntimeShipment shippingAdjustment(Double shippingAdjustment) {
    
    this.shippingAdjustment = shippingAdjustment;
    return this;
  }

   /**
   * Get shippingAdjustment
   * @return shippingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingAdjustment() {
    return shippingAdjustment;
  }


  public void setShippingAdjustment(Double shippingAdjustment) {
    this.shippingAdjustment = shippingAdjustment;
  }


  public CommerceRuntimeShipment shippingSubtotal(Double shippingSubtotal) {
    
    this.shippingSubtotal = shippingSubtotal;
    return this;
  }

   /**
   * Get shippingSubtotal
   * @return shippingSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingSubtotal() {
    return shippingSubtotal;
  }


  public void setShippingSubtotal(Double shippingSubtotal) {
    this.shippingSubtotal = shippingSubtotal;
  }


  public CommerceRuntimeShipment shippingTaxAdjustment(Double shippingTaxAdjustment) {
    
    this.shippingTaxAdjustment = shippingTaxAdjustment;
    return this;
  }

   /**
   * Get shippingTaxAdjustment
   * @return shippingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTaxAdjustment() {
    return shippingTaxAdjustment;
  }


  public void setShippingTaxAdjustment(Double shippingTaxAdjustment) {
    this.shippingTaxAdjustment = shippingTaxAdjustment;
  }


  public CommerceRuntimeShipment shippingTaxTotal(Double shippingTaxTotal) {
    
    this.shippingTaxTotal = shippingTaxTotal;
    return this;
  }

   /**
   * Get shippingTaxTotal
   * @return shippingTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTaxTotal() {
    return shippingTaxTotal;
  }


  public void setShippingTaxTotal(Double shippingTaxTotal) {
    this.shippingTaxTotal = shippingTaxTotal;
  }


  public CommerceRuntimeShipment shippingTotal(Double shippingTotal) {
    
    this.shippingTotal = shippingTotal;
    return this;
  }

   /**
   * Get shippingTotal
   * @return shippingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTotal() {
    return shippingTotal;
  }


  public void setShippingTotal(Double shippingTotal) {
    this.shippingTotal = shippingTotal;
  }


  public CommerceRuntimeShipment handlingAdjustment(Double handlingAdjustment) {
    
    this.handlingAdjustment = handlingAdjustment;
    return this;
  }

   /**
   * Get handlingAdjustment
   * @return handlingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingAdjustment() {
    return handlingAdjustment;
  }


  public void setHandlingAdjustment(Double handlingAdjustment) {
    this.handlingAdjustment = handlingAdjustment;
  }


  public CommerceRuntimeShipment handlingSubtotal(Double handlingSubtotal) {
    
    this.handlingSubtotal = handlingSubtotal;
    return this;
  }

   /**
   * Get handlingSubtotal
   * @return handlingSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingSubtotal() {
    return handlingSubtotal;
  }


  public void setHandlingSubtotal(Double handlingSubtotal) {
    this.handlingSubtotal = handlingSubtotal;
  }


  public CommerceRuntimeShipment handlingTaxAdjustment(Double handlingTaxAdjustment) {
    
    this.handlingTaxAdjustment = handlingTaxAdjustment;
    return this;
  }

   /**
   * Get handlingTaxAdjustment
   * @return handlingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTaxAdjustment() {
    return handlingTaxAdjustment;
  }


  public void setHandlingTaxAdjustment(Double handlingTaxAdjustment) {
    this.handlingTaxAdjustment = handlingTaxAdjustment;
  }


  public CommerceRuntimeShipment handlingTaxTotal(Double handlingTaxTotal) {
    
    this.handlingTaxTotal = handlingTaxTotal;
    return this;
  }

   /**
   * Get handlingTaxTotal
   * @return handlingTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTaxTotal() {
    return handlingTaxTotal;
  }


  public void setHandlingTaxTotal(Double handlingTaxTotal) {
    this.handlingTaxTotal = handlingTaxTotal;
  }


  public CommerceRuntimeShipment handlingTotal(Double handlingTotal) {
    
    this.handlingTotal = handlingTotal;
    return this;
  }

   /**
   * Get handlingTotal
   * @return handlingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTotal() {
    return handlingTotal;
  }


  public void setHandlingTotal(Double handlingTotal) {
    this.handlingTotal = handlingTotal;
  }


  public CommerceRuntimeShipment dutyAdjustment(Double dutyAdjustment) {
    
    this.dutyAdjustment = dutyAdjustment;
    return this;
  }

   /**
   * Get dutyAdjustment
   * @return dutyAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDutyAdjustment() {
    return dutyAdjustment;
  }


  public void setDutyAdjustment(Double dutyAdjustment) {
    this.dutyAdjustment = dutyAdjustment;
  }


  public CommerceRuntimeShipment dutyTotal(Double dutyTotal) {
    
    this.dutyTotal = dutyTotal;
    return this;
  }

   /**
   * Get dutyTotal
   * @return dutyTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDutyTotal() {
    return dutyTotal;
  }


  public void setDutyTotal(Double dutyTotal) {
    this.dutyTotal = dutyTotal;
  }


  public CommerceRuntimeShipment total(Double total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotal() {
    return total;
  }


  public void setTotal(Double total) {
    this.total = total;
  }


  public CommerceRuntimeShipment cost(Double cost) {
    
    this.cost = cost;
    return this;
  }

   /**
   * Get cost
   * @return cost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCost() {
    return cost;
  }


  public void setCost(Double cost) {
    this.cost = cost;
  }


  public CommerceRuntimeShipment externalOrderId(String externalOrderId) {
    
    this.externalOrderId = externalOrderId;
    return this;
  }

   /**
   * Get externalOrderId
   * @return externalOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalOrderId() {
    return externalOrderId;
  }


  public void setExternalOrderId(String externalOrderId) {
    this.externalOrderId = externalOrderId;
  }


  public CommerceRuntimeShipment isExpress(Boolean isExpress) {
    
    this.isExpress = isExpress;
    return this;
  }

   /**
   * Get isExpress
   * @return isExpress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsExpress() {
    return isExpress;
  }


  public void setIsExpress(Boolean isExpress) {
    this.isExpress = isExpress;
  }


  public CommerceRuntimeShipment readyToCapture(Boolean readyToCapture) {
    
    this.readyToCapture = readyToCapture;
    return this;
  }

   /**
   * Get readyToCapture
   * @return readyToCapture
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReadyToCapture() {
    return readyToCapture;
  }


  public void setReadyToCapture(Boolean readyToCapture) {
    this.readyToCapture = readyToCapture;
  }


  public CommerceRuntimeShipment pickupInfo(Object pickupInfo) {
    
    this.pickupInfo = pickupInfo;
    return this;
  }

   /**
   * Get pickupInfo
   * @return pickupInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPickupInfo() {
    return pickupInfo;
  }


  public void setPickupInfo(Object pickupInfo) {
    this.pickupInfo = pickupInfo;
  }


  public CommerceRuntimeShipment shopperNotes(CommerceRuntimeFulfillmentShopperNotes shopperNotes) {
    
    this.shopperNotes = shopperNotes;
    return this;
  }

   /**
   * Get shopperNotes
   * @return shopperNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeFulfillmentShopperNotes getShopperNotes() {
    return shopperNotes;
  }


  public void setShopperNotes(CommerceRuntimeFulfillmentShopperNotes shopperNotes) {
    this.shopperNotes = shopperNotes;
  }


  public CommerceRuntimeShipment customer(CommerceRuntimeCustomer customer) {
    
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeCustomer getCustomer() {
    return customer;
  }


  public void setCustomer(CommerceRuntimeCustomer customer) {
    this.customer = customer;
  }


  public CommerceRuntimeShipment shipmentNotes(List<CommerceRuntimeShipmentNote> shipmentNotes) {
    
    this.shipmentNotes = shipmentNotes;
    return this;
  }

  public CommerceRuntimeShipment addShipmentNotesItem(CommerceRuntimeShipmentNote shipmentNotesItem) {
    if (this.shipmentNotes == null) {
      this.shipmentNotes = new ArrayList<>();
    }
    this.shipmentNotes.add(shipmentNotesItem);
    return this;
  }

   /**
   * Get shipmentNotes
   * @return shipmentNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CommerceRuntimeShipmentNote> getShipmentNotes() {
    return shipmentNotes;
  }


  public void setShipmentNotes(List<CommerceRuntimeShipmentNote> shipmentNotes) {
    this.shipmentNotes = shipmentNotes;
  }


  public CommerceRuntimeShipment alternateContact(FulfillmentAlternateContact alternateContact) {
    
    this.alternateContact = alternateContact;
    return this;
  }

   /**
   * Get alternateContact
   * @return alternateContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentAlternateContact getAlternateContact() {
    return alternateContact;
  }


  public void setAlternateContact(FulfillmentAlternateContact alternateContact) {
    this.alternateContact = alternateContact;
  }


  public CommerceRuntimeShipment substitutedItems(List<SubstitutedItem> substitutedItems) {
    
    this.substitutedItems = substitutedItems;
    return this;
  }

  public CommerceRuntimeShipment addSubstitutedItemsItem(SubstitutedItem substitutedItemsItem) {
    if (this.substitutedItems == null) {
      this.substitutedItems = new ArrayList<>();
    }
    this.substitutedItems.add(substitutedItemsItem);
    return this;
  }

   /**
   * Get substitutedItems
   * @return substitutedItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SubstitutedItem> getSubstitutedItems() {
    return substitutedItems;
  }


  public void setSubstitutedItems(List<SubstitutedItem> substitutedItems) {
    this.substitutedItems = substitutedItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimeShipment commerceRuntimeShipment = (CommerceRuntimeShipment) o;
    return Objects.equals(this.id, commerceRuntimeShipment.id) &&
        Objects.equals(this.externalShipmentId, commerceRuntimeShipment.externalShipmentId) &&
        Objects.equals(this.number, commerceRuntimeShipment.number) &&
        Objects.equals(this.orderId, commerceRuntimeShipment.orderId) &&
        Objects.equals(this.orderNumber, commerceRuntimeShipment.orderNumber) &&
        Objects.equals(this.email, commerceRuntimeShipment.email) &&
        Objects.equals(this.currencyCode, commerceRuntimeShipment.currencyCode) &&
        Objects.equals(this.customerAccountId, commerceRuntimeShipment.customerAccountId) &&
        Objects.equals(this.customerTaxId, commerceRuntimeShipment.customerTaxId) &&
        Objects.equals(this.shipmentType, commerceRuntimeShipment.shipmentType) &&
        Objects.equals(this.shippingMethodCode, commerceRuntimeShipment.shippingMethodCode) &&
        Objects.equals(this.shippingMethodName, commerceRuntimeShipment.shippingMethodName) &&
        Objects.equals(this.fulfillmentLocationCode, commerceRuntimeShipment.fulfillmentLocationCode) &&
        Objects.equals(this.origin, commerceRuntimeShipment.origin) &&
        Objects.equals(this.destination, commerceRuntimeShipment.destination) &&
        Objects.equals(this.shipmentStatus, commerceRuntimeShipment.shipmentStatus) &&
        Objects.equals(this.shipmentStatusReason, commerceRuntimeShipment.shipmentStatusReason) &&
        Objects.equals(this.transferShipmentNumbers, commerceRuntimeShipment.transferShipmentNumbers) &&
        Objects.equals(this.isTransfer, commerceRuntimeShipment.isTransfer) &&
        Objects.equals(this.originalShipmentNumber, commerceRuntimeShipment.originalShipmentNumber) &&
        Objects.equals(this.parentCheckoutNumber, commerceRuntimeShipment.parentCheckoutNumber) &&
        Objects.equals(this.parentShipmentNumber, commerceRuntimeShipment.parentShipmentNumber) &&
        Objects.equals(this.fulfillmentStatus, commerceRuntimeShipment.fulfillmentStatus) &&
        Objects.equals(this.workflowProcessId, commerceRuntimeShipment.workflowProcessId) &&
        Objects.equals(this.workflowProcessContainerId, commerceRuntimeShipment.workflowProcessContainerId) &&
        Objects.equals(this.workflowState, commerceRuntimeShipment.workflowState) &&
        Objects.equals(this.backorderCreatedDate, commerceRuntimeShipment.backorderCreatedDate) &&
        Objects.equals(this.fulfillmentDate, commerceRuntimeShipment.fulfillmentDate) &&
        Objects.equals(this.futureDate, commerceRuntimeShipment.futureDate) &&
        Objects.equals(this.orderSubmitDate, commerceRuntimeShipment.orderSubmitDate) &&
        Objects.equals(this.pickStatus, commerceRuntimeShipment.pickStatus) &&
        Objects.equals(this.pickType, commerceRuntimeShipment.pickType) &&
        Objects.equals(this.changeMessages, commerceRuntimeShipment.changeMessages) &&
        Objects.equals(this.packages, commerceRuntimeShipment.packages) &&
        Objects.equals(this.items, commerceRuntimeShipment.items) &&
        Objects.equals(this.canceledItems, commerceRuntimeShipment.canceledItems) &&
        Objects.equals(this.data, commerceRuntimeShipment.data) &&
        Objects.equals(this.taxData, commerceRuntimeShipment.taxData) &&
        Objects.equals(this.auditInfo, commerceRuntimeShipment.auditInfo) &&
        Objects.equals(this.shipmentAdjustment, commerceRuntimeShipment.shipmentAdjustment) &&
        Objects.equals(this.lineItemSubtotal, commerceRuntimeShipment.lineItemSubtotal) &&
        Objects.equals(this.lineItemTaxAdjustment, commerceRuntimeShipment.lineItemTaxAdjustment) &&
        Objects.equals(this.lineItemTaxTotal, commerceRuntimeShipment.lineItemTaxTotal) &&
        Objects.equals(this.lineItemTotal, commerceRuntimeShipment.lineItemTotal) &&
        Objects.equals(this.shippingAdjustment, commerceRuntimeShipment.shippingAdjustment) &&
        Objects.equals(this.shippingSubtotal, commerceRuntimeShipment.shippingSubtotal) &&
        Objects.equals(this.shippingTaxAdjustment, commerceRuntimeShipment.shippingTaxAdjustment) &&
        Objects.equals(this.shippingTaxTotal, commerceRuntimeShipment.shippingTaxTotal) &&
        Objects.equals(this.shippingTotal, commerceRuntimeShipment.shippingTotal) &&
        Objects.equals(this.handlingAdjustment, commerceRuntimeShipment.handlingAdjustment) &&
        Objects.equals(this.handlingSubtotal, commerceRuntimeShipment.handlingSubtotal) &&
        Objects.equals(this.handlingTaxAdjustment, commerceRuntimeShipment.handlingTaxAdjustment) &&
        Objects.equals(this.handlingTaxTotal, commerceRuntimeShipment.handlingTaxTotal) &&
        Objects.equals(this.handlingTotal, commerceRuntimeShipment.handlingTotal) &&
        Objects.equals(this.dutyAdjustment, commerceRuntimeShipment.dutyAdjustment) &&
        Objects.equals(this.dutyTotal, commerceRuntimeShipment.dutyTotal) &&
        Objects.equals(this.total, commerceRuntimeShipment.total) &&
        Objects.equals(this.cost, commerceRuntimeShipment.cost) &&
        Objects.equals(this.externalOrderId, commerceRuntimeShipment.externalOrderId) &&
        Objects.equals(this.isExpress, commerceRuntimeShipment.isExpress) &&
        Objects.equals(this.readyToCapture, commerceRuntimeShipment.readyToCapture) &&
        Objects.equals(this.pickupInfo, commerceRuntimeShipment.pickupInfo) &&
        Objects.equals(this.shopperNotes, commerceRuntimeShipment.shopperNotes) &&
        Objects.equals(this.customer, commerceRuntimeShipment.customer) &&
        Objects.equals(this.shipmentNotes, commerceRuntimeShipment.shipmentNotes) &&
        Objects.equals(this.alternateContact, commerceRuntimeShipment.alternateContact) &&
        Objects.equals(this.substitutedItems, commerceRuntimeShipment.substitutedItems);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, externalShipmentId, number, orderId, orderNumber, email, currencyCode, customerAccountId, customerTaxId, shipmentType, shippingMethodCode, shippingMethodName, fulfillmentLocationCode, origin, destination, shipmentStatus, shipmentStatusReason, transferShipmentNumbers, isTransfer, originalShipmentNumber, parentCheckoutNumber, parentShipmentNumber, fulfillmentStatus, workflowProcessId, workflowProcessContainerId, workflowState, backorderCreatedDate, fulfillmentDate, futureDate, orderSubmitDate, pickStatus, pickType, changeMessages, packages, items, canceledItems, data, taxData, auditInfo, shipmentAdjustment, lineItemSubtotal, lineItemTaxAdjustment, lineItemTaxTotal, lineItemTotal, shippingAdjustment, shippingSubtotal, shippingTaxAdjustment, shippingTaxTotal, shippingTotal, handlingAdjustment, handlingSubtotal, handlingTaxAdjustment, handlingTaxTotal, handlingTotal, dutyAdjustment, dutyTotal, total, cost, externalOrderId, isExpress, readyToCapture, pickupInfo, shopperNotes, customer, shipmentNotes, alternateContact, substitutedItems);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimeShipment {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    externalShipmentId: ").append(toIndentedString(externalShipmentId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    customerAccountId: ").append(toIndentedString(customerAccountId)).append("\n");
    sb.append("    customerTaxId: ").append(toIndentedString(customerTaxId)).append("\n");
    sb.append("    shipmentType: ").append(toIndentedString(shipmentType)).append("\n");
    sb.append("    shippingMethodCode: ").append(toIndentedString(shippingMethodCode)).append("\n");
    sb.append("    shippingMethodName: ").append(toIndentedString(shippingMethodName)).append("\n");
    sb.append("    fulfillmentLocationCode: ").append(toIndentedString(fulfillmentLocationCode)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    shipmentStatus: ").append(toIndentedString(shipmentStatus)).append("\n");
    sb.append("    shipmentStatusReason: ").append(toIndentedString(shipmentStatusReason)).append("\n");
    sb.append("    transferShipmentNumbers: ").append(toIndentedString(transferShipmentNumbers)).append("\n");
    sb.append("    isTransfer: ").append(toIndentedString(isTransfer)).append("\n");
    sb.append("    originalShipmentNumber: ").append(toIndentedString(originalShipmentNumber)).append("\n");
    sb.append("    parentCheckoutNumber: ").append(toIndentedString(parentCheckoutNumber)).append("\n");
    sb.append("    parentShipmentNumber: ").append(toIndentedString(parentShipmentNumber)).append("\n");
    sb.append("    fulfillmentStatus: ").append(toIndentedString(fulfillmentStatus)).append("\n");
    sb.append("    workflowProcessId: ").append(toIndentedString(workflowProcessId)).append("\n");
    sb.append("    workflowProcessContainerId: ").append(toIndentedString(workflowProcessContainerId)).append("\n");
    sb.append("    workflowState: ").append(toIndentedString(workflowState)).append("\n");
    sb.append("    backorderCreatedDate: ").append(toIndentedString(backorderCreatedDate)).append("\n");
    sb.append("    fulfillmentDate: ").append(toIndentedString(fulfillmentDate)).append("\n");
    sb.append("    futureDate: ").append(toIndentedString(futureDate)).append("\n");
    sb.append("    orderSubmitDate: ").append(toIndentedString(orderSubmitDate)).append("\n");
    sb.append("    pickStatus: ").append(toIndentedString(pickStatus)).append("\n");
    sb.append("    pickType: ").append(toIndentedString(pickType)).append("\n");
    sb.append("    changeMessages: ").append(toIndentedString(changeMessages)).append("\n");
    sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    canceledItems: ").append(toIndentedString(canceledItems)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    taxData: ").append(toIndentedString(taxData)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    shipmentAdjustment: ").append(toIndentedString(shipmentAdjustment)).append("\n");
    sb.append("    lineItemSubtotal: ").append(toIndentedString(lineItemSubtotal)).append("\n");
    sb.append("    lineItemTaxAdjustment: ").append(toIndentedString(lineItemTaxAdjustment)).append("\n");
    sb.append("    lineItemTaxTotal: ").append(toIndentedString(lineItemTaxTotal)).append("\n");
    sb.append("    lineItemTotal: ").append(toIndentedString(lineItemTotal)).append("\n");
    sb.append("    shippingAdjustment: ").append(toIndentedString(shippingAdjustment)).append("\n");
    sb.append("    shippingSubtotal: ").append(toIndentedString(shippingSubtotal)).append("\n");
    sb.append("    shippingTaxAdjustment: ").append(toIndentedString(shippingTaxAdjustment)).append("\n");
    sb.append("    shippingTaxTotal: ").append(toIndentedString(shippingTaxTotal)).append("\n");
    sb.append("    shippingTotal: ").append(toIndentedString(shippingTotal)).append("\n");
    sb.append("    handlingAdjustment: ").append(toIndentedString(handlingAdjustment)).append("\n");
    sb.append("    handlingSubtotal: ").append(toIndentedString(handlingSubtotal)).append("\n");
    sb.append("    handlingTaxAdjustment: ").append(toIndentedString(handlingTaxAdjustment)).append("\n");
    sb.append("    handlingTaxTotal: ").append(toIndentedString(handlingTaxTotal)).append("\n");
    sb.append("    handlingTotal: ").append(toIndentedString(handlingTotal)).append("\n");
    sb.append("    dutyAdjustment: ").append(toIndentedString(dutyAdjustment)).append("\n");
    sb.append("    dutyTotal: ").append(toIndentedString(dutyTotal)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
    sb.append("    externalOrderId: ").append(toIndentedString(externalOrderId)).append("\n");
    sb.append("    isExpress: ").append(toIndentedString(isExpress)).append("\n");
    sb.append("    readyToCapture: ").append(toIndentedString(readyToCapture)).append("\n");
    sb.append("    pickupInfo: ").append(toIndentedString(pickupInfo)).append("\n");
    sb.append("    shopperNotes: ").append(toIndentedString(shopperNotes)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    shipmentNotes: ").append(toIndentedString(shipmentNotes)).append("\n");
    sb.append("    alternateContact: ").append(toIndentedString(alternateContact)).append("\n");
    sb.append("    substitutedItems: ").append(toIndentedString(substitutedItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("externalShipmentId");
    openapiFields.add("number");
    openapiFields.add("orderId");
    openapiFields.add("orderNumber");
    openapiFields.add("email");
    openapiFields.add("currencyCode");
    openapiFields.add("customerAccountId");
    openapiFields.add("customerTaxId");
    openapiFields.add("shipmentType");
    openapiFields.add("shippingMethodCode");
    openapiFields.add("shippingMethodName");
    openapiFields.add("fulfillmentLocationCode");
    openapiFields.add("origin");
    openapiFields.add("destination");
    openapiFields.add("shipmentStatus");
    openapiFields.add("shipmentStatusReason");
    openapiFields.add("transferShipmentNumbers");
    openapiFields.add("isTransfer");
    openapiFields.add("originalShipmentNumber");
    openapiFields.add("parentCheckoutNumber");
    openapiFields.add("parentShipmentNumber");
    openapiFields.add("fulfillmentStatus");
    openapiFields.add("workflowProcessId");
    openapiFields.add("workflowProcessContainerId");
    openapiFields.add("workflowState");
    openapiFields.add("backorderCreatedDate");
    openapiFields.add("fulfillmentDate");
    openapiFields.add("futureDate");
    openapiFields.add("orderSubmitDate");
    openapiFields.add("pickStatus");
    openapiFields.add("pickType");
    openapiFields.add("changeMessages");
    openapiFields.add("packages");
    openapiFields.add("items");
    openapiFields.add("canceledItems");
    openapiFields.add("data");
    openapiFields.add("taxData");
    openapiFields.add("auditInfo");
    openapiFields.add("shipmentAdjustment");
    openapiFields.add("lineItemSubtotal");
    openapiFields.add("lineItemTaxAdjustment");
    openapiFields.add("lineItemTaxTotal");
    openapiFields.add("lineItemTotal");
    openapiFields.add("shippingAdjustment");
    openapiFields.add("shippingSubtotal");
    openapiFields.add("shippingTaxAdjustment");
    openapiFields.add("shippingTaxTotal");
    openapiFields.add("shippingTotal");
    openapiFields.add("handlingAdjustment");
    openapiFields.add("handlingSubtotal");
    openapiFields.add("handlingTaxAdjustment");
    openapiFields.add("handlingTaxTotal");
    openapiFields.add("handlingTotal");
    openapiFields.add("dutyAdjustment");
    openapiFields.add("dutyTotal");
    openapiFields.add("total");
    openapiFields.add("cost");
    openapiFields.add("externalOrderId");
    openapiFields.add("isExpress");
    openapiFields.add("readyToCapture");
    openapiFields.add("pickupInfo");
    openapiFields.add("shopperNotes");
    openapiFields.add("customer");
    openapiFields.add("shipmentNotes");
    openapiFields.add("alternateContact");
    openapiFields.add("substitutedItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimeShipment
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimeShipment.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimeShipment is not found in the empty JSON string", CommerceRuntimeShipment.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimeShipment.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimeShipment` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("externalShipmentId") != null && !jsonObj.get("externalShipmentId").isJsonNull()) && !jsonObj.get("externalShipmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalShipmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalShipmentId").toString()));
      }
      if ((jsonObj.get("orderId") != null && !jsonObj.get("orderId").isJsonNull()) && !jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("customerTaxId") != null && !jsonObj.get("customerTaxId").isJsonNull()) && !jsonObj.get("customerTaxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerTaxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerTaxId").toString()));
      }
      if ((jsonObj.get("shipmentType") != null && !jsonObj.get("shipmentType").isJsonNull()) && !jsonObj.get("shipmentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipmentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipmentType").toString()));
      }
      if ((jsonObj.get("shippingMethodCode") != null && !jsonObj.get("shippingMethodCode").isJsonNull()) && !jsonObj.get("shippingMethodCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodCode").toString()));
      }
      if ((jsonObj.get("shippingMethodName") != null && !jsonObj.get("shippingMethodName").isJsonNull()) && !jsonObj.get("shippingMethodName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodName").toString()));
      }
      if ((jsonObj.get("fulfillmentLocationCode") != null && !jsonObj.get("fulfillmentLocationCode").isJsonNull()) && !jsonObj.get("fulfillmentLocationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentLocationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentLocationCode").toString()));
      }
      // validate the optional field `origin`
      if (jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) {
        CommerceRuntimeContact.validateJsonObject(jsonObj.getAsJsonObject("origin"));
      }
      // validate the optional field `destination`
      if (jsonObj.get("destination") != null && !jsonObj.get("destination").isJsonNull()) {
        CommerceRuntimeDestination.validateJsonObject(jsonObj.getAsJsonObject("destination"));
      }
      if ((jsonObj.get("shipmentStatus") != null && !jsonObj.get("shipmentStatus").isJsonNull()) && !jsonObj.get("shipmentStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipmentStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipmentStatus").toString()));
      }
      // validate the optional field `shipmentStatusReason`
      if (jsonObj.get("shipmentStatusReason") != null && !jsonObj.get("shipmentStatusReason").isJsonNull()) {
        CommerceRuntimeShipmentStatusReason.validateJsonObject(jsonObj.getAsJsonObject("shipmentStatusReason"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("transferShipmentNumbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `transferShipmentNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("transferShipmentNumbers").toString()));
      }
      if ((jsonObj.get("fulfillmentStatus") != null && !jsonObj.get("fulfillmentStatus").isJsonNull()) && !jsonObj.get("fulfillmentStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentStatus").toString()));
      }
      if ((jsonObj.get("workflowProcessId") != null && !jsonObj.get("workflowProcessId").isJsonNull()) && !jsonObj.get("workflowProcessId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workflowProcessId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workflowProcessId").toString()));
      }
      if ((jsonObj.get("workflowProcessContainerId") != null && !jsonObj.get("workflowProcessContainerId").isJsonNull()) && !jsonObj.get("workflowProcessContainerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workflowProcessContainerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workflowProcessContainerId").toString()));
      }
      // validate the optional field `workflowState`
      if (jsonObj.get("workflowState") != null && !jsonObj.get("workflowState").isJsonNull()) {
        CommerceRuntimeWorkflowState.validateJsonObject(jsonObj.getAsJsonObject("workflowState"));
      }
      if ((jsonObj.get("pickStatus") != null && !jsonObj.get("pickStatus").isJsonNull()) && !jsonObj.get("pickStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pickStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pickStatus").toString()));
      }
      if ((jsonObj.get("pickType") != null && !jsonObj.get("pickType").isJsonNull()) && !jsonObj.get("pickType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pickType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pickType").toString()));
      }
      if (jsonObj.get("changeMessages") != null && !jsonObj.get("changeMessages").isJsonNull()) {
        JsonArray jsonArraychangeMessages = jsonObj.getAsJsonArray("changeMessages");
        if (jsonArraychangeMessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("changeMessages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `changeMessages` to be an array in the JSON string but got `%s`", jsonObj.get("changeMessages").toString()));
          }

          // validate the optional field `changeMessages` (array)
          for (int i = 0; i < jsonArraychangeMessages.size(); i++) {
            CommerceRuntimeChangeMessage.validateJsonObject(jsonArraychangeMessages.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("packages") != null && !jsonObj.get("packages").isJsonNull()) {
        JsonArray jsonArraypackages = jsonObj.getAsJsonArray("packages");
        if (jsonArraypackages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("packages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `packages` to be an array in the JSON string but got `%s`", jsonObj.get("packages").toString()));
          }

          // validate the optional field `packages` (array)
          for (int i = 0; i < jsonArraypackages.size(); i++) {
            CommerceRuntimePackage.validateJsonObject(jsonArraypackages.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            ShipmentItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("canceledItems") != null && !jsonObj.get("canceledItems").isJsonNull()) {
        JsonArray jsonArraycanceledItems = jsonObj.getAsJsonArray("canceledItems");
        if (jsonArraycanceledItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("canceledItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `canceledItems` to be an array in the JSON string but got `%s`", jsonObj.get("canceledItems").toString()));
          }

          // validate the optional field `canceledItems` (array)
          for (int i = 0; i < jsonArraycanceledItems.size(); i++) {
            CommerceRuntimeCanceledItem.validateJsonObject(jsonArraycanceledItems.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      if ((jsonObj.get("externalOrderId") != null && !jsonObj.get("externalOrderId").isJsonNull()) && !jsonObj.get("externalOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalOrderId").toString()));
      }
      // validate the optional field `shopperNotes`
      if (jsonObj.get("shopperNotes") != null && !jsonObj.get("shopperNotes").isJsonNull()) {
        CommerceRuntimeFulfillmentShopperNotes.validateJsonObject(jsonObj.getAsJsonObject("shopperNotes"));
      }
      // validate the optional field `customer`
      if (jsonObj.get("customer") != null && !jsonObj.get("customer").isJsonNull()) {
        CommerceRuntimeCustomer.validateJsonObject(jsonObj.getAsJsonObject("customer"));
      }
      if (jsonObj.get("shipmentNotes") != null && !jsonObj.get("shipmentNotes").isJsonNull()) {
        JsonArray jsonArrayshipmentNotes = jsonObj.getAsJsonArray("shipmentNotes");
        if (jsonArrayshipmentNotes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shipmentNotes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shipmentNotes` to be an array in the JSON string but got `%s`", jsonObj.get("shipmentNotes").toString()));
          }

          // validate the optional field `shipmentNotes` (array)
          for (int i = 0; i < jsonArrayshipmentNotes.size(); i++) {
            CommerceRuntimeShipmentNote.validateJsonObject(jsonArrayshipmentNotes.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `alternateContact`
      if (jsonObj.get("alternateContact") != null && !jsonObj.get("alternateContact").isJsonNull()) {
        FulfillmentAlternateContact.validateJsonObject(jsonObj.getAsJsonObject("alternateContact"));
      }
      if (jsonObj.get("substitutedItems") != null && !jsonObj.get("substitutedItems").isJsonNull()) {
        JsonArray jsonArraysubstitutedItems = jsonObj.getAsJsonArray("substitutedItems");
        if (jsonArraysubstitutedItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("substitutedItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `substitutedItems` to be an array in the JSON string but got `%s`", jsonObj.get("substitutedItems").toString()));
          }

          // validate the optional field `substitutedItems` (array)
          for (int i = 0; i < jsonArraysubstitutedItems.size(); i++) {
            SubstitutedItem.validateJsonObject(jsonArraysubstitutedItems.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimeShipment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimeShipment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimeShipment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimeShipment.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimeShipment>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimeShipment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimeShipment read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimeShipment given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimeShipment
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimeShipment
  */
  public static CommerceRuntimeShipment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimeShipment.class);
  }

 /**
  * Convert an instance of CommerceRuntimeShipment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

