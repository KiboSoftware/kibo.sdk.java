/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeAddress;
import com.kibocommerce.sdk.commerce.models.PricingAppliedLineItemProductDiscount;
import com.kibocommerce.sdk.commerce.models.PricingAppliedLineItemShippingDiscount;
import com.kibocommerce.sdk.commerce.models.PricingProductProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * PricingTaxableLineItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PricingTaxableLineItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "productCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_VARIANT_PRODUCT_CODE = "variantProductCode";
  @SerializedName(SERIALIZED_NAME_VARIANT_PRODUCT_CODE)
  private String variantProductCode;

  public static final String SERIALIZED_NAME_PRODUCT_NAME = "productName";
  @SerializedName(SERIALIZED_NAME_PRODUCT_NAME)
  private String productName;

  public static final String SERIALIZED_NAME_PRODUCT_PROPERTIES = "productProperties";
  @SerializedName(SERIALIZED_NAME_PRODUCT_PROPERTIES)
  private List<PricingProductProperty> productProperties = null;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_LINE_ITEM_PRICE = "lineItemPrice";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_PRICE)
  private Double lineItemPrice;

  public static final String SERIALIZED_NAME_DISCOUNT_TOTAL = "discountTotal";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TOTAL)
  private Double discountTotal;

  public static final String SERIALIZED_NAME_DISCOUNTED_TOTAL = "discountedTotal";
  @SerializedName(SERIALIZED_NAME_DISCOUNTED_TOTAL)
  private Double discountedTotal;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shippingAmount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private Double shippingAmount;

  public static final String SERIALIZED_NAME_HANDLING_AMOUNT = "handlingAmount";
  @SerializedName(SERIALIZED_NAME_HANDLING_AMOUNT)
  private Double handlingAmount;

  public static final String SERIALIZED_NAME_FEE_TOTAL = "feeTotal";
  @SerializedName(SERIALIZED_NAME_FEE_TOTAL)
  private Double feeTotal;

  public static final String SERIALIZED_NAME_IS_TAXABLE = "isTaxable";
  @SerializedName(SERIALIZED_NAME_IS_TAXABLE)
  private Boolean isTaxable;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data;

  public static final String SERIALIZED_NAME_PRODUCT_DISCOUNT = "productDiscount";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DISCOUNT)
  private PricingAppliedLineItemProductDiscount productDiscount;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT = "shippingDiscount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT)
  private PricingAppliedLineItemShippingDiscount shippingDiscount;

  public static final String SERIALIZED_NAME_PRODUCT_DISCOUNTS = "productDiscounts";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DISCOUNTS)
  private List<PricingAppliedLineItemProductDiscount> productDiscounts = null;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNTS = "shippingDiscounts";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNTS)
  private List<PricingAppliedLineItemShippingDiscount> shippingDiscounts = null;

  public static final String SERIALIZED_NAME_ORIGIN_ADDRESS = "originAddress";
  @SerializedName(SERIALIZED_NAME_ORIGIN_ADDRESS)
  private CommerceRuntimeAddress originAddress;

  public static final String SERIALIZED_NAME_DESTINATION_ADDRESS = "destinationAddress";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ADDRESS)
  private CommerceRuntimeAddress destinationAddress;

  public PricingTaxableLineItem() {
  }

  public PricingTaxableLineItem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public PricingTaxableLineItem productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Get productCode
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public PricingTaxableLineItem variantProductCode(String variantProductCode) {
    
    this.variantProductCode = variantProductCode;
    return this;
  }

   /**
   * Get variantProductCode
   * @return variantProductCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVariantProductCode() {
    return variantProductCode;
  }


  public void setVariantProductCode(String variantProductCode) {
    this.variantProductCode = variantProductCode;
  }


  public PricingTaxableLineItem productName(String productName) {
    
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProductName() {
    return productName;
  }


  public void setProductName(String productName) {
    this.productName = productName;
  }


  public PricingTaxableLineItem productProperties(List<PricingProductProperty> productProperties) {
    
    this.productProperties = productProperties;
    return this;
  }

  public PricingTaxableLineItem addProductPropertiesItem(PricingProductProperty productPropertiesItem) {
    if (this.productProperties == null) {
      this.productProperties = new ArrayList<>();
    }
    this.productProperties.add(productPropertiesItem);
    return this;
  }

   /**
   * Get productProperties
   * @return productProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PricingProductProperty> getProductProperties() {
    return productProperties;
  }


  public void setProductProperties(List<PricingProductProperty> productProperties) {
    this.productProperties = productProperties;
  }


  public PricingTaxableLineItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public PricingTaxableLineItem lineItemPrice(Double lineItemPrice) {
    
    this.lineItemPrice = lineItemPrice;
    return this;
  }

   /**
   * Get lineItemPrice
   * @return lineItemPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemPrice() {
    return lineItemPrice;
  }


  public void setLineItemPrice(Double lineItemPrice) {
    this.lineItemPrice = lineItemPrice;
  }


  public PricingTaxableLineItem discountTotal(Double discountTotal) {
    
    this.discountTotal = discountTotal;
    return this;
  }

   /**
   * Get discountTotal
   * @return discountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDiscountTotal() {
    return discountTotal;
  }


  public void setDiscountTotal(Double discountTotal) {
    this.discountTotal = discountTotal;
  }


  public PricingTaxableLineItem discountedTotal(Double discountedTotal) {
    
    this.discountedTotal = discountedTotal;
    return this;
  }

   /**
   * Get discountedTotal
   * @return discountedTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDiscountedTotal() {
    return discountedTotal;
  }


  public void setDiscountedTotal(Double discountedTotal) {
    this.discountedTotal = discountedTotal;
  }


  public PricingTaxableLineItem shippingAmount(Double shippingAmount) {
    
    this.shippingAmount = shippingAmount;
    return this;
  }

   /**
   * Get shippingAmount
   * @return shippingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingAmount() {
    return shippingAmount;
  }


  public void setShippingAmount(Double shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public PricingTaxableLineItem handlingAmount(Double handlingAmount) {
    
    this.handlingAmount = handlingAmount;
    return this;
  }

   /**
   * Get handlingAmount
   * @return handlingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingAmount() {
    return handlingAmount;
  }


  public void setHandlingAmount(Double handlingAmount) {
    this.handlingAmount = handlingAmount;
  }


  public PricingTaxableLineItem feeTotal(Double feeTotal) {
    
    this.feeTotal = feeTotal;
    return this;
  }

   /**
   * Get feeTotal
   * @return feeTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getFeeTotal() {
    return feeTotal;
  }


  public void setFeeTotal(Double feeTotal) {
    this.feeTotal = feeTotal;
  }


  public PricingTaxableLineItem isTaxable(Boolean isTaxable) {
    
    this.isTaxable = isTaxable;
    return this;
  }

   /**
   * Get isTaxable
   * @return isTaxable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsTaxable() {
    return isTaxable;
  }


  public void setIsTaxable(Boolean isTaxable) {
    this.isTaxable = isTaxable;
  }


  public PricingTaxableLineItem reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public PricingTaxableLineItem data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getData() {
    return data;
  }


  public void setData(Object data) {
    this.data = data;
  }


  public PricingTaxableLineItem productDiscount(PricingAppliedLineItemProductDiscount productDiscount) {
    
    this.productDiscount = productDiscount;
    return this;
  }

   /**
   * Get productDiscount
   * @return productDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PricingAppliedLineItemProductDiscount getProductDiscount() {
    return productDiscount;
  }


  public void setProductDiscount(PricingAppliedLineItemProductDiscount productDiscount) {
    this.productDiscount = productDiscount;
  }


  public PricingTaxableLineItem shippingDiscount(PricingAppliedLineItemShippingDiscount shippingDiscount) {
    
    this.shippingDiscount = shippingDiscount;
    return this;
  }

   /**
   * Get shippingDiscount
   * @return shippingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PricingAppliedLineItemShippingDiscount getShippingDiscount() {
    return shippingDiscount;
  }


  public void setShippingDiscount(PricingAppliedLineItemShippingDiscount shippingDiscount) {
    this.shippingDiscount = shippingDiscount;
  }


  public PricingTaxableLineItem productDiscounts(List<PricingAppliedLineItemProductDiscount> productDiscounts) {
    
    this.productDiscounts = productDiscounts;
    return this;
  }

  public PricingTaxableLineItem addProductDiscountsItem(PricingAppliedLineItemProductDiscount productDiscountsItem) {
    if (this.productDiscounts == null) {
      this.productDiscounts = new ArrayList<>();
    }
    this.productDiscounts.add(productDiscountsItem);
    return this;
  }

   /**
   * Get productDiscounts
   * @return productDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PricingAppliedLineItemProductDiscount> getProductDiscounts() {
    return productDiscounts;
  }


  public void setProductDiscounts(List<PricingAppliedLineItemProductDiscount> productDiscounts) {
    this.productDiscounts = productDiscounts;
  }


  public PricingTaxableLineItem shippingDiscounts(List<PricingAppliedLineItemShippingDiscount> shippingDiscounts) {
    
    this.shippingDiscounts = shippingDiscounts;
    return this;
  }

  public PricingTaxableLineItem addShippingDiscountsItem(PricingAppliedLineItemShippingDiscount shippingDiscountsItem) {
    if (this.shippingDiscounts == null) {
      this.shippingDiscounts = new ArrayList<>();
    }
    this.shippingDiscounts.add(shippingDiscountsItem);
    return this;
  }

   /**
   * Get shippingDiscounts
   * @return shippingDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PricingAppliedLineItemShippingDiscount> getShippingDiscounts() {
    return shippingDiscounts;
  }


  public void setShippingDiscounts(List<PricingAppliedLineItemShippingDiscount> shippingDiscounts) {
    this.shippingDiscounts = shippingDiscounts;
  }


  public PricingTaxableLineItem originAddress(CommerceRuntimeAddress originAddress) {
    
    this.originAddress = originAddress;
    return this;
  }

   /**
   * Get originAddress
   * @return originAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeAddress getOriginAddress() {
    return originAddress;
  }


  public void setOriginAddress(CommerceRuntimeAddress originAddress) {
    this.originAddress = originAddress;
  }


  public PricingTaxableLineItem destinationAddress(CommerceRuntimeAddress destinationAddress) {
    
    this.destinationAddress = destinationAddress;
    return this;
  }

   /**
   * Get destinationAddress
   * @return destinationAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeAddress getDestinationAddress() {
    return destinationAddress;
  }


  public void setDestinationAddress(CommerceRuntimeAddress destinationAddress) {
    this.destinationAddress = destinationAddress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PricingTaxableLineItem pricingTaxableLineItem = (PricingTaxableLineItem) o;
    return Objects.equals(this.id, pricingTaxableLineItem.id) &&
        Objects.equals(this.productCode, pricingTaxableLineItem.productCode) &&
        Objects.equals(this.variantProductCode, pricingTaxableLineItem.variantProductCode) &&
        Objects.equals(this.productName, pricingTaxableLineItem.productName) &&
        Objects.equals(this.productProperties, pricingTaxableLineItem.productProperties) &&
        Objects.equals(this.quantity, pricingTaxableLineItem.quantity) &&
        Objects.equals(this.lineItemPrice, pricingTaxableLineItem.lineItemPrice) &&
        Objects.equals(this.discountTotal, pricingTaxableLineItem.discountTotal) &&
        Objects.equals(this.discountedTotal, pricingTaxableLineItem.discountedTotal) &&
        Objects.equals(this.shippingAmount, pricingTaxableLineItem.shippingAmount) &&
        Objects.equals(this.handlingAmount, pricingTaxableLineItem.handlingAmount) &&
        Objects.equals(this.feeTotal, pricingTaxableLineItem.feeTotal) &&
        Objects.equals(this.isTaxable, pricingTaxableLineItem.isTaxable) &&
        Objects.equals(this.reason, pricingTaxableLineItem.reason) &&
        Objects.equals(this.data, pricingTaxableLineItem.data) &&
        Objects.equals(this.productDiscount, pricingTaxableLineItem.productDiscount) &&
        Objects.equals(this.shippingDiscount, pricingTaxableLineItem.shippingDiscount) &&
        Objects.equals(this.productDiscounts, pricingTaxableLineItem.productDiscounts) &&
        Objects.equals(this.shippingDiscounts, pricingTaxableLineItem.shippingDiscounts) &&
        Objects.equals(this.originAddress, pricingTaxableLineItem.originAddress) &&
        Objects.equals(this.destinationAddress, pricingTaxableLineItem.destinationAddress);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, productCode, variantProductCode, productName, productProperties, quantity, lineItemPrice, discountTotal, discountedTotal, shippingAmount, handlingAmount, feeTotal, isTaxable, reason, data, productDiscount, shippingDiscount, productDiscounts, shippingDiscounts, originAddress, destinationAddress);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PricingTaxableLineItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    variantProductCode: ").append(toIndentedString(variantProductCode)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    productProperties: ").append(toIndentedString(productProperties)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    lineItemPrice: ").append(toIndentedString(lineItemPrice)).append("\n");
    sb.append("    discountTotal: ").append(toIndentedString(discountTotal)).append("\n");
    sb.append("    discountedTotal: ").append(toIndentedString(discountedTotal)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    handlingAmount: ").append(toIndentedString(handlingAmount)).append("\n");
    sb.append("    feeTotal: ").append(toIndentedString(feeTotal)).append("\n");
    sb.append("    isTaxable: ").append(toIndentedString(isTaxable)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    productDiscount: ").append(toIndentedString(productDiscount)).append("\n");
    sb.append("    shippingDiscount: ").append(toIndentedString(shippingDiscount)).append("\n");
    sb.append("    productDiscounts: ").append(toIndentedString(productDiscounts)).append("\n");
    sb.append("    shippingDiscounts: ").append(toIndentedString(shippingDiscounts)).append("\n");
    sb.append("    originAddress: ").append(toIndentedString(originAddress)).append("\n");
    sb.append("    destinationAddress: ").append(toIndentedString(destinationAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("productCode");
    openapiFields.add("variantProductCode");
    openapiFields.add("productName");
    openapiFields.add("productProperties");
    openapiFields.add("quantity");
    openapiFields.add("lineItemPrice");
    openapiFields.add("discountTotal");
    openapiFields.add("discountedTotal");
    openapiFields.add("shippingAmount");
    openapiFields.add("handlingAmount");
    openapiFields.add("feeTotal");
    openapiFields.add("isTaxable");
    openapiFields.add("reason");
    openapiFields.add("data");
    openapiFields.add("productDiscount");
    openapiFields.add("shippingDiscount");
    openapiFields.add("productDiscounts");
    openapiFields.add("shippingDiscounts");
    openapiFields.add("originAddress");
    openapiFields.add("destinationAddress");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PricingTaxableLineItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PricingTaxableLineItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PricingTaxableLineItem is not found in the empty JSON string", PricingTaxableLineItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!PricingTaxableLineItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PricingTaxableLineItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("productCode") != null && !jsonObj.get("productCode").isJsonNull()) && !jsonObj.get("productCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productCode").toString()));
      }
      if ((jsonObj.get("variantProductCode") != null && !jsonObj.get("variantProductCode").isJsonNull()) && !jsonObj.get("variantProductCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `variantProductCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("variantProductCode").toString()));
      }
      if ((jsonObj.get("productName") != null && !jsonObj.get("productName").isJsonNull()) && !jsonObj.get("productName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productName").toString()));
      }
      if (jsonObj.get("productProperties") != null && !jsonObj.get("productProperties").isJsonNull()) {
        JsonArray jsonArrayproductProperties = jsonObj.getAsJsonArray("productProperties");
        if (jsonArrayproductProperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productProperties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productProperties` to be an array in the JSON string but got `%s`", jsonObj.get("productProperties").toString()));
          }

          // validate the optional field `productProperties` (array)
          for (int i = 0; i < jsonArrayproductProperties.size(); i++) {
            PricingProductProperty.validateJsonObject(jsonArrayproductProperties.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("reason") != null && !jsonObj.get("reason").isJsonNull()) && !jsonObj.get("reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reason").toString()));
      }
      // validate the optional field `productDiscount`
      if (jsonObj.get("productDiscount") != null && !jsonObj.get("productDiscount").isJsonNull()) {
        PricingAppliedLineItemProductDiscount.validateJsonObject(jsonObj.getAsJsonObject("productDiscount"));
      }
      // validate the optional field `shippingDiscount`
      if (jsonObj.get("shippingDiscount") != null && !jsonObj.get("shippingDiscount").isJsonNull()) {
        PricingAppliedLineItemShippingDiscount.validateJsonObject(jsonObj.getAsJsonObject("shippingDiscount"));
      }
      if (jsonObj.get("productDiscounts") != null && !jsonObj.get("productDiscounts").isJsonNull()) {
        JsonArray jsonArrayproductDiscounts = jsonObj.getAsJsonArray("productDiscounts");
        if (jsonArrayproductDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("productDiscounts").toString()));
          }

          // validate the optional field `productDiscounts` (array)
          for (int i = 0; i < jsonArrayproductDiscounts.size(); i++) {
            PricingAppliedLineItemProductDiscount.validateJsonObject(jsonArrayproductDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("shippingDiscounts") != null && !jsonObj.get("shippingDiscounts").isJsonNull()) {
        JsonArray jsonArrayshippingDiscounts = jsonObj.getAsJsonArray("shippingDiscounts");
        if (jsonArrayshippingDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shippingDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shippingDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("shippingDiscounts").toString()));
          }

          // validate the optional field `shippingDiscounts` (array)
          for (int i = 0; i < jsonArrayshippingDiscounts.size(); i++) {
            PricingAppliedLineItemShippingDiscount.validateJsonObject(jsonArrayshippingDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `originAddress`
      if (jsonObj.get("originAddress") != null && !jsonObj.get("originAddress").isJsonNull()) {
        CommerceRuntimeAddress.validateJsonObject(jsonObj.getAsJsonObject("originAddress"));
      }
      // validate the optional field `destinationAddress`
      if (jsonObj.get("destinationAddress") != null && !jsonObj.get("destinationAddress").isJsonNull()) {
        CommerceRuntimeAddress.validateJsonObject(jsonObj.getAsJsonObject("destinationAddress"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PricingTaxableLineItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PricingTaxableLineItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PricingTaxableLineItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PricingTaxableLineItem.class));

       return (TypeAdapter<T>) new TypeAdapter<PricingTaxableLineItem>() {
           @Override
           public void write(JsonWriter out, PricingTaxableLineItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PricingTaxableLineItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PricingTaxableLineItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PricingTaxableLineItem
  * @throws IOException if the JSON string is invalid with respect to PricingTaxableLineItem
  */
  public static PricingTaxableLineItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PricingTaxableLineItem.class);
  }

 /**
  * Convert an instance of PricingTaxableLineItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

