/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Refresh Item
 */
@ApiModel(description = "Refresh Item")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RefreshItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_PART_NUMBER = "partNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_BIN_I_D = "binID";
  @SerializedName(SERIALIZED_NAME_BIN_I_D)
  private Integer binID;

  public static final String SERIALIZED_NAME_L_T_D = "LTD";
  @SerializedName(SERIALIZED_NAME_L_T_D)
  private Float LTD = null;

  public static final String SERIALIZED_NAME_FLOOR = "floor";
  @SerializedName(SERIALIZED_NAME_FLOOR)
  private Integer floor;

  public static final String SERIALIZED_NAME_SAFETY_STOCK = "safetyStock";
  @SerializedName(SERIALIZED_NAME_SAFETY_STOCK)
  private Integer safetyStock;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_RETAIL_PRICE = "retailPrice";
  @SerializedName(SERIALIZED_NAME_RETAIL_PRICE)
  private BigDecimal retailPrice;

  public static final String SERIALIZED_NAME_CURRENCY_I_D = "currencyID";
  @SerializedName(SERIALIZED_NAME_CURRENCY_I_D)
  private Integer currencyID;

  public static final String SERIALIZED_NAME_INVENTORY_LOCATOR_NAME = "inventoryLocatorName";
  @SerializedName(SERIALIZED_NAME_INVENTORY_LOCATOR_NAME)
  private String inventoryLocatorName;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<String> attributes = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = null;

  public static final String SERIALIZED_NAME_DELIVERY_DATE = "deliveryDate";
  @SerializedName(SERIALIZED_NAME_DELIVERY_DATE)
  private OffsetDateTime deliveryDate = null;

  public RefreshItem() {
  }

  public RefreshItem partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Part/Product Number
   * @return partNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Part/Product Number")

  public String getPartNumber() {
    return partNumber;
  }


  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public RefreshItem upc(String upc) {
    
    this.upc = upc;
    return this;
  }

   /**
   * Universal Product Code
   * @return upc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Universal Product Code")

  public String getUpc() {
    return upc;
  }


  public void setUpc(String upc) {
    this.upc = upc;
  }


  public RefreshItem sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Stock Keeping Unit
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stock Keeping Unit")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public RefreshItem binID(Integer binID) {
    
    this.binID = binID;
    return this;
  }

   /**
   * Bin Location Identifier
   * @return binID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Bin Location Identifier")

  public Integer getBinID() {
    return binID;
  }


  public void setBinID(Integer binID) {
    this.binID = binID;
  }


  public RefreshItem LTD(Float LTD) {
    
    this.LTD = LTD;
    return this;
  }

   /**
   * Custom field used for store prioritization
   * @return LTD
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom field used for store prioritization")

  public Float getLTD() {
    return LTD;
  }


  public void setLTD(Float LTD) {
    this.LTD = LTD;
  }


  public RefreshItem floor(Integer floor) {
    
    this.floor = floor;
    return this;
  }

   /**
   * Absolute minimum quantity of this item that should be in stock at any time
   * @return floor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Absolute minimum quantity of this item that should be in stock at any time")

  public Integer getFloor() {
    return floor;
  }


  public void setFloor(Integer floor) {
    this.floor = floor;
  }


  public RefreshItem safetyStock(Integer safetyStock) {
    
    this.safetyStock = safetyStock;
    return this;
  }

   /**
   * Quantity of this item the location wants to keep in stock to ensure stock isn&#39;t completely depleted
   * @return safetyStock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Quantity of this item the location wants to keep in stock to ensure stock isn't completely depleted")

  public Integer getSafetyStock() {
    return safetyStock;
  }


  public void setSafetyStock(Integer safetyStock) {
    this.safetyStock = safetyStock;
  }


  public RefreshItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Current Quantity of Item
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current Quantity of Item")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public RefreshItem retailPrice(BigDecimal retailPrice) {
    
    this.retailPrice = retailPrice;
    return this;
  }

   /**
   * Stock Keeping Unit
   * @return retailPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Stock Keeping Unit")

  public BigDecimal getRetailPrice() {
    return retailPrice;
  }


  public void setRetailPrice(BigDecimal retailPrice) {
    this.retailPrice = retailPrice;
  }


  public RefreshItem currencyID(Integer currencyID) {
    
    this.currencyID = currencyID;
    return this;
  }

   /**
   * The price of the item
   * @return currencyID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The price of the item")

  public Integer getCurrencyID() {
    return currencyID;
  }


  public void setCurrencyID(Integer currencyID) {
    this.currencyID = currencyID;
  }


  public RefreshItem inventoryLocatorName(String inventoryLocatorName) {
    
    this.inventoryLocatorName = inventoryLocatorName;
    return this;
  }

   /**
   * The inventory locator name of the item
   * @return inventoryLocatorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The inventory locator name of the item")

  public String getInventoryLocatorName() {
    return inventoryLocatorName;
  }


  public void setInventoryLocatorName(String inventoryLocatorName) {
    this.inventoryLocatorName = inventoryLocatorName;
  }


  public RefreshItem attributes(List<String> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public RefreshItem addAttributesItem(String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * List of Item Attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of Item Attributes")

  public List<String> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<String> attributes) {
    this.attributes = attributes;
  }


  public RefreshItem tags(Map<String, String> tags) {
    
    this.tags = tags;
    return this;
  }

  public RefreshItem putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Associative Map of &lt;String, String&gt; for tagCategoryName &#x3D;&gt; tagName
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Associative Map of <String, String> for tagCategoryName => tagName")

  public Map<String, String> getTags() {
    return tags;
  }


  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  public RefreshItem deliveryDate(OffsetDateTime deliveryDate) {
    
    this.deliveryDate = deliveryDate;
    return this;
  }

   /**
   * Date at which this inventory will become available. Expected format &#39;2020-09-28T12:00:00-0500&#39;
   * @return deliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date at which this inventory will become available. Expected format '2020-09-28T12:00:00-0500'")

  public OffsetDateTime getDeliveryDate() {
    return deliveryDate;
  }


  public void setDeliveryDate(OffsetDateTime deliveryDate) {
    this.deliveryDate = deliveryDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RefreshItem refreshItem = (RefreshItem) o;
    return Objects.equals(this.partNumber, refreshItem.partNumber) &&
        Objects.equals(this.upc, refreshItem.upc) &&
        Objects.equals(this.sku, refreshItem.sku) &&
        Objects.equals(this.binID, refreshItem.binID) &&
        Objects.equals(this.LTD, refreshItem.LTD) &&
        Objects.equals(this.floor, refreshItem.floor) &&
        Objects.equals(this.safetyStock, refreshItem.safetyStock) &&
        Objects.equals(this.quantity, refreshItem.quantity) &&
        Objects.equals(this.retailPrice, refreshItem.retailPrice) &&
        Objects.equals(this.currencyID, refreshItem.currencyID) &&
        Objects.equals(this.inventoryLocatorName, refreshItem.inventoryLocatorName) &&
        Objects.equals(this.attributes, refreshItem.attributes) &&
        Objects.equals(this.tags, refreshItem.tags) &&
        Objects.equals(this.deliveryDate, refreshItem.deliveryDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(partNumber, upc, sku, binID, LTD, floor, safetyStock, quantity, retailPrice, currencyID, inventoryLocatorName, attributes, tags, deliveryDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefreshItem {\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    binID: ").append(toIndentedString(binID)).append("\n");
    sb.append("    LTD: ").append(toIndentedString(LTD)).append("\n");
    sb.append("    floor: ").append(toIndentedString(floor)).append("\n");
    sb.append("    safetyStock: ").append(toIndentedString(safetyStock)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    retailPrice: ").append(toIndentedString(retailPrice)).append("\n");
    sb.append("    currencyID: ").append(toIndentedString(currencyID)).append("\n");
    sb.append("    inventoryLocatorName: ").append(toIndentedString(inventoryLocatorName)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    deliveryDate: ").append(toIndentedString(deliveryDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("partNumber");
    openapiFields.add("upc");
    openapiFields.add("sku");
    openapiFields.add("binID");
    openapiFields.add("LTD");
    openapiFields.add("floor");
    openapiFields.add("safetyStock");
    openapiFields.add("quantity");
    openapiFields.add("retailPrice");
    openapiFields.add("currencyID");
    openapiFields.add("inventoryLocatorName");
    openapiFields.add("attributes");
    openapiFields.add("tags");
    openapiFields.add("deliveryDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to RefreshItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!RefreshItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RefreshItem is not found in the empty JSON string", RefreshItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!RefreshItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RefreshItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("partNumber") != null && !jsonObj.get("partNumber").isJsonNull()) && !jsonObj.get("partNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partNumber").toString()));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("inventoryLocatorName") != null && !jsonObj.get("inventoryLocatorName").isJsonNull()) && !jsonObj.get("inventoryLocatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventoryLocatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventoryLocatorName").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("attributes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RefreshItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RefreshItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RefreshItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RefreshItem.class));

       return (TypeAdapter<T>) new TypeAdapter<RefreshItem>() {
           @Override
           public void write(JsonWriter out, RefreshItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RefreshItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RefreshItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RefreshItem
  * @throws IOException if the JSON string is invalid with respect to RefreshItem
  */
  public static RefreshItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RefreshItem.class);
  }

 /**
  * Convert an instance of RefreshItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

