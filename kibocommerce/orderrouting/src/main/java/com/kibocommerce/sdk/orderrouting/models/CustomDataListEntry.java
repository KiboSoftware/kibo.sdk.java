/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.orderrouting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.orderrouting.models.CustomDataList;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * CustomDataListEntry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CustomDataListEntry implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CUSTOM_DATA_LIST_ENTRY_I_D = "customDataListEntryID";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATA_LIST_ENTRY_I_D)
  private Integer customDataListEntryID;

  public static final String SERIALIZED_NAME_DATA_VALID = "dataValid";
  @SerializedName(SERIALIZED_NAME_DATA_VALID)
  private Boolean dataValid;

  public static final String SERIALIZED_NAME_LIST = "list";
  @SerializedName(SERIALIZED_NAME_LIST)
  private CustomDataList _list;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_STRING_VALUE = "stringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public CustomDataListEntry() {
  }

  public CustomDataListEntry customDataListEntryID(Integer customDataListEntryID) {
    
    this.customDataListEntryID = customDataListEntryID;
    return this;
  }

   /**
   * Get customDataListEntryID
   * @return customDataListEntryID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCustomDataListEntryID() {
    return customDataListEntryID;
  }


  public void setCustomDataListEntryID(Integer customDataListEntryID) {
    this.customDataListEntryID = customDataListEntryID;
  }


  public CustomDataListEntry dataValid(Boolean dataValid) {
    
    this.dataValid = dataValid;
    return this;
  }

   /**
   * Get dataValid
   * @return dataValid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDataValid() {
    return dataValid;
  }


  public void setDataValid(Boolean dataValid) {
    this.dataValid = dataValid;
  }


  public CustomDataListEntry _list(CustomDataList _list) {
    
    this._list = _list;
    return this;
  }

   /**
   * Get _list
   * @return _list
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomDataList getList() {
    return _list;
  }


  public void setList(CustomDataList _list) {
    this._list = _list;
  }


  public CustomDataListEntry notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    this.notes = notes;
  }


  public CustomDataListEntry stringValue(String stringValue) {
    
    this.stringValue = stringValue;
    return this;
  }

   /**
   * Get stringValue
   * @return stringValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStringValue() {
    return stringValue;
  }


  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomDataListEntry customDataListEntry = (CustomDataListEntry) o;
    return Objects.equals(this.customDataListEntryID, customDataListEntry.customDataListEntryID) &&
        Objects.equals(this.dataValid, customDataListEntry.dataValid) &&
        Objects.equals(this._list, customDataListEntry._list) &&
        Objects.equals(this.notes, customDataListEntry.notes) &&
        Objects.equals(this.stringValue, customDataListEntry.stringValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customDataListEntryID, dataValid, _list, notes, stringValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomDataListEntry {\n");
    sb.append("    customDataListEntryID: ").append(toIndentedString(customDataListEntryID)).append("\n");
    sb.append("    dataValid: ").append(toIndentedString(dataValid)).append("\n");
    sb.append("    _list: ").append(toIndentedString(_list)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customDataListEntryID");
    openapiFields.add("dataValid");
    openapiFields.add("list");
    openapiFields.add("notes");
    openapiFields.add("stringValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomDataListEntry
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomDataListEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomDataListEntry is not found in the empty JSON string", CustomDataListEntry.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CustomDataListEntry.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomDataListEntry` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `list`
      if (jsonObj.get("list") != null && !jsonObj.get("list").isJsonNull()) {
        CustomDataList.validateJsonObject(jsonObj.getAsJsonObject("list"));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("stringValue") != null && !jsonObj.get("stringValue").isJsonNull()) && !jsonObj.get("stringValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stringValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomDataListEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomDataListEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomDataListEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomDataListEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomDataListEntry>() {
           @Override
           public void write(JsonWriter out, CustomDataListEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomDataListEntry read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomDataListEntry given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomDataListEntry
  * @throws IOException if the JSON string is invalid with respect to CustomDataListEntry
  */
  public static CustomDataListEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomDataListEntry.class);
  }

 /**
  * Convert an instance of CustomDataListEntry to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

