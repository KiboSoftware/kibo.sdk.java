/*
 * Kibo ShippingRuntime Service
 * OpenAPI Spec for Kibo ShippingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingstorefront.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.shippingstorefront.models.CustomAttribute;
import com.kibocommerce.sdk.shippingstorefront.models.ProductSummary;
import com.kibocommerce.sdk.shippingstorefront.models.ReservationWebAPIPackageMeasurements;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * ShippingRuntimePackage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ShippingRuntimePackage implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CONTENTS_VALUE = "contentsValue";
  @SerializedName(SERIALIZED_NAME_CONTENTS_VALUE)
  private Double contentsValue;

  public static final String SERIALIZED_NAME_MEASUREMENTS = "measurements";
  @SerializedName(SERIALIZED_NAME_MEASUREMENTS)
  private ReservationWebAPIPackageMeasurements measurements;

  public static final String SERIALIZED_NAME_IS_GIFT = "isGift";
  @SerializedName(SERIALIZED_NAME_IS_GIFT)
  private Boolean isGift;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "customAttributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private List<CustomAttribute> customAttributes = null;

  public static final String SERIALIZED_NAME_REQUIRES_SIGNATURE = "requiresSignature";
  @SerializedName(SERIALIZED_NAME_REQUIRES_SIGNATURE)
  private Boolean requiresSignature;

  public static final String SERIALIZED_NAME_PACKAGING_TYPE = "packagingType";
  @SerializedName(SERIALIZED_NAME_PACKAGING_TYPE)
  private String packagingType;

  public static final String SERIALIZED_NAME_PRODUCT_SUMMARIES = "productSummaries";
  @SerializedName(SERIALIZED_NAME_PRODUCT_SUMMARIES)
  private List<ProductSummary> productSummaries = null;

  public ShippingRuntimePackage() {
  }

  public ShippingRuntimePackage id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ShippingRuntimePackage contentsValue(Double contentsValue) {
    
    this.contentsValue = contentsValue;
    return this;
  }

   /**
   * Get contentsValue
   * @return contentsValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getContentsValue() {
    return contentsValue;
  }


  public void setContentsValue(Double contentsValue) {
    this.contentsValue = contentsValue;
  }


  public ShippingRuntimePackage measurements(ReservationWebAPIPackageMeasurements measurements) {
    
    this.measurements = measurements;
    return this;
  }

   /**
   * Get measurements
   * @return measurements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReservationWebAPIPackageMeasurements getMeasurements() {
    return measurements;
  }


  public void setMeasurements(ReservationWebAPIPackageMeasurements measurements) {
    this.measurements = measurements;
  }


  public ShippingRuntimePackage isGift(Boolean isGift) {
    
    this.isGift = isGift;
    return this;
  }

   /**
   * Get isGift
   * @return isGift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGift() {
    return isGift;
  }


  public void setIsGift(Boolean isGift) {
    this.isGift = isGift;
  }


  public ShippingRuntimePackage customAttributes(List<CustomAttribute> customAttributes) {
    
    this.customAttributes = customAttributes;
    return this;
  }

  public ShippingRuntimePackage addCustomAttributesItem(CustomAttribute customAttributesItem) {
    if (this.customAttributes == null) {
      this.customAttributes = new ArrayList<>();
    }
    this.customAttributes.add(customAttributesItem);
    return this;
  }

   /**
   * Get customAttributes
   * @return customAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CustomAttribute> getCustomAttributes() {
    return customAttributes;
  }


  public void setCustomAttributes(List<CustomAttribute> customAttributes) {
    this.customAttributes = customAttributes;
  }


  public ShippingRuntimePackage requiresSignature(Boolean requiresSignature) {
    
    this.requiresSignature = requiresSignature;
    return this;
  }

   /**
   * Package delivery requires a signature when true.
   * @return requiresSignature
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Package delivery requires a signature when true.")

  public Boolean getRequiresSignature() {
    return requiresSignature;
  }


  public void setRequiresSignature(Boolean requiresSignature) {
    this.requiresSignature = requiresSignature;
  }


  public ShippingRuntimePackage packagingType(String packagingType) {
    
    this.packagingType = packagingType;
    return this;
  }

   /**
   * Selected PackagingType.  Shipping provider dependent.
   * @return packagingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Selected PackagingType.  Shipping provider dependent.")

  public String getPackagingType() {
    return packagingType;
  }


  public void setPackagingType(String packagingType) {
    this.packagingType = packagingType;
  }


  public ShippingRuntimePackage productSummaries(List<ProductSummary> productSummaries) {
    
    this.productSummaries = productSummaries;
    return this;
  }

  public ShippingRuntimePackage addProductSummariesItem(ProductSummary productSummariesItem) {
    if (this.productSummaries == null) {
      this.productSummaries = new ArrayList<>();
    }
    this.productSummaries.add(productSummariesItem);
    return this;
  }

   /**
   * Product details in the package
   * @return productSummaries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product details in the package")

  public List<ProductSummary> getProductSummaries() {
    return productSummaries;
  }


  public void setProductSummaries(List<ProductSummary> productSummaries) {
    this.productSummaries = productSummaries;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingRuntimePackage shippingRuntimePackage = (ShippingRuntimePackage) o;
    return Objects.equals(this.id, shippingRuntimePackage.id) &&
        Objects.equals(this.contentsValue, shippingRuntimePackage.contentsValue) &&
        Objects.equals(this.measurements, shippingRuntimePackage.measurements) &&
        Objects.equals(this.isGift, shippingRuntimePackage.isGift) &&
        Objects.equals(this.customAttributes, shippingRuntimePackage.customAttributes) &&
        Objects.equals(this.requiresSignature, shippingRuntimePackage.requiresSignature) &&
        Objects.equals(this.packagingType, shippingRuntimePackage.packagingType) &&
        Objects.equals(this.productSummaries, shippingRuntimePackage.productSummaries);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, contentsValue, measurements, isGift, customAttributes, requiresSignature, packagingType, productSummaries);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingRuntimePackage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    contentsValue: ").append(toIndentedString(contentsValue)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    isGift: ").append(toIndentedString(isGift)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    requiresSignature: ").append(toIndentedString(requiresSignature)).append("\n");
    sb.append("    packagingType: ").append(toIndentedString(packagingType)).append("\n");
    sb.append("    productSummaries: ").append(toIndentedString(productSummaries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("contentsValue");
    openapiFields.add("measurements");
    openapiFields.add("isGift");
    openapiFields.add("customAttributes");
    openapiFields.add("requiresSignature");
    openapiFields.add("packagingType");
    openapiFields.add("productSummaries");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ShippingRuntimePackage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ShippingRuntimePackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShippingRuntimePackage is not found in the empty JSON string", ShippingRuntimePackage.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ShippingRuntimePackage.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShippingRuntimePackage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `measurements`
      if (jsonObj.get("measurements") != null && !jsonObj.get("measurements").isJsonNull()) {
        ReservationWebAPIPackageMeasurements.validateJsonObject(jsonObj.getAsJsonObject("measurements"));
      }
      if (jsonObj.get("customAttributes") != null && !jsonObj.get("customAttributes").isJsonNull()) {
        JsonArray jsonArraycustomAttributes = jsonObj.getAsJsonArray("customAttributes");
        if (jsonArraycustomAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("customAttributes").toString()));
          }

          // validate the optional field `customAttributes` (array)
          for (int i = 0; i < jsonArraycustomAttributes.size(); i++) {
            CustomAttribute.validateJsonObject(jsonArraycustomAttributes.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("packagingType") != null && !jsonObj.get("packagingType").isJsonNull()) && !jsonObj.get("packagingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packagingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packagingType").toString()));
      }
      if (jsonObj.get("productSummaries") != null && !jsonObj.get("productSummaries").isJsonNull()) {
        JsonArray jsonArrayproductSummaries = jsonObj.getAsJsonArray("productSummaries");
        if (jsonArrayproductSummaries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productSummaries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productSummaries` to be an array in the JSON string but got `%s`", jsonObj.get("productSummaries").toString()));
          }

          // validate the optional field `productSummaries` (array)
          for (int i = 0; i < jsonArrayproductSummaries.size(); i++) {
            ProductSummary.validateJsonObject(jsonArrayproductSummaries.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShippingRuntimePackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShippingRuntimePackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShippingRuntimePackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShippingRuntimePackage.class));

       return (TypeAdapter<T>) new TypeAdapter<ShippingRuntimePackage>() {
           @Override
           public void write(JsonWriter out, ShippingRuntimePackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShippingRuntimePackage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ShippingRuntimePackage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ShippingRuntimePackage
  * @throws IOException if the JSON string is invalid with respect to ShippingRuntimePackage
  */
  public static ShippingRuntimePackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShippingRuntimePackage.class);
  }

 /**
  * Convert an instance of ShippingRuntimePackage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

