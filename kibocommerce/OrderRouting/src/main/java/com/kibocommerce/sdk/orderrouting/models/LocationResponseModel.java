/*
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.orderrouting.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * LocationResponseModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LocationResponseModel implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_ADDRESS_TYPE = "addressType";
  @SerializedName(SERIALIZED_NAME_ADDRESS_TYPE)
  private String addressType;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_DIRECT_SHIP = "directShip";
  @SerializedName(SERIALIZED_NAME_DIRECT_SHIP)
  private Boolean directShip;

  public static final String SERIALIZED_NAME_EXPRESS = "express";
  @SerializedName(SERIALIZED_NAME_EXPRESS)
  private Boolean express;

  public static final String SERIALIZED_NAME_FRIDAY_HOURS = "fridayHours";
  @SerializedName(SERIALIZED_NAME_FRIDAY_HOURS)
  private String fridayHours;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private Double latitude;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_LOCATION_I_D = "locationID";
  @SerializedName(SERIALIZED_NAME_LOCATION_I_D)
  private Integer locationID;

  public static final String SERIALIZED_NAME_LOCATION_NAME = "locationName";
  @SerializedName(SERIALIZED_NAME_LOCATION_NAME)
  private String locationName;

  public static final String SERIALIZED_NAME_LOCATION_TYPES = "locationTypes";
  @SerializedName(SERIALIZED_NAME_LOCATION_TYPES)
  private List<String> locationTypes = null;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private Double longitude;

  public static final String SERIALIZED_NAME_MONDAY_HOURS = "mondayHours";
  @SerializedName(SERIALIZED_NAME_MONDAY_HOURS)
  private String mondayHours;

  public static final String SERIALIZED_NAME_PICKUP = "pickup";
  @SerializedName(SERIALIZED_NAME_PICKUP)
  private Boolean pickup;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_REQUIRES_MANIFEST = "requiresManifest";
  @SerializedName(SERIALIZED_NAME_REQUIRES_MANIFEST)
  private Boolean requiresManifest;

  public static final String SERIALIZED_NAME_SATURDAY_HOURS = "saturdayHours";
  @SerializedName(SERIALIZED_NAME_SATURDAY_HOURS)
  private String saturdayHours;

  public static final String SERIALIZED_NAME_STATE_OR_PROVINCE = "stateOrProvince";
  @SerializedName(SERIALIZED_NAME_STATE_OR_PROVINCE)
  private String stateOrProvince;

  public static final String SERIALIZED_NAME_SUNDAY_HOURS = "sundayHours";
  @SerializedName(SERIALIZED_NAME_SUNDAY_HOURS)
  private String sundayHours;

  public static final String SERIALIZED_NAME_TENANT_I_D = "tenantID";
  @SerializedName(SERIALIZED_NAME_TENANT_I_D)
  private Integer tenantID;

  public static final String SERIALIZED_NAME_THURSDAY_HOURS = "thursdayHours";
  @SerializedName(SERIALIZED_NAME_THURSDAY_HOURS)
  private String thursdayHours;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_TRANSFER_ENABLED = "transferEnabled";
  @SerializedName(SERIALIZED_NAME_TRANSFER_ENABLED)
  private Boolean transferEnabled;

  public static final String SERIALIZED_NAME_TUESDAY_HOURS = "tuesdayHours";
  @SerializedName(SERIALIZED_NAME_TUESDAY_HOURS)
  private String tuesdayHours;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_WEDNESDAY_HOURS = "wednesdayHours";
  @SerializedName(SERIALIZED_NAME_WEDNESDAY_HOURS)
  private String wednesdayHours;

  public static final String SERIALIZED_NAME_WMS_ENABLED = "wmsEnabled";
  @SerializedName(SERIALIZED_NAME_WMS_ENABLED)
  private Boolean wmsEnabled;

  public LocationResponseModel() {
  }

  public LocationResponseModel active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public LocationResponseModel addressType(String addressType) {
    
    this.addressType = addressType;
    return this;
  }

   /**
   * Get addressType
   * @return addressType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressType() {
    return addressType;
  }


  public void setAddressType(String addressType) {
    this.addressType = addressType;
  }


  public LocationResponseModel city(String city) {
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    this.city = city;
  }


  public LocationResponseModel countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public LocationResponseModel created(String created) {
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreated() {
    return created;
  }


  public void setCreated(String created) {
    this.created = created;
  }


  public LocationResponseModel directShip(Boolean directShip) {
    
    this.directShip = directShip;
    return this;
  }

   /**
   * Get directShip
   * @return directShip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDirectShip() {
    return directShip;
  }


  public void setDirectShip(Boolean directShip) {
    this.directShip = directShip;
  }


  public LocationResponseModel express(Boolean express) {
    
    this.express = express;
    return this;
  }

   /**
   * Get express
   * @return express
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getExpress() {
    return express;
  }


  public void setExpress(Boolean express) {
    this.express = express;
  }


  public LocationResponseModel fridayHours(String fridayHours) {
    
    this.fridayHours = fridayHours;
    return this;
  }

   /**
   * Get fridayHours
   * @return fridayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFridayHours() {
    return fridayHours;
  }


  public void setFridayHours(String fridayHours) {
    this.fridayHours = fridayHours;
  }


  public LocationResponseModel latitude(Double latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLatitude() {
    return latitude;
  }


  public void setLatitude(Double latitude) {
    this.latitude = latitude;
  }


  public LocationResponseModel locationCode(String locationCode) {
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Get locationCode
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    this.locationCode = locationCode;
  }


  public LocationResponseModel locationID(Integer locationID) {
    
    this.locationID = locationID;
    return this;
  }

   /**
   * Get locationID
   * @return locationID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLocationID() {
    return locationID;
  }


  public void setLocationID(Integer locationID) {
    this.locationID = locationID;
  }


  public LocationResponseModel locationName(String locationName) {
    
    this.locationName = locationName;
    return this;
  }

   /**
   * Get locationName
   * @return locationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationName() {
    return locationName;
  }


  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }


  public LocationResponseModel locationTypes(List<String> locationTypes) {
    
    this.locationTypes = locationTypes;
    return this;
  }

  public LocationResponseModel addLocationTypesItem(String locationTypesItem) {
    if (this.locationTypes == null) {
      this.locationTypes = new ArrayList<>();
    }
    this.locationTypes.add(locationTypesItem);
    return this;
  }

   /**
   * Get locationTypes
   * @return locationTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getLocationTypes() {
    return locationTypes;
  }


  public void setLocationTypes(List<String> locationTypes) {
    this.locationTypes = locationTypes;
  }


  public LocationResponseModel longitude(Double longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLongitude() {
    return longitude;
  }


  public void setLongitude(Double longitude) {
    this.longitude = longitude;
  }


  public LocationResponseModel mondayHours(String mondayHours) {
    
    this.mondayHours = mondayHours;
    return this;
  }

   /**
   * Get mondayHours
   * @return mondayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMondayHours() {
    return mondayHours;
  }


  public void setMondayHours(String mondayHours) {
    this.mondayHours = mondayHours;
  }


  public LocationResponseModel pickup(Boolean pickup) {
    
    this.pickup = pickup;
    return this;
  }

   /**
   * Get pickup
   * @return pickup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPickup() {
    return pickup;
  }


  public void setPickup(Boolean pickup) {
    this.pickup = pickup;
  }


  public LocationResponseModel postalCode(String postalCode) {
    
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Get postalCode
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostalCode() {
    return postalCode;
  }


  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public LocationResponseModel requiresManifest(Boolean requiresManifest) {
    
    this.requiresManifest = requiresManifest;
    return this;
  }

   /**
   * Get requiresManifest
   * @return requiresManifest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequiresManifest() {
    return requiresManifest;
  }


  public void setRequiresManifest(Boolean requiresManifest) {
    this.requiresManifest = requiresManifest;
  }


  public LocationResponseModel saturdayHours(String saturdayHours) {
    
    this.saturdayHours = saturdayHours;
    return this;
  }

   /**
   * Get saturdayHours
   * @return saturdayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSaturdayHours() {
    return saturdayHours;
  }


  public void setSaturdayHours(String saturdayHours) {
    this.saturdayHours = saturdayHours;
  }


  public LocationResponseModel stateOrProvince(String stateOrProvince) {
    
    this.stateOrProvince = stateOrProvince;
    return this;
  }

   /**
   * Get stateOrProvince
   * @return stateOrProvince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStateOrProvince() {
    return stateOrProvince;
  }


  public void setStateOrProvince(String stateOrProvince) {
    this.stateOrProvince = stateOrProvince;
  }


  public LocationResponseModel sundayHours(String sundayHours) {
    
    this.sundayHours = sundayHours;
    return this;
  }

   /**
   * Get sundayHours
   * @return sundayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSundayHours() {
    return sundayHours;
  }


  public void setSundayHours(String sundayHours) {
    this.sundayHours = sundayHours;
  }


  public LocationResponseModel tenantID(Integer tenantID) {
    
    this.tenantID = tenantID;
    return this;
  }

   /**
   * Get tenantID
   * @return tenantID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTenantID() {
    return tenantID;
  }


  public void setTenantID(Integer tenantID) {
    this.tenantID = tenantID;
  }


  public LocationResponseModel thursdayHours(String thursdayHours) {
    
    this.thursdayHours = thursdayHours;
    return this;
  }

   /**
   * Get thursdayHours
   * @return thursdayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getThursdayHours() {
    return thursdayHours;
  }


  public void setThursdayHours(String thursdayHours) {
    this.thursdayHours = thursdayHours;
  }


  public LocationResponseModel timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public LocationResponseModel transferEnabled(Boolean transferEnabled) {
    
    this.transferEnabled = transferEnabled;
    return this;
  }

   /**
   * Get transferEnabled
   * @return transferEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTransferEnabled() {
    return transferEnabled;
  }


  public void setTransferEnabled(Boolean transferEnabled) {
    this.transferEnabled = transferEnabled;
  }


  public LocationResponseModel tuesdayHours(String tuesdayHours) {
    
    this.tuesdayHours = tuesdayHours;
    return this;
  }

   /**
   * Get tuesdayHours
   * @return tuesdayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTuesdayHours() {
    return tuesdayHours;
  }


  public void setTuesdayHours(String tuesdayHours) {
    this.tuesdayHours = tuesdayHours;
  }


  public LocationResponseModel updated(String updated) {
    
    this.updated = updated;
    return this;
  }

   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpdated() {
    return updated;
  }


  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public LocationResponseModel wednesdayHours(String wednesdayHours) {
    
    this.wednesdayHours = wednesdayHours;
    return this;
  }

   /**
   * Get wednesdayHours
   * @return wednesdayHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWednesdayHours() {
    return wednesdayHours;
  }


  public void setWednesdayHours(String wednesdayHours) {
    this.wednesdayHours = wednesdayHours;
  }


  public LocationResponseModel wmsEnabled(Boolean wmsEnabled) {
    
    this.wmsEnabled = wmsEnabled;
    return this;
  }

   /**
   * Get wmsEnabled
   * @return wmsEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWmsEnabled() {
    return wmsEnabled;
  }


  public void setWmsEnabled(Boolean wmsEnabled) {
    this.wmsEnabled = wmsEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationResponseModel locationResponseModel = (LocationResponseModel) o;
    return Objects.equals(this.active, locationResponseModel.active) &&
        Objects.equals(this.addressType, locationResponseModel.addressType) &&
        Objects.equals(this.city, locationResponseModel.city) &&
        Objects.equals(this.countryCode, locationResponseModel.countryCode) &&
        Objects.equals(this.created, locationResponseModel.created) &&
        Objects.equals(this.directShip, locationResponseModel.directShip) &&
        Objects.equals(this.express, locationResponseModel.express) &&
        Objects.equals(this.fridayHours, locationResponseModel.fridayHours) &&
        Objects.equals(this.latitude, locationResponseModel.latitude) &&
        Objects.equals(this.locationCode, locationResponseModel.locationCode) &&
        Objects.equals(this.locationID, locationResponseModel.locationID) &&
        Objects.equals(this.locationName, locationResponseModel.locationName) &&
        Objects.equals(this.locationTypes, locationResponseModel.locationTypes) &&
        Objects.equals(this.longitude, locationResponseModel.longitude) &&
        Objects.equals(this.mondayHours, locationResponseModel.mondayHours) &&
        Objects.equals(this.pickup, locationResponseModel.pickup) &&
        Objects.equals(this.postalCode, locationResponseModel.postalCode) &&
        Objects.equals(this.requiresManifest, locationResponseModel.requiresManifest) &&
        Objects.equals(this.saturdayHours, locationResponseModel.saturdayHours) &&
        Objects.equals(this.stateOrProvince, locationResponseModel.stateOrProvince) &&
        Objects.equals(this.sundayHours, locationResponseModel.sundayHours) &&
        Objects.equals(this.tenantID, locationResponseModel.tenantID) &&
        Objects.equals(this.thursdayHours, locationResponseModel.thursdayHours) &&
        Objects.equals(this.timezone, locationResponseModel.timezone) &&
        Objects.equals(this.transferEnabled, locationResponseModel.transferEnabled) &&
        Objects.equals(this.tuesdayHours, locationResponseModel.tuesdayHours) &&
        Objects.equals(this.updated, locationResponseModel.updated) &&
        Objects.equals(this.wednesdayHours, locationResponseModel.wednesdayHours) &&
        Objects.equals(this.wmsEnabled, locationResponseModel.wmsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, addressType, city, countryCode, created, directShip, express, fridayHours, latitude, locationCode, locationID, locationName, locationTypes, longitude, mondayHours, pickup, postalCode, requiresManifest, saturdayHours, stateOrProvince, sundayHours, tenantID, thursdayHours, timezone, transferEnabled, tuesdayHours, updated, wednesdayHours, wmsEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationResponseModel {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    directShip: ").append(toIndentedString(directShip)).append("\n");
    sb.append("    express: ").append(toIndentedString(express)).append("\n");
    sb.append("    fridayHours: ").append(toIndentedString(fridayHours)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    locationID: ").append(toIndentedString(locationID)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    locationTypes: ").append(toIndentedString(locationTypes)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    mondayHours: ").append(toIndentedString(mondayHours)).append("\n");
    sb.append("    pickup: ").append(toIndentedString(pickup)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    requiresManifest: ").append(toIndentedString(requiresManifest)).append("\n");
    sb.append("    saturdayHours: ").append(toIndentedString(saturdayHours)).append("\n");
    sb.append("    stateOrProvince: ").append(toIndentedString(stateOrProvince)).append("\n");
    sb.append("    sundayHours: ").append(toIndentedString(sundayHours)).append("\n");
    sb.append("    tenantID: ").append(toIndentedString(tenantID)).append("\n");
    sb.append("    thursdayHours: ").append(toIndentedString(thursdayHours)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    transferEnabled: ").append(toIndentedString(transferEnabled)).append("\n");
    sb.append("    tuesdayHours: ").append(toIndentedString(tuesdayHours)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    wednesdayHours: ").append(toIndentedString(wednesdayHours)).append("\n");
    sb.append("    wmsEnabled: ").append(toIndentedString(wmsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("addressType");
    openapiFields.add("city");
    openapiFields.add("countryCode");
    openapiFields.add("created");
    openapiFields.add("directShip");
    openapiFields.add("express");
    openapiFields.add("fridayHours");
    openapiFields.add("latitude");
    openapiFields.add("locationCode");
    openapiFields.add("locationID");
    openapiFields.add("locationName");
    openapiFields.add("locationTypes");
    openapiFields.add("longitude");
    openapiFields.add("mondayHours");
    openapiFields.add("pickup");
    openapiFields.add("postalCode");
    openapiFields.add("requiresManifest");
    openapiFields.add("saturdayHours");
    openapiFields.add("stateOrProvince");
    openapiFields.add("sundayHours");
    openapiFields.add("tenantID");
    openapiFields.add("thursdayHours");
    openapiFields.add("timezone");
    openapiFields.add("transferEnabled");
    openapiFields.add("tuesdayHours");
    openapiFields.add("updated");
    openapiFields.add("wednesdayHours");
    openapiFields.add("wmsEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to LocationResponseModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!LocationResponseModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LocationResponseModel is not found in the empty JSON string", LocationResponseModel.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!LocationResponseModel.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LocationResponseModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("addressType") != null && !jsonObj.get("addressType").isJsonNull()) && !jsonObj.get("addressType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressType").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("fridayHours") != null && !jsonObj.get("fridayHours").isJsonNull()) && !jsonObj.get("fridayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fridayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fridayHours").toString()));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if ((jsonObj.get("locationName") != null && !jsonObj.get("locationName").isJsonNull()) && !jsonObj.get("locationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationName").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("locationTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationTypes` to be an array in the JSON string but got `%s`", jsonObj.get("locationTypes").toString()));
      }
      if ((jsonObj.get("mondayHours") != null && !jsonObj.get("mondayHours").isJsonNull()) && !jsonObj.get("mondayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mondayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mondayHours").toString()));
      }
      if ((jsonObj.get("postalCode") != null && !jsonObj.get("postalCode").isJsonNull()) && !jsonObj.get("postalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalCode").toString()));
      }
      if ((jsonObj.get("saturdayHours") != null && !jsonObj.get("saturdayHours").isJsonNull()) && !jsonObj.get("saturdayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saturdayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saturdayHours").toString()));
      }
      if ((jsonObj.get("stateOrProvince") != null && !jsonObj.get("stateOrProvince").isJsonNull()) && !jsonObj.get("stateOrProvince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateOrProvince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateOrProvince").toString()));
      }
      if ((jsonObj.get("sundayHours") != null && !jsonObj.get("sundayHours").isJsonNull()) && !jsonObj.get("sundayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sundayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sundayHours").toString()));
      }
      if ((jsonObj.get("thursdayHours") != null && !jsonObj.get("thursdayHours").isJsonNull()) && !jsonObj.get("thursdayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thursdayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thursdayHours").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if ((jsonObj.get("tuesdayHours") != null && !jsonObj.get("tuesdayHours").isJsonNull()) && !jsonObj.get("tuesdayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tuesdayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tuesdayHours").toString()));
      }
      if ((jsonObj.get("updated") != null && !jsonObj.get("updated").isJsonNull()) && !jsonObj.get("updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated").toString()));
      }
      if ((jsonObj.get("wednesdayHours") != null && !jsonObj.get("wednesdayHours").isJsonNull()) && !jsonObj.get("wednesdayHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wednesdayHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wednesdayHours").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LocationResponseModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LocationResponseModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LocationResponseModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LocationResponseModel.class));

       return (TypeAdapter<T>) new TypeAdapter<LocationResponseModel>() {
           @Override
           public void write(JsonWriter out, LocationResponseModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LocationResponseModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LocationResponseModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LocationResponseModel
  * @throws IOException if the JSON string is invalid with respect to LocationResponseModel
  */
  public static LocationResponseModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LocationResponseModel.class);
  }

 /**
  * Convert an instance of LocationResponseModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

