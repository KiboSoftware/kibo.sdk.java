/*
 * Kibo SiteSettings Service
 * OpenAPI Spec for Kibo SiteSettings Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.settings.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.settings.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.settings.models.CacheSettings;
import com.kibocommerce.sdk.settings.models.CustomRouteSettings;
import com.kibocommerce.sdk.settings.models.EmailTransactionSettings;
import com.kibocommerce.sdk.settings.models.EmailTypeSetting;
import com.kibocommerce.sdk.settings.models.ReCaptchaSettings;
import com.kibocommerce.sdk.settings.models.SMSTransactionSettings;
import com.kibocommerce.sdk.settings.models.SMSTypeSetting;
import com.kibocommerce.sdk.settings.models.TaxableTerritory;
import com.kibocommerce.sdk.settings.models.ViewAuthorizations;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * GeneralSettings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GeneralSettings implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_IS_MOZU_WEB_SITE = "isMozuWebSite";
  @SerializedName(SERIALIZED_NAME_IS_MOZU_WEB_SITE)
  private Boolean isMozuWebSite;

  public static final String SERIALIZED_NAME_WEBSITE_NAME = "websiteName";
  @SerializedName(SERIALIZED_NAME_WEBSITE_NAME)
  private String websiteName;

  public static final String SERIALIZED_NAME_CUSTOM_CDN_HOST_NAME = "customCdnHostName";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CDN_HOST_NAME)
  private String customCdnHostName;

  public static final String SERIALIZED_NAME_MISSING_IMAGE_SUBSTITUTE = "missingImageSubstitute";
  @SerializedName(SERIALIZED_NAME_MISSING_IMAGE_SUBSTITUTE)
  private String missingImageSubstitute;

  public static final String SERIALIZED_NAME_CACHE_SETTINGS = "cacheSettings";
  @SerializedName(SERIALIZED_NAME_CACHE_SETTINGS)
  private CacheSettings cacheSettings;

  public static final String SERIALIZED_NAME_TEMPLATE_SITE_ID = "templateSiteId";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_SITE_ID)
  private Integer templateSiteId;

  public static final String SERIALIZED_NAME_SITE_TIME_ZONE = "siteTimeZone";
  @SerializedName(SERIALIZED_NAME_SITE_TIME_ZONE)
  private String siteTimeZone;

  public static final String SERIALIZED_NAME_SITE_TIME_FORMAT = "siteTimeFormat";
  @SerializedName(SERIALIZED_NAME_SITE_TIME_FORMAT)
  private String siteTimeFormat;

  public static final String SERIALIZED_NAME_SENDER_EMAIL_ADDRESS = "senderEmailAddress";
  @SerializedName(SERIALIZED_NAME_SENDER_EMAIL_ADDRESS)
  private String senderEmailAddress;

  public static final String SERIALIZED_NAME_SENDER_EMAIL_ALIAS = "senderEmailAlias";
  @SerializedName(SERIALIZED_NAME_SENDER_EMAIL_ALIAS)
  private String senderEmailAlias;

  public static final String SERIALIZED_NAME_REPLY_TO_EMAIL_ADDRESS = "replyToEmailAddress";
  @SerializedName(SERIALIZED_NAME_REPLY_TO_EMAIL_ADDRESS)
  private String replyToEmailAddress;

  public static final String SERIALIZED_NAME_BCC_EMAIL_ADDRESS = "bccEmailAddress";
  @SerializedName(SERIALIZED_NAME_BCC_EMAIL_ADDRESS)
  private String bccEmailAddress;

  public static final String SERIALIZED_NAME_FAV_ICON_PATH = "favIconPath";
  @SerializedName(SERIALIZED_NAME_FAV_ICON_PATH)
  private String favIconPath;

  public static final String SERIALIZED_NAME_FAV_ICON_MOBILE_PATH = "favIconMobilePath";
  @SerializedName(SERIALIZED_NAME_FAV_ICON_MOBILE_PATH)
  private String favIconMobilePath;

  public static final String SERIALIZED_NAME_LOGO_TEXT = "logoText";
  @SerializedName(SERIALIZED_NAME_LOGO_TEXT)
  private String logoText;

  public static final String SERIALIZED_NAME_LOGO_PATH = "logoPath";
  @SerializedName(SERIALIZED_NAME_LOGO_PATH)
  private String logoPath;

  public static final String SERIALIZED_NAME_THEME = "theme";
  @SerializedName(SERIALIZED_NAME_THEME)
  private String theme;

  public static final String SERIALIZED_NAME_MOBILE_THEME = "mobileTheme";
  @SerializedName(SERIALIZED_NAME_MOBILE_THEME)
  private String mobileTheme;

  public static final String SERIALIZED_NAME_TABLET_THEME = "tabletTheme";
  @SerializedName(SERIALIZED_NAME_TABLET_THEME)
  private String tabletTheme;

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS_CODE = "googleAnalyticsCode";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS_CODE)
  private String googleAnalyticsCode;

  public static final String SERIALIZED_NAME_IS_GOOGLE_ANALYTICS_ENABLED = "isGoogleAnalyticsEnabled";
  @SerializedName(SERIALIZED_NAME_IS_GOOGLE_ANALYTICS_ENABLED)
  private Boolean isGoogleAnalyticsEnabled;

  public static final String SERIALIZED_NAME_IS_GOOGLE_ANALYTICS_ECOMMERCE_ENABLED = "isGoogleAnalyticsEcommerceEnabled";
  @SerializedName(SERIALIZED_NAME_IS_GOOGLE_ANALYTICS_ECOMMERCE_ENABLED)
  private Boolean isGoogleAnalyticsEcommerceEnabled;

  public static final String SERIALIZED_NAME_IS_WISHLIST_CREATION_ENABLED = "isWishlistCreationEnabled";
  @SerializedName(SERIALIZED_NAME_IS_WISHLIST_CREATION_ENABLED)
  private Boolean isWishlistCreationEnabled;

  public static final String SERIALIZED_NAME_IS_MULTISHIP_ENABLED = "isMultishipEnabled";
  @SerializedName(SERIALIZED_NAME_IS_MULTISHIP_ENABLED)
  private Boolean isMultishipEnabled;

  public static final String SERIALIZED_NAME_IS_ADDRESS_VALIDATION_ENABLED = "isAddressValidationEnabled";
  @SerializedName(SERIALIZED_NAME_IS_ADDRESS_VALIDATION_ENABLED)
  private Boolean isAddressValidationEnabled;

  public static final String SERIALIZED_NAME_ALLOW_INVALID_ADDRESSES = "allowInvalidAddresses";
  @SerializedName(SERIALIZED_NAME_ALLOW_INVALID_ADDRESSES)
  private Boolean allowInvalidAddresses;

  public static final String SERIALIZED_NAME_TAXABLE_TERRITORIES = "taxableTerritories";
  @SerializedName(SERIALIZED_NAME_TAXABLE_TERRITORIES)
  private List<TaxableTerritory> taxableTerritories = null;

  public static final String SERIALIZED_NAME_SUPRESSED_EMAIL_TRANSACTIONS = "supressedEmailTransactions";
  @SerializedName(SERIALIZED_NAME_SUPRESSED_EMAIL_TRANSACTIONS)
  private EmailTransactionSettings supressedEmailTransactions;

  public static final String SERIALIZED_NAME_EMAIL_TRANSACTIONS_ONLY_ON_REQUEST = "emailTransactionsOnlyOnRequest";
  @SerializedName(SERIALIZED_NAME_EMAIL_TRANSACTIONS_ONLY_ON_REQUEST)
  private EmailTransactionSettings emailTransactionsOnlyOnRequest;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_VIEW_AUTHORIZATIONS = "viewAuthorizations";
  @SerializedName(SERIALIZED_NAME_VIEW_AUTHORIZATIONS)
  private ViewAuthorizations viewAuthorizations;

  public static final String SERIALIZED_NAME_CUSTOM_ROUTES = "customRoutes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ROUTES)
  private CustomRouteSettings customRoutes;

  public static final String SERIALIZED_NAME_EMAIL_TYPES = "emailTypes";
  @SerializedName(SERIALIZED_NAME_EMAIL_TYPES)
  private List<EmailTypeSetting> emailTypes = null;

  public static final String SERIALIZED_NAME_SUPRESSED_SMS_TRANSACTIONS = "supressedSmsTransactions";
  @SerializedName(SERIALIZED_NAME_SUPRESSED_SMS_TRANSACTIONS)
  private SMSTransactionSettings supressedSmsTransactions;

  public static final String SERIALIZED_NAME_SMS_TYPES = "smsTypes";
  @SerializedName(SERIALIZED_NAME_SMS_TYPES)
  private List<SMSTypeSetting> smsTypes = null;

  public static final String SERIALIZED_NAME_RE_CAPTCHA_SETTINGS = "reCaptchaSettings";
  @SerializedName(SERIALIZED_NAME_RE_CAPTCHA_SETTINGS)
  private ReCaptchaSettings reCaptchaSettings;

  public GeneralSettings() {
  }

  public GeneralSettings isMozuWebSite(Boolean isMozuWebSite) {
    
    this.isMozuWebSite = isMozuWebSite;
    return this;
  }

   /**
   * Get isMozuWebSite
   * @return isMozuWebSite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsMozuWebSite() {
    return isMozuWebSite;
  }


  public void setIsMozuWebSite(Boolean isMozuWebSite) {
    this.isMozuWebSite = isMozuWebSite;
  }


  public GeneralSettings websiteName(String websiteName) {
    
    this.websiteName = websiteName;
    return this;
  }

   /**
   * Get websiteName
   * @return websiteName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWebsiteName() {
    return websiteName;
  }


  public void setWebsiteName(String websiteName) {
    this.websiteName = websiteName;
  }


  public GeneralSettings customCdnHostName(String customCdnHostName) {
    
    this.customCdnHostName = customCdnHostName;
    return this;
  }

   /**
   * Get customCdnHostName
   * @return customCdnHostName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCustomCdnHostName() {
    return customCdnHostName;
  }


  public void setCustomCdnHostName(String customCdnHostName) {
    this.customCdnHostName = customCdnHostName;
  }


  public GeneralSettings missingImageSubstitute(String missingImageSubstitute) {
    
    this.missingImageSubstitute = missingImageSubstitute;
    return this;
  }

   /**
   * Get missingImageSubstitute
   * @return missingImageSubstitute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMissingImageSubstitute() {
    return missingImageSubstitute;
  }


  public void setMissingImageSubstitute(String missingImageSubstitute) {
    this.missingImageSubstitute = missingImageSubstitute;
  }


  public GeneralSettings cacheSettings(CacheSettings cacheSettings) {
    
    this.cacheSettings = cacheSettings;
    return this;
  }

   /**
   * Get cacheSettings
   * @return cacheSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CacheSettings getCacheSettings() {
    return cacheSettings;
  }


  public void setCacheSettings(CacheSettings cacheSettings) {
    this.cacheSettings = cacheSettings;
  }


  public GeneralSettings templateSiteId(Integer templateSiteId) {
    
    this.templateSiteId = templateSiteId;
    return this;
  }

   /**
   * Get templateSiteId
   * @return templateSiteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTemplateSiteId() {
    return templateSiteId;
  }


  public void setTemplateSiteId(Integer templateSiteId) {
    this.templateSiteId = templateSiteId;
  }


  public GeneralSettings siteTimeZone(String siteTimeZone) {
    
    this.siteTimeZone = siteTimeZone;
    return this;
  }

   /**
   * Get siteTimeZone
   * @return siteTimeZone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSiteTimeZone() {
    return siteTimeZone;
  }


  public void setSiteTimeZone(String siteTimeZone) {
    this.siteTimeZone = siteTimeZone;
  }


  public GeneralSettings siteTimeFormat(String siteTimeFormat) {
    
    this.siteTimeFormat = siteTimeFormat;
    return this;
  }

   /**
   * Get siteTimeFormat
   * @return siteTimeFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSiteTimeFormat() {
    return siteTimeFormat;
  }


  public void setSiteTimeFormat(String siteTimeFormat) {
    this.siteTimeFormat = siteTimeFormat;
  }


  public GeneralSettings senderEmailAddress(String senderEmailAddress) {
    
    this.senderEmailAddress = senderEmailAddress;
    return this;
  }

   /**
   * Get senderEmailAddress
   * @return senderEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSenderEmailAddress() {
    return senderEmailAddress;
  }


  public void setSenderEmailAddress(String senderEmailAddress) {
    this.senderEmailAddress = senderEmailAddress;
  }


  public GeneralSettings senderEmailAlias(String senderEmailAlias) {
    
    this.senderEmailAlias = senderEmailAlias;
    return this;
  }

   /**
   * Get senderEmailAlias
   * @return senderEmailAlias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSenderEmailAlias() {
    return senderEmailAlias;
  }


  public void setSenderEmailAlias(String senderEmailAlias) {
    this.senderEmailAlias = senderEmailAlias;
  }


  public GeneralSettings replyToEmailAddress(String replyToEmailAddress) {
    
    this.replyToEmailAddress = replyToEmailAddress;
    return this;
  }

   /**
   * Get replyToEmailAddress
   * @return replyToEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReplyToEmailAddress() {
    return replyToEmailAddress;
  }


  public void setReplyToEmailAddress(String replyToEmailAddress) {
    this.replyToEmailAddress = replyToEmailAddress;
  }


  public GeneralSettings bccEmailAddress(String bccEmailAddress) {
    
    this.bccEmailAddress = bccEmailAddress;
    return this;
  }

   /**
   * Get bccEmailAddress
   * @return bccEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBccEmailAddress() {
    return bccEmailAddress;
  }


  public void setBccEmailAddress(String bccEmailAddress) {
    this.bccEmailAddress = bccEmailAddress;
  }


  public GeneralSettings favIconPath(String favIconPath) {
    
    this.favIconPath = favIconPath;
    return this;
  }

   /**
   * Get favIconPath
   * @return favIconPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFavIconPath() {
    return favIconPath;
  }


  public void setFavIconPath(String favIconPath) {
    this.favIconPath = favIconPath;
  }


  public GeneralSettings favIconMobilePath(String favIconMobilePath) {
    
    this.favIconMobilePath = favIconMobilePath;
    return this;
  }

   /**
   * Get favIconMobilePath
   * @return favIconMobilePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFavIconMobilePath() {
    return favIconMobilePath;
  }


  public void setFavIconMobilePath(String favIconMobilePath) {
    this.favIconMobilePath = favIconMobilePath;
  }


  public GeneralSettings logoText(String logoText) {
    
    this.logoText = logoText;
    return this;
  }

   /**
   * Get logoText
   * @return logoText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLogoText() {
    return logoText;
  }


  public void setLogoText(String logoText) {
    this.logoText = logoText;
  }


  public GeneralSettings logoPath(String logoPath) {
    
    this.logoPath = logoPath;
    return this;
  }

   /**
   * Get logoPath
   * @return logoPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLogoPath() {
    return logoPath;
  }


  public void setLogoPath(String logoPath) {
    this.logoPath = logoPath;
  }


  public GeneralSettings theme(String theme) {
    
    this.theme = theme;
    return this;
  }

   /**
   * Get theme
   * @return theme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTheme() {
    return theme;
  }


  public void setTheme(String theme) {
    this.theme = theme;
  }


  public GeneralSettings mobileTheme(String mobileTheme) {
    
    this.mobileTheme = mobileTheme;
    return this;
  }

   /**
   * Get mobileTheme
   * @return mobileTheme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMobileTheme() {
    return mobileTheme;
  }


  public void setMobileTheme(String mobileTheme) {
    this.mobileTheme = mobileTheme;
  }


  public GeneralSettings tabletTheme(String tabletTheme) {
    
    this.tabletTheme = tabletTheme;
    return this;
  }

   /**
   * Get tabletTheme
   * @return tabletTheme
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTabletTheme() {
    return tabletTheme;
  }


  public void setTabletTheme(String tabletTheme) {
    this.tabletTheme = tabletTheme;
  }


  public GeneralSettings googleAnalyticsCode(String googleAnalyticsCode) {
    
    this.googleAnalyticsCode = googleAnalyticsCode;
    return this;
  }

   /**
   * Get googleAnalyticsCode
   * @return googleAnalyticsCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGoogleAnalyticsCode() {
    return googleAnalyticsCode;
  }


  public void setGoogleAnalyticsCode(String googleAnalyticsCode) {
    this.googleAnalyticsCode = googleAnalyticsCode;
  }


  public GeneralSettings isGoogleAnalyticsEnabled(Boolean isGoogleAnalyticsEnabled) {
    
    this.isGoogleAnalyticsEnabled = isGoogleAnalyticsEnabled;
    return this;
  }

   /**
   * Get isGoogleAnalyticsEnabled
   * @return isGoogleAnalyticsEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGoogleAnalyticsEnabled() {
    return isGoogleAnalyticsEnabled;
  }


  public void setIsGoogleAnalyticsEnabled(Boolean isGoogleAnalyticsEnabled) {
    this.isGoogleAnalyticsEnabled = isGoogleAnalyticsEnabled;
  }


  public GeneralSettings isGoogleAnalyticsEcommerceEnabled(Boolean isGoogleAnalyticsEcommerceEnabled) {
    
    this.isGoogleAnalyticsEcommerceEnabled = isGoogleAnalyticsEcommerceEnabled;
    return this;
  }

   /**
   * Get isGoogleAnalyticsEcommerceEnabled
   * @return isGoogleAnalyticsEcommerceEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsGoogleAnalyticsEcommerceEnabled() {
    return isGoogleAnalyticsEcommerceEnabled;
  }


  public void setIsGoogleAnalyticsEcommerceEnabled(Boolean isGoogleAnalyticsEcommerceEnabled) {
    this.isGoogleAnalyticsEcommerceEnabled = isGoogleAnalyticsEcommerceEnabled;
  }


  public GeneralSettings isWishlistCreationEnabled(Boolean isWishlistCreationEnabled) {
    
    this.isWishlistCreationEnabled = isWishlistCreationEnabled;
    return this;
  }

   /**
   * Get isWishlistCreationEnabled
   * @return isWishlistCreationEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsWishlistCreationEnabled() {
    return isWishlistCreationEnabled;
  }


  public void setIsWishlistCreationEnabled(Boolean isWishlistCreationEnabled) {
    this.isWishlistCreationEnabled = isWishlistCreationEnabled;
  }


  public GeneralSettings isMultishipEnabled(Boolean isMultishipEnabled) {
    
    this.isMultishipEnabled = isMultishipEnabled;
    return this;
  }

   /**
   * Get isMultishipEnabled
   * @return isMultishipEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsMultishipEnabled() {
    return isMultishipEnabled;
  }


  public void setIsMultishipEnabled(Boolean isMultishipEnabled) {
    this.isMultishipEnabled = isMultishipEnabled;
  }


  public GeneralSettings isAddressValidationEnabled(Boolean isAddressValidationEnabled) {
    
    this.isAddressValidationEnabled = isAddressValidationEnabled;
    return this;
  }

   /**
   * Get isAddressValidationEnabled
   * @return isAddressValidationEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAddressValidationEnabled() {
    return isAddressValidationEnabled;
  }


  public void setIsAddressValidationEnabled(Boolean isAddressValidationEnabled) {
    this.isAddressValidationEnabled = isAddressValidationEnabled;
  }


  public GeneralSettings allowInvalidAddresses(Boolean allowInvalidAddresses) {
    
    this.allowInvalidAddresses = allowInvalidAddresses;
    return this;
  }

   /**
   * Get allowInvalidAddresses
   * @return allowInvalidAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowInvalidAddresses() {
    return allowInvalidAddresses;
  }


  public void setAllowInvalidAddresses(Boolean allowInvalidAddresses) {
    this.allowInvalidAddresses = allowInvalidAddresses;
  }


  public GeneralSettings taxableTerritories(List<TaxableTerritory> taxableTerritories) {
    
    this.taxableTerritories = taxableTerritories;
    return this;
  }

  public GeneralSettings addTaxableTerritoriesItem(TaxableTerritory taxableTerritoriesItem) {
    if (this.taxableTerritories == null) {
      this.taxableTerritories = new ArrayList<>();
    }
    this.taxableTerritories.add(taxableTerritoriesItem);
    return this;
  }

   /**
   * Get taxableTerritories
   * @return taxableTerritories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TaxableTerritory> getTaxableTerritories() {
    return taxableTerritories;
  }


  public void setTaxableTerritories(List<TaxableTerritory> taxableTerritories) {
    this.taxableTerritories = taxableTerritories;
  }


  public GeneralSettings supressedEmailTransactions(EmailTransactionSettings supressedEmailTransactions) {
    
    this.supressedEmailTransactions = supressedEmailTransactions;
    return this;
  }

   /**
   * Get supressedEmailTransactions
   * @return supressedEmailTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmailTransactionSettings getSupressedEmailTransactions() {
    return supressedEmailTransactions;
  }


  public void setSupressedEmailTransactions(EmailTransactionSettings supressedEmailTransactions) {
    this.supressedEmailTransactions = supressedEmailTransactions;
  }


  public GeneralSettings emailTransactionsOnlyOnRequest(EmailTransactionSettings emailTransactionsOnlyOnRequest) {
    
    this.emailTransactionsOnlyOnRequest = emailTransactionsOnlyOnRequest;
    return this;
  }

   /**
   * Get emailTransactionsOnlyOnRequest
   * @return emailTransactionsOnlyOnRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmailTransactionSettings getEmailTransactionsOnlyOnRequest() {
    return emailTransactionsOnlyOnRequest;
  }


  public void setEmailTransactionsOnlyOnRequest(EmailTransactionSettings emailTransactionsOnlyOnRequest) {
    this.emailTransactionsOnlyOnRequest = emailTransactionsOnlyOnRequest;
  }


  public GeneralSettings auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public GeneralSettings viewAuthorizations(ViewAuthorizations viewAuthorizations) {
    
    this.viewAuthorizations = viewAuthorizations;
    return this;
  }

   /**
   * Get viewAuthorizations
   * @return viewAuthorizations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ViewAuthorizations getViewAuthorizations() {
    return viewAuthorizations;
  }


  public void setViewAuthorizations(ViewAuthorizations viewAuthorizations) {
    this.viewAuthorizations = viewAuthorizations;
  }


  public GeneralSettings customRoutes(CustomRouteSettings customRoutes) {
    
    this.customRoutes = customRoutes;
    return this;
  }

   /**
   * Get customRoutes
   * @return customRoutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CustomRouteSettings getCustomRoutes() {
    return customRoutes;
  }


  public void setCustomRoutes(CustomRouteSettings customRoutes) {
    this.customRoutes = customRoutes;
  }


  public GeneralSettings emailTypes(List<EmailTypeSetting> emailTypes) {
    
    this.emailTypes = emailTypes;
    return this;
  }

  public GeneralSettings addEmailTypesItem(EmailTypeSetting emailTypesItem) {
    if (this.emailTypes == null) {
      this.emailTypes = new ArrayList<>();
    }
    this.emailTypes.add(emailTypesItem);
    return this;
  }

   /**
   * Get emailTypes
   * @return emailTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmailTypeSetting> getEmailTypes() {
    return emailTypes;
  }


  public void setEmailTypes(List<EmailTypeSetting> emailTypes) {
    this.emailTypes = emailTypes;
  }


  public GeneralSettings supressedSmsTransactions(SMSTransactionSettings supressedSmsTransactions) {
    
    this.supressedSmsTransactions = supressedSmsTransactions;
    return this;
  }

   /**
   * Get supressedSmsTransactions
   * @return supressedSmsTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SMSTransactionSettings getSupressedSmsTransactions() {
    return supressedSmsTransactions;
  }


  public void setSupressedSmsTransactions(SMSTransactionSettings supressedSmsTransactions) {
    this.supressedSmsTransactions = supressedSmsTransactions;
  }


  public GeneralSettings smsTypes(List<SMSTypeSetting> smsTypes) {
    
    this.smsTypes = smsTypes;
    return this;
  }

  public GeneralSettings addSmsTypesItem(SMSTypeSetting smsTypesItem) {
    if (this.smsTypes == null) {
      this.smsTypes = new ArrayList<>();
    }
    this.smsTypes.add(smsTypesItem);
    return this;
  }

   /**
   * Get smsTypes
   * @return smsTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SMSTypeSetting> getSmsTypes() {
    return smsTypes;
  }


  public void setSmsTypes(List<SMSTypeSetting> smsTypes) {
    this.smsTypes = smsTypes;
  }


  public GeneralSettings reCaptchaSettings(ReCaptchaSettings reCaptchaSettings) {
    
    this.reCaptchaSettings = reCaptchaSettings;
    return this;
  }

   /**
   * Get reCaptchaSettings
   * @return reCaptchaSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ReCaptchaSettings getReCaptchaSettings() {
    return reCaptchaSettings;
  }


  public void setReCaptchaSettings(ReCaptchaSettings reCaptchaSettings) {
    this.reCaptchaSettings = reCaptchaSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralSettings generalSettings = (GeneralSettings) o;
    return Objects.equals(this.isMozuWebSite, generalSettings.isMozuWebSite) &&
        Objects.equals(this.websiteName, generalSettings.websiteName) &&
        Objects.equals(this.customCdnHostName, generalSettings.customCdnHostName) &&
        Objects.equals(this.missingImageSubstitute, generalSettings.missingImageSubstitute) &&
        Objects.equals(this.cacheSettings, generalSettings.cacheSettings) &&
        Objects.equals(this.templateSiteId, generalSettings.templateSiteId) &&
        Objects.equals(this.siteTimeZone, generalSettings.siteTimeZone) &&
        Objects.equals(this.siteTimeFormat, generalSettings.siteTimeFormat) &&
        Objects.equals(this.senderEmailAddress, generalSettings.senderEmailAddress) &&
        Objects.equals(this.senderEmailAlias, generalSettings.senderEmailAlias) &&
        Objects.equals(this.replyToEmailAddress, generalSettings.replyToEmailAddress) &&
        Objects.equals(this.bccEmailAddress, generalSettings.bccEmailAddress) &&
        Objects.equals(this.favIconPath, generalSettings.favIconPath) &&
        Objects.equals(this.favIconMobilePath, generalSettings.favIconMobilePath) &&
        Objects.equals(this.logoText, generalSettings.logoText) &&
        Objects.equals(this.logoPath, generalSettings.logoPath) &&
        Objects.equals(this.theme, generalSettings.theme) &&
        Objects.equals(this.mobileTheme, generalSettings.mobileTheme) &&
        Objects.equals(this.tabletTheme, generalSettings.tabletTheme) &&
        Objects.equals(this.googleAnalyticsCode, generalSettings.googleAnalyticsCode) &&
        Objects.equals(this.isGoogleAnalyticsEnabled, generalSettings.isGoogleAnalyticsEnabled) &&
        Objects.equals(this.isGoogleAnalyticsEcommerceEnabled, generalSettings.isGoogleAnalyticsEcommerceEnabled) &&
        Objects.equals(this.isWishlistCreationEnabled, generalSettings.isWishlistCreationEnabled) &&
        Objects.equals(this.isMultishipEnabled, generalSettings.isMultishipEnabled) &&
        Objects.equals(this.isAddressValidationEnabled, generalSettings.isAddressValidationEnabled) &&
        Objects.equals(this.allowInvalidAddresses, generalSettings.allowInvalidAddresses) &&
        Objects.equals(this.taxableTerritories, generalSettings.taxableTerritories) &&
        Objects.equals(this.supressedEmailTransactions, generalSettings.supressedEmailTransactions) &&
        Objects.equals(this.emailTransactionsOnlyOnRequest, generalSettings.emailTransactionsOnlyOnRequest) &&
        Objects.equals(this.auditInfo, generalSettings.auditInfo) &&
        Objects.equals(this.viewAuthorizations, generalSettings.viewAuthorizations) &&
        Objects.equals(this.customRoutes, generalSettings.customRoutes) &&
        Objects.equals(this.emailTypes, generalSettings.emailTypes) &&
        Objects.equals(this.supressedSmsTransactions, generalSettings.supressedSmsTransactions) &&
        Objects.equals(this.smsTypes, generalSettings.smsTypes) &&
        Objects.equals(this.reCaptchaSettings, generalSettings.reCaptchaSettings);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(isMozuWebSite, websiteName, customCdnHostName, missingImageSubstitute, cacheSettings, templateSiteId, siteTimeZone, siteTimeFormat, senderEmailAddress, senderEmailAlias, replyToEmailAddress, bccEmailAddress, favIconPath, favIconMobilePath, logoText, logoPath, theme, mobileTheme, tabletTheme, googleAnalyticsCode, isGoogleAnalyticsEnabled, isGoogleAnalyticsEcommerceEnabled, isWishlistCreationEnabled, isMultishipEnabled, isAddressValidationEnabled, allowInvalidAddresses, taxableTerritories, supressedEmailTransactions, emailTransactionsOnlyOnRequest, auditInfo, viewAuthorizations, customRoutes, emailTypes, supressedSmsTransactions, smsTypes, reCaptchaSettings);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralSettings {\n");
    sb.append("    isMozuWebSite: ").append(toIndentedString(isMozuWebSite)).append("\n");
    sb.append("    websiteName: ").append(toIndentedString(websiteName)).append("\n");
    sb.append("    customCdnHostName: ").append(toIndentedString(customCdnHostName)).append("\n");
    sb.append("    missingImageSubstitute: ").append(toIndentedString(missingImageSubstitute)).append("\n");
    sb.append("    cacheSettings: ").append(toIndentedString(cacheSettings)).append("\n");
    sb.append("    templateSiteId: ").append(toIndentedString(templateSiteId)).append("\n");
    sb.append("    siteTimeZone: ").append(toIndentedString(siteTimeZone)).append("\n");
    sb.append("    siteTimeFormat: ").append(toIndentedString(siteTimeFormat)).append("\n");
    sb.append("    senderEmailAddress: ").append(toIndentedString(senderEmailAddress)).append("\n");
    sb.append("    senderEmailAlias: ").append(toIndentedString(senderEmailAlias)).append("\n");
    sb.append("    replyToEmailAddress: ").append(toIndentedString(replyToEmailAddress)).append("\n");
    sb.append("    bccEmailAddress: ").append(toIndentedString(bccEmailAddress)).append("\n");
    sb.append("    favIconPath: ").append(toIndentedString(favIconPath)).append("\n");
    sb.append("    favIconMobilePath: ").append(toIndentedString(favIconMobilePath)).append("\n");
    sb.append("    logoText: ").append(toIndentedString(logoText)).append("\n");
    sb.append("    logoPath: ").append(toIndentedString(logoPath)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    mobileTheme: ").append(toIndentedString(mobileTheme)).append("\n");
    sb.append("    tabletTheme: ").append(toIndentedString(tabletTheme)).append("\n");
    sb.append("    googleAnalyticsCode: ").append(toIndentedString(googleAnalyticsCode)).append("\n");
    sb.append("    isGoogleAnalyticsEnabled: ").append(toIndentedString(isGoogleAnalyticsEnabled)).append("\n");
    sb.append("    isGoogleAnalyticsEcommerceEnabled: ").append(toIndentedString(isGoogleAnalyticsEcommerceEnabled)).append("\n");
    sb.append("    isWishlistCreationEnabled: ").append(toIndentedString(isWishlistCreationEnabled)).append("\n");
    sb.append("    isMultishipEnabled: ").append(toIndentedString(isMultishipEnabled)).append("\n");
    sb.append("    isAddressValidationEnabled: ").append(toIndentedString(isAddressValidationEnabled)).append("\n");
    sb.append("    allowInvalidAddresses: ").append(toIndentedString(allowInvalidAddresses)).append("\n");
    sb.append("    taxableTerritories: ").append(toIndentedString(taxableTerritories)).append("\n");
    sb.append("    supressedEmailTransactions: ").append(toIndentedString(supressedEmailTransactions)).append("\n");
    sb.append("    emailTransactionsOnlyOnRequest: ").append(toIndentedString(emailTransactionsOnlyOnRequest)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    viewAuthorizations: ").append(toIndentedString(viewAuthorizations)).append("\n");
    sb.append("    customRoutes: ").append(toIndentedString(customRoutes)).append("\n");
    sb.append("    emailTypes: ").append(toIndentedString(emailTypes)).append("\n");
    sb.append("    supressedSmsTransactions: ").append(toIndentedString(supressedSmsTransactions)).append("\n");
    sb.append("    smsTypes: ").append(toIndentedString(smsTypes)).append("\n");
    sb.append("    reCaptchaSettings: ").append(toIndentedString(reCaptchaSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isMozuWebSite");
    openapiFields.add("websiteName");
    openapiFields.add("customCdnHostName");
    openapiFields.add("missingImageSubstitute");
    openapiFields.add("cacheSettings");
    openapiFields.add("templateSiteId");
    openapiFields.add("siteTimeZone");
    openapiFields.add("siteTimeFormat");
    openapiFields.add("senderEmailAddress");
    openapiFields.add("senderEmailAlias");
    openapiFields.add("replyToEmailAddress");
    openapiFields.add("bccEmailAddress");
    openapiFields.add("favIconPath");
    openapiFields.add("favIconMobilePath");
    openapiFields.add("logoText");
    openapiFields.add("logoPath");
    openapiFields.add("theme");
    openapiFields.add("mobileTheme");
    openapiFields.add("tabletTheme");
    openapiFields.add("googleAnalyticsCode");
    openapiFields.add("isGoogleAnalyticsEnabled");
    openapiFields.add("isGoogleAnalyticsEcommerceEnabled");
    openapiFields.add("isWishlistCreationEnabled");
    openapiFields.add("isMultishipEnabled");
    openapiFields.add("isAddressValidationEnabled");
    openapiFields.add("allowInvalidAddresses");
    openapiFields.add("taxableTerritories");
    openapiFields.add("supressedEmailTransactions");
    openapiFields.add("emailTransactionsOnlyOnRequest");
    openapiFields.add("auditInfo");
    openapiFields.add("viewAuthorizations");
    openapiFields.add("customRoutes");
    openapiFields.add("emailTypes");
    openapiFields.add("supressedSmsTransactions");
    openapiFields.add("smsTypes");
    openapiFields.add("reCaptchaSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GeneralSettings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GeneralSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GeneralSettings is not found in the empty JSON string", GeneralSettings.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!GeneralSettings.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GeneralSettings` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("websiteName") != null && !jsonObj.get("websiteName").isJsonNull()) && !jsonObj.get("websiteName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `websiteName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("websiteName").toString()));
      }
      if ((jsonObj.get("customCdnHostName") != null && !jsonObj.get("customCdnHostName").isJsonNull()) && !jsonObj.get("customCdnHostName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customCdnHostName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customCdnHostName").toString()));
      }
      if ((jsonObj.get("missingImageSubstitute") != null && !jsonObj.get("missingImageSubstitute").isJsonNull()) && !jsonObj.get("missingImageSubstitute").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `missingImageSubstitute` to be a primitive type in the JSON string but got `%s`", jsonObj.get("missingImageSubstitute").toString()));
      }
      // validate the optional field `cacheSettings`
      if (jsonObj.get("cacheSettings") != null && !jsonObj.get("cacheSettings").isJsonNull()) {
        CacheSettings.validateJsonObject(jsonObj.getAsJsonObject("cacheSettings"));
      }
      if ((jsonObj.get("siteTimeZone") != null && !jsonObj.get("siteTimeZone").isJsonNull()) && !jsonObj.get("siteTimeZone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `siteTimeZone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("siteTimeZone").toString()));
      }
      if ((jsonObj.get("siteTimeFormat") != null && !jsonObj.get("siteTimeFormat").isJsonNull()) && !jsonObj.get("siteTimeFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `siteTimeFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("siteTimeFormat").toString()));
      }
      if ((jsonObj.get("senderEmailAddress") != null && !jsonObj.get("senderEmailAddress").isJsonNull()) && !jsonObj.get("senderEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderEmailAddress").toString()));
      }
      if ((jsonObj.get("senderEmailAlias") != null && !jsonObj.get("senderEmailAlias").isJsonNull()) && !jsonObj.get("senderEmailAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `senderEmailAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("senderEmailAlias").toString()));
      }
      if ((jsonObj.get("replyToEmailAddress") != null && !jsonObj.get("replyToEmailAddress").isJsonNull()) && !jsonObj.get("replyToEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replyToEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replyToEmailAddress").toString()));
      }
      if ((jsonObj.get("bccEmailAddress") != null && !jsonObj.get("bccEmailAddress").isJsonNull()) && !jsonObj.get("bccEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bccEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bccEmailAddress").toString()));
      }
      if ((jsonObj.get("favIconPath") != null && !jsonObj.get("favIconPath").isJsonNull()) && !jsonObj.get("favIconPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `favIconPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("favIconPath").toString()));
      }
      if ((jsonObj.get("favIconMobilePath") != null && !jsonObj.get("favIconMobilePath").isJsonNull()) && !jsonObj.get("favIconMobilePath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `favIconMobilePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("favIconMobilePath").toString()));
      }
      if ((jsonObj.get("logoText") != null && !jsonObj.get("logoText").isJsonNull()) && !jsonObj.get("logoText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoText").toString()));
      }
      if ((jsonObj.get("logoPath") != null && !jsonObj.get("logoPath").isJsonNull()) && !jsonObj.get("logoPath").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logoPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logoPath").toString()));
      }
      if ((jsonObj.get("theme") != null && !jsonObj.get("theme").isJsonNull()) && !jsonObj.get("theme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `theme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("theme").toString()));
      }
      if ((jsonObj.get("mobileTheme") != null && !jsonObj.get("mobileTheme").isJsonNull()) && !jsonObj.get("mobileTheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobileTheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobileTheme").toString()));
      }
      if ((jsonObj.get("tabletTheme") != null && !jsonObj.get("tabletTheme").isJsonNull()) && !jsonObj.get("tabletTheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tabletTheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tabletTheme").toString()));
      }
      if ((jsonObj.get("googleAnalyticsCode") != null && !jsonObj.get("googleAnalyticsCode").isJsonNull()) && !jsonObj.get("googleAnalyticsCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleAnalyticsCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleAnalyticsCode").toString()));
      }
      if (jsonObj.get("taxableTerritories") != null && !jsonObj.get("taxableTerritories").isJsonNull()) {
        JsonArray jsonArraytaxableTerritories = jsonObj.getAsJsonArray("taxableTerritories");
        if (jsonArraytaxableTerritories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxableTerritories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxableTerritories` to be an array in the JSON string but got `%s`", jsonObj.get("taxableTerritories").toString()));
          }

          // validate the optional field `taxableTerritories` (array)
          for (int i = 0; i < jsonArraytaxableTerritories.size(); i++) {
            TaxableTerritory.validateJsonObject(jsonArraytaxableTerritories.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `supressedEmailTransactions`
      if (jsonObj.get("supressedEmailTransactions") != null && !jsonObj.get("supressedEmailTransactions").isJsonNull()) {
        EmailTransactionSettings.validateJsonObject(jsonObj.getAsJsonObject("supressedEmailTransactions"));
      }
      // validate the optional field `emailTransactionsOnlyOnRequest`
      if (jsonObj.get("emailTransactionsOnlyOnRequest") != null && !jsonObj.get("emailTransactionsOnlyOnRequest").isJsonNull()) {
        EmailTransactionSettings.validateJsonObject(jsonObj.getAsJsonObject("emailTransactionsOnlyOnRequest"));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      // validate the optional field `viewAuthorizations`
      if (jsonObj.get("viewAuthorizations") != null && !jsonObj.get("viewAuthorizations").isJsonNull()) {
        ViewAuthorizations.validateJsonObject(jsonObj.getAsJsonObject("viewAuthorizations"));
      }
      // validate the optional field `customRoutes`
      if (jsonObj.get("customRoutes") != null && !jsonObj.get("customRoutes").isJsonNull()) {
        CustomRouteSettings.validateJsonObject(jsonObj.getAsJsonObject("customRoutes"));
      }
      if (jsonObj.get("emailTypes") != null && !jsonObj.get("emailTypes").isJsonNull()) {
        JsonArray jsonArrayemailTypes = jsonObj.getAsJsonArray("emailTypes");
        if (jsonArrayemailTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("emailTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `emailTypes` to be an array in the JSON string but got `%s`", jsonObj.get("emailTypes").toString()));
          }

          // validate the optional field `emailTypes` (array)
          for (int i = 0; i < jsonArrayemailTypes.size(); i++) {
            EmailTypeSetting.validateJsonObject(jsonArrayemailTypes.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `supressedSmsTransactions`
      if (jsonObj.get("supressedSmsTransactions") != null && !jsonObj.get("supressedSmsTransactions").isJsonNull()) {
        SMSTransactionSettings.validateJsonObject(jsonObj.getAsJsonObject("supressedSmsTransactions"));
      }
      if (jsonObj.get("smsTypes") != null && !jsonObj.get("smsTypes").isJsonNull()) {
        JsonArray jsonArraysmsTypes = jsonObj.getAsJsonArray("smsTypes");
        if (jsonArraysmsTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("smsTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `smsTypes` to be an array in the JSON string but got `%s`", jsonObj.get("smsTypes").toString()));
          }

          // validate the optional field `smsTypes` (array)
          for (int i = 0; i < jsonArraysmsTypes.size(); i++) {
            SMSTypeSetting.validateJsonObject(jsonArraysmsTypes.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `reCaptchaSettings`
      if (jsonObj.get("reCaptchaSettings") != null && !jsonObj.get("reCaptchaSettings").isJsonNull()) {
        ReCaptchaSettings.validateJsonObject(jsonObj.getAsJsonObject("reCaptchaSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GeneralSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GeneralSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GeneralSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GeneralSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<GeneralSettings>() {
           @Override
           public void write(JsonWriter out, GeneralSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GeneralSettings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GeneralSettings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GeneralSettings
  * @throws IOException if the JSON string is invalid with respect to GeneralSettings
  */
  public static GeneralSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GeneralSettings.class);
  }

 /**
  * Convert an instance of GeneralSettings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

