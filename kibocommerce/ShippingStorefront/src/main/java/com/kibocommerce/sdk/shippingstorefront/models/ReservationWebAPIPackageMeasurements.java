/*
 * Kibo ShippingRuntime Service
 * OpenAPI Spec for Kibo ShippingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingstorefront.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.shippingstorefront.models.CommerceRuntimeMeasurement;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * ReservationWebAPIPackageMeasurements
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReservationWebAPIPackageMeasurements implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private CommerceRuntimeMeasurement height;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private CommerceRuntimeMeasurement width;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private CommerceRuntimeMeasurement length;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private CommerceRuntimeMeasurement weight;

  public ReservationWebAPIPackageMeasurements() {
  }

  public ReservationWebAPIPackageMeasurements height(CommerceRuntimeMeasurement height) {
    
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeMeasurement getHeight() {
    return height;
  }


  public void setHeight(CommerceRuntimeMeasurement height) {
    this.height = height;
  }


  public ReservationWebAPIPackageMeasurements width(CommerceRuntimeMeasurement width) {
    
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeMeasurement getWidth() {
    return width;
  }


  public void setWidth(CommerceRuntimeMeasurement width) {
    this.width = width;
  }


  public ReservationWebAPIPackageMeasurements length(CommerceRuntimeMeasurement length) {
    
    this.length = length;
    return this;
  }

   /**
   * Get length
   * @return length
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeMeasurement getLength() {
    return length;
  }


  public void setLength(CommerceRuntimeMeasurement length) {
    this.length = length;
  }


  public ReservationWebAPIPackageMeasurements weight(CommerceRuntimeMeasurement weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeMeasurement getWeight() {
    return weight;
  }


  public void setWeight(CommerceRuntimeMeasurement weight) {
    this.weight = weight;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservationWebAPIPackageMeasurements reservationWebAPIPackageMeasurements = (ReservationWebAPIPackageMeasurements) o;
    return Objects.equals(this.height, reservationWebAPIPackageMeasurements.height) &&
        Objects.equals(this.width, reservationWebAPIPackageMeasurements.width) &&
        Objects.equals(this.length, reservationWebAPIPackageMeasurements.length) &&
        Objects.equals(this.weight, reservationWebAPIPackageMeasurements.weight);
  }

  @Override
  public int hashCode() {
    return Objects.hash(height, width, length, weight);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservationWebAPIPackageMeasurements {\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("height");
    openapiFields.add("width");
    openapiFields.add("length");
    openapiFields.add("weight");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ReservationWebAPIPackageMeasurements
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ReservationWebAPIPackageMeasurements.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ReservationWebAPIPackageMeasurements is not found in the empty JSON string", ReservationWebAPIPackageMeasurements.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ReservationWebAPIPackageMeasurements.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ReservationWebAPIPackageMeasurements` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `height`
      if (jsonObj.get("height") != null && !jsonObj.get("height").isJsonNull()) {
        CommerceRuntimeMeasurement.validateJsonObject(jsonObj.getAsJsonObject("height"));
      }
      // validate the optional field `width`
      if (jsonObj.get("width") != null && !jsonObj.get("width").isJsonNull()) {
        CommerceRuntimeMeasurement.validateJsonObject(jsonObj.getAsJsonObject("width"));
      }
      // validate the optional field `length`
      if (jsonObj.get("length") != null && !jsonObj.get("length").isJsonNull()) {
        CommerceRuntimeMeasurement.validateJsonObject(jsonObj.getAsJsonObject("length"));
      }
      // validate the optional field `weight`
      if (jsonObj.get("weight") != null && !jsonObj.get("weight").isJsonNull()) {
        CommerceRuntimeMeasurement.validateJsonObject(jsonObj.getAsJsonObject("weight"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ReservationWebAPIPackageMeasurements.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ReservationWebAPIPackageMeasurements' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ReservationWebAPIPackageMeasurements> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ReservationWebAPIPackageMeasurements.class));

       return (TypeAdapter<T>) new TypeAdapter<ReservationWebAPIPackageMeasurements>() {
           @Override
           public void write(JsonWriter out, ReservationWebAPIPackageMeasurements value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ReservationWebAPIPackageMeasurements read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ReservationWebAPIPackageMeasurements given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ReservationWebAPIPackageMeasurements
  * @throws IOException if the JSON string is invalid with respect to ReservationWebAPIPackageMeasurements
  */
  public static ReservationWebAPIPackageMeasurements fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ReservationWebAPIPackageMeasurements.class);
  }

 /**
  * Convert an instance of ReservationWebAPIPackageMeasurements to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

