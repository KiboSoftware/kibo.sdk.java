/*
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.appdevelopment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationAttribute;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationBehavior;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationCapability;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationCapabilityType;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationEntitlement;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationSubscription;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AppDevPackage implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_UPDATE_DATE = "updateDate";
  @SerializedName(SERIALIZED_NAME_UPDATE_DATE)
  private OffsetDateTime updateDate;

  public static final String SERIALIZED_NAME_APPLICATION_UPDATE_DATE = "applicationUpdateDate";
  @SerializedName(SERIALIZED_NAME_APPLICATION_UPDATE_DATE)
  private OffsetDateTime applicationUpdateDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_APPLICATION_NAME = "applicationName";
  @SerializedName(SERIALIZED_NAME_APPLICATION_NAME)
  private String applicationName;

  public static final String SERIALIZED_NAME_APPLICATION_TYPE_ID = "applicationTypeId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_TYPE_ID)
  private Integer applicationTypeId;

  public static final String SERIALIZED_NAME_APPLICATION_TYPE_NAME = "applicationTypeName";
  @SerializedName(SERIALIZED_NAME_APPLICATION_TYPE_NAME)
  private String applicationTypeName;

  public static final String SERIALIZED_NAME_MAJOR_VERSION = "majorVersion";
  @SerializedName(SERIALIZED_NAME_MAJOR_VERSION)
  private Integer majorVersion;

  public static final String SERIALIZED_NAME_MINOR_VERSION = "minorVersion";
  @SerializedName(SERIALIZED_NAME_MINOR_VERSION)
  private Integer minorVersion;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private Integer revision;

  public static final String SERIALIZED_NAME_SHARED_SECRET = "sharedSecret";
  @SerializedName(SERIALIZED_NAME_SHARED_SECRET)
  private String sharedSecret;

  public static final String SERIALIZED_NAME_APPLICATION_STATUS_ID = "applicationStatusId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_STATUS_ID)
  private Integer applicationStatusId;

  public static final String SERIALIZED_NAME_APPLICATION_STATUS_NAME = "applicationStatusName";
  @SerializedName(SERIALIZED_NAME_APPLICATION_STATUS_NAME)
  private String applicationStatusName;

  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_APPLICATION_DESCRIPTION = "applicationDescription";
  @SerializedName(SERIALIZED_NAME_APPLICATION_DESCRIPTION)
  private String applicationDescription;

  public static final String SERIALIZED_NAME_THEME_ENGINE_VERSION = "themeEngineVersion";
  @SerializedName(SERIALIZED_NAME_THEME_ENGINE_VERSION)
  private String themeEngineVersion;

  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_VALID_APPLICATION_STATUS_ID_LIST = "validApplicationStatusIdList";
  @SerializedName(SERIALIZED_NAME_VALID_APPLICATION_STATUS_ID_LIST)
  private List<Integer> validApplicationStatusIdList = null;

  public static final String SERIALIZED_NAME_APP_SCHEME_VERSION = "appSchemeVersion";
  @SerializedName(SERIALIZED_NAME_APP_SCHEME_VERSION)
  private Integer appSchemeVersion;

  public static final String SERIALIZED_NAME_APP_CONFIG_URL = "appConfigUrl";
  @SerializedName(SERIALIZED_NAME_APP_CONFIG_URL)
  private String appConfigUrl;

  public static final String SERIALIZED_NAME_IS_RELEASE_PACKAGE = "isReleasePackage";
  @SerializedName(SERIALIZED_NAME_IS_RELEASE_PACKAGE)
  private Boolean isReleasePackage;

  public static final String SERIALIZED_NAME_PACKAGE_NAME = "packageName";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NAME)
  private String packageName;

  public static final String SERIALIZED_NAME_PACKAGE_DESCRIPTION = "packageDescription";
  @SerializedName(SERIALIZED_NAME_PACKAGE_DESCRIPTION)
  private String packageDescription;

  public static final String SERIALIZED_NAME_DATA_NAMESPACE = "dataNamespace";
  @SerializedName(SERIALIZED_NAME_DATA_NAMESPACE)
  private String dataNamespace;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Integer applicationId;

  public static final String SERIALIZED_NAME_APPLICATION_DETAIL_ID = "applicationDetailId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_DETAIL_ID)
  private Integer applicationDetailId;

  public static final String SERIALIZED_NAME_IS_LOCKED = "isLocked";
  @SerializedName(SERIALIZED_NAME_IS_LOCKED)
  private Boolean isLocked;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_ASSET_FILE_COUNT = "assetFileCount";
  @SerializedName(SERIALIZED_NAME_ASSET_FILE_COUNT)
  private Integer assetFileCount;

  public static final String SERIALIZED_NAME_PACKAGE_GUID = "packageGuid";
  @SerializedName(SERIALIZED_NAME_PACKAGE_GUID)
  private String packageGuid;

  public static final String SERIALIZED_NAME_APPLICATION_STATUS = "applicationStatus";
  @SerializedName(SERIALIZED_NAME_APPLICATION_STATUS)
  private String applicationStatus;

  public static final String SERIALIZED_NAME_APPLICATION_BEHAVIORS = "applicationBehaviors";
  @SerializedName(SERIALIZED_NAME_APPLICATION_BEHAVIORS)
  private List<ApplicationBehavior> applicationBehaviors = null;

  public static final String SERIALIZED_NAME_APPLICATION_SUBSCRIPTIONS = "applicationSubscriptions";
  @SerializedName(SERIALIZED_NAME_APPLICATION_SUBSCRIPTIONS)
  private List<ApplicationSubscription> applicationSubscriptions = null;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITY_TYPES = "applicationCapabilityTypes";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITY_TYPES)
  private List<ApplicationCapabilityType> applicationCapabilityTypes = null;

  public static final String SERIALIZED_NAME_APPLICATION_ATTRIBUTES = "applicationAttributes";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ATTRIBUTES)
  private List<ApplicationAttribute> applicationAttributes = null;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITIES = "applicationCapabilities";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITIES)
  private List<ApplicationCapability> applicationCapabilities = null;

  public static final String SERIALIZED_NAME_APPLICATION_ENTITLEMENTS = "applicationEntitlements";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ENTITLEMENTS)
  private List<ApplicationEntitlement> applicationEntitlements = null;

  public static final String SERIALIZED_NAME_ATTRIBUTE_NAMESPACE = "attributeNamespace";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_NAMESPACE)
  private String attributeNamespace;

  public static final String SERIALIZED_NAME_HAS_APPLICATION_VERSIONS = "hasApplicationVersions";
  @SerializedName(SERIALIZED_NAME_HAS_APPLICATION_VERSIONS)
  private Boolean hasApplicationVersions;

  public static final String SERIALIZED_NAME_LEGACY_NAMESPACE = "legacyNamespace";
  @SerializedName(SERIALIZED_NAME_LEGACY_NAMESPACE)
  private String legacyNamespace;

  public static final String SERIALIZED_NAME_NAMESPACE_REGISTRY_ID = "namespaceRegistryId";
  @SerializedName(SERIALIZED_NAME_NAMESPACE_REGISTRY_ID)
  private String namespaceRegistryId;

  public static final String SERIALIZED_NAME_PUBLISHED_PARENT_THEME_ID = "publishedParentThemeId";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_PARENT_THEME_ID)
  private Integer publishedParentThemeId;

  public static final String SERIALIZED_NAME_PUBLISHED_PARENT_SEMANTIC_VERSION = "publishedParentSemanticVersion";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_PARENT_SEMANTIC_VERSION)
  private String publishedParentSemanticVersion;

  public static final String SERIALIZED_NAME_SEMANTIC_VERSION_RANGE = "semanticVersionRange";
  @SerializedName(SERIALIZED_NAME_SEMANTIC_VERSION_RANGE)
  private String semanticVersionRange;

  public static final String SERIALIZED_NAME_PARENT_THEME_NAME = "parentThemeName";
  @SerializedName(SERIALIZED_NAME_PARENT_THEME_NAME)
  private String parentThemeName;

  public static final String SERIALIZED_NAME_PARENT_THEME_APP_KEY = "parentThemeAppKey";
  @SerializedName(SERIALIZED_NAME_PARENT_THEME_APP_KEY)
  private String parentThemeAppKey;

  public static final String SERIALIZED_NAME_UPDATE_PARENT_APP_KEY = "updateParentAppKey";
  @SerializedName(SERIALIZED_NAME_UPDATE_PARENT_APP_KEY)
  private String updateParentAppKey;

  public static final String SERIALIZED_NAME_UPDATE_AVAILABLE = "updateAvailable";
  @SerializedName(SERIALIZED_NAME_UPDATE_AVAILABLE)
  private Boolean updateAvailable;

  public static final String SERIALIZED_NAME_APP_KEY = "appKey";
  @SerializedName(SERIALIZED_NAME_APP_KEY)
  private String appKey;

  public static final String SERIALIZED_NAME_UPDATE_PARENT_THEME_NAME = "updateParentThemeName";
  @SerializedName(SERIALIZED_NAME_UPDATE_PARENT_THEME_NAME)
  private String updateParentThemeName;

  public static final String SERIALIZED_NAME_UPDATE_PARENT_THEME_VERSION = "updateParentThemeVersion";
  @SerializedName(SERIALIZED_NAME_UPDATE_PARENT_THEME_VERSION)
  private String updateParentThemeVersion;

  public static final String SERIALIZED_NAME_APPLICATION_OWNER_DEV_ACCOUNT_ID = "applicationOwnerDevAccountId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_OWNER_DEV_ACCOUNT_ID)
  private Integer applicationOwnerDevAccountId;

  public AppDevPackage() {
  }

  public AppDevPackage updateDate(OffsetDateTime updateDate) {
    
    this.updateDate = updateDate;
    return this;
  }

   /**
   * 
   * @return updateDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }


  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  public AppDevPackage applicationUpdateDate(OffsetDateTime applicationUpdateDate) {
    
    this.applicationUpdateDate = applicationUpdateDate;
    return this;
  }

   /**
   * 
   * @return applicationUpdateDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getApplicationUpdateDate() {
    return applicationUpdateDate;
  }


  public void setApplicationUpdateDate(OffsetDateTime applicationUpdateDate) {
    this.applicationUpdateDate = applicationUpdateDate;
  }


  public AppDevPackage id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public AppDevPackage applicationName(String applicationName) {
    
    this.applicationName = applicationName;
    return this;
  }

   /**
   * 
   * @return applicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationName() {
    return applicationName;
  }


  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }


  public AppDevPackage applicationTypeId(Integer applicationTypeId) {
    
    this.applicationTypeId = applicationTypeId;
    return this;
  }

   /**
   * 
   * @return applicationTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationTypeId() {
    return applicationTypeId;
  }


  public void setApplicationTypeId(Integer applicationTypeId) {
    this.applicationTypeId = applicationTypeId;
  }


  public AppDevPackage applicationTypeName(String applicationTypeName) {
    
    this.applicationTypeName = applicationTypeName;
    return this;
  }

   /**
   * 
   * @return applicationTypeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationTypeName() {
    return applicationTypeName;
  }


  public void setApplicationTypeName(String applicationTypeName) {
    this.applicationTypeName = applicationTypeName;
  }


  public AppDevPackage majorVersion(Integer majorVersion) {
    
    this.majorVersion = majorVersion;
    return this;
  }

   /**
   * 
   * @return majorVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMajorVersion() {
    return majorVersion;
  }


  public void setMajorVersion(Integer majorVersion) {
    this.majorVersion = majorVersion;
  }


  public AppDevPackage minorVersion(Integer minorVersion) {
    
    this.minorVersion = minorVersion;
    return this;
  }

   /**
   * 
   * @return minorVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMinorVersion() {
    return minorVersion;
  }


  public void setMinorVersion(Integer minorVersion) {
    this.minorVersion = minorVersion;
  }


  public AppDevPackage revision(Integer revision) {
    
    this.revision = revision;
    return this;
  }

   /**
   * 
   * @return revision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRevision() {
    return revision;
  }


  public void setRevision(Integer revision) {
    this.revision = revision;
  }


  public AppDevPackage sharedSecret(String sharedSecret) {
    
    this.sharedSecret = sharedSecret;
    return this;
  }

   /**
   * 
   * @return sharedSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSharedSecret() {
    return sharedSecret;
  }


  public void setSharedSecret(String sharedSecret) {
    this.sharedSecret = sharedSecret;
  }


  public AppDevPackage applicationStatusId(Integer applicationStatusId) {
    
    this.applicationStatusId = applicationStatusId;
    return this;
  }

   /**
   * 
   * @return applicationStatusId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationStatusId() {
    return applicationStatusId;
  }


  public void setApplicationStatusId(Integer applicationStatusId) {
    this.applicationStatusId = applicationStatusId;
  }


  public AppDevPackage applicationStatusName(String applicationStatusName) {
    
    this.applicationStatusName = applicationStatusName;
    return this;
  }

   /**
   * 
   * @return applicationStatusName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationStatusName() {
    return applicationStatusName;
  }


  public void setApplicationStatusName(String applicationStatusName) {
    this.applicationStatusName = applicationStatusName;
  }


  public AppDevPackage apiVersion(String apiVersion) {
    
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * 
   * @return apiVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApiVersion() {
    return apiVersion;
  }


  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public AppDevPackage applicationDescription(String applicationDescription) {
    
    this.applicationDescription = applicationDescription;
    return this;
  }

   /**
   * 
   * @return applicationDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationDescription() {
    return applicationDescription;
  }


  public void setApplicationDescription(String applicationDescription) {
    this.applicationDescription = applicationDescription;
  }


  public AppDevPackage themeEngineVersion(String themeEngineVersion) {
    
    this.themeEngineVersion = themeEngineVersion;
    return this;
  }

   /**
   * 
   * @return themeEngineVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getThemeEngineVersion() {
    return themeEngineVersion;
  }


  public void setThemeEngineVersion(String themeEngineVersion) {
    this.themeEngineVersion = themeEngineVersion;
  }


  public AppDevPackage namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * 
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public AppDevPackage validApplicationStatusIdList(List<Integer> validApplicationStatusIdList) {
    
    this.validApplicationStatusIdList = validApplicationStatusIdList;
    return this;
  }

  public AppDevPackage addValidApplicationStatusIdListItem(Integer validApplicationStatusIdListItem) {
    if (this.validApplicationStatusIdList == null) {
      this.validApplicationStatusIdList = new ArrayList<>();
    }
    this.validApplicationStatusIdList.add(validApplicationStatusIdListItem);
    return this;
  }

   /**
   * List of Statuses that the application can move to during the application lifecycle.  This is based on what the current value of the ApplicatinStatusId is.
   * @return validApplicationStatusIdList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of Statuses that the application can move to during the application lifecycle.  This is based on what the current value of the ApplicatinStatusId is.")

  public List<Integer> getValidApplicationStatusIdList() {
    return validApplicationStatusIdList;
  }


  public void setValidApplicationStatusIdList(List<Integer> validApplicationStatusIdList) {
    this.validApplicationStatusIdList = validApplicationStatusIdList;
  }


  public AppDevPackage appSchemeVersion(Integer appSchemeVersion) {
    
    this.appSchemeVersion = appSchemeVersion;
    return this;
  }

   /**
   * 
   * @return appSchemeVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAppSchemeVersion() {
    return appSchemeVersion;
  }


  public void setAppSchemeVersion(Integer appSchemeVersion) {
    this.appSchemeVersion = appSchemeVersion;
  }


  public AppDevPackage appConfigUrl(String appConfigUrl) {
    
    this.appConfigUrl = appConfigUrl;
    return this;
  }

   /**
   * This will be used by the 3rd party developers to set a URL the intalled   applications can call from the Tenant installation/
   * @return appConfigUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This will be used by the 3rd party developers to set a URL the intalled   applications can call from the Tenant installation/")

  public String getAppConfigUrl() {
    return appConfigUrl;
  }


  public void setAppConfigUrl(String appConfigUrl) {
    this.appConfigUrl = appConfigUrl;
  }


  public AppDevPackage isReleasePackage(Boolean isReleasePackage) {
    
    this.isReleasePackage = isReleasePackage;
    return this;
  }

   /**
   * 
   * @return isReleasePackage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsReleasePackage() {
    return isReleasePackage;
  }


  public void setIsReleasePackage(Boolean isReleasePackage) {
    this.isReleasePackage = isReleasePackage;
  }


  public AppDevPackage packageName(String packageName) {
    
    this.packageName = packageName;
    return this;
  }

   /**
   * 
   * @return packageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackageName() {
    return packageName;
  }


  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }


  public AppDevPackage packageDescription(String packageDescription) {
    
    this.packageDescription = packageDescription;
    return this;
  }

   /**
   * 
   * @return packageDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackageDescription() {
    return packageDescription;
  }


  public void setPackageDescription(String packageDescription) {
    this.packageDescription = packageDescription;
  }


  public AppDevPackage dataNamespace(String dataNamespace) {
    
    this.dataNamespace = dataNamespace;
    return this;
  }

   /**
   * 
   * @return dataNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDataNamespace() {
    return dataNamespace;
  }


  public void setDataNamespace(String dataNamespace) {
    this.dataNamespace = dataNamespace;
  }


  public AppDevPackage userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * 
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public AppDevPackage appId(String appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * 
   * @return appId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  public AppDevPackage applicationId(Integer applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * 
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }


  public AppDevPackage applicationDetailId(Integer applicationDetailId) {
    
    this.applicationDetailId = applicationDetailId;
    return this;
  }

   /**
   * 
   * @return applicationDetailId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationDetailId() {
    return applicationDetailId;
  }


  public void setApplicationDetailId(Integer applicationDetailId) {
    this.applicationDetailId = applicationDetailId;
  }


  public AppDevPackage isLocked(Boolean isLocked) {
    
    this.isLocked = isLocked;
    return this;
  }

   /**
   * 
   * @return isLocked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsLocked() {
    return isLocked;
  }


  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }


  public AppDevPackage isDeleted(Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * 
   * @return isDeleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public AppDevPackage assetFileCount(Integer assetFileCount) {
    
    this.assetFileCount = assetFileCount;
    return this;
  }

   /**
   * 
   * @return assetFileCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAssetFileCount() {
    return assetFileCount;
  }


  public void setAssetFileCount(Integer assetFileCount) {
    this.assetFileCount = assetFileCount;
  }


  public AppDevPackage packageGuid(String packageGuid) {
    
    this.packageGuid = packageGuid;
    return this;
  }

   /**
   * 
   * @return packageGuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackageGuid() {
    return packageGuid;
  }


  public void setPackageGuid(String packageGuid) {
    this.packageGuid = packageGuid;
  }


  public AppDevPackage applicationStatus(String applicationStatus) {
    
    this.applicationStatus = applicationStatus;
    return this;
  }

   /**
   * 
   * @return applicationStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationStatus() {
    return applicationStatus;
  }


  public void setApplicationStatus(String applicationStatus) {
    this.applicationStatus = applicationStatus;
  }


  public AppDevPackage applicationBehaviors(List<ApplicationBehavior> applicationBehaviors) {
    
    this.applicationBehaviors = applicationBehaviors;
    return this;
  }

  public AppDevPackage addApplicationBehaviorsItem(ApplicationBehavior applicationBehaviorsItem) {
    if (this.applicationBehaviors == null) {
      this.applicationBehaviors = new ArrayList<>();
    }
    this.applicationBehaviors.add(applicationBehaviorsItem);
    return this;
  }

   /**
   * List of Application Behaviors that apply to this version of the application.
   * @return applicationBehaviors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of Application Behaviors that apply to this version of the application.")

  public List<ApplicationBehavior> getApplicationBehaviors() {
    return applicationBehaviors;
  }


  public void setApplicationBehaviors(List<ApplicationBehavior> applicationBehaviors) {
    this.applicationBehaviors = applicationBehaviors;
  }


  public AppDevPackage applicationSubscriptions(List<ApplicationSubscription> applicationSubscriptions) {
    
    this.applicationSubscriptions = applicationSubscriptions;
    return this;
  }

  public AppDevPackage addApplicationSubscriptionsItem(ApplicationSubscription applicationSubscriptionsItem) {
    if (this.applicationSubscriptions == null) {
      this.applicationSubscriptions = new ArrayList<>();
    }
    this.applicationSubscriptions.add(applicationSubscriptionsItem);
    return this;
  }

   /**
   * 
   * @return applicationSubscriptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationSubscription> getApplicationSubscriptions() {
    return applicationSubscriptions;
  }


  public void setApplicationSubscriptions(List<ApplicationSubscription> applicationSubscriptions) {
    this.applicationSubscriptions = applicationSubscriptions;
  }


  public AppDevPackage applicationCapabilityTypes(List<ApplicationCapabilityType> applicationCapabilityTypes) {
    
    this.applicationCapabilityTypes = applicationCapabilityTypes;
    return this;
  }

  public AppDevPackage addApplicationCapabilityTypesItem(ApplicationCapabilityType applicationCapabilityTypesItem) {
    if (this.applicationCapabilityTypes == null) {
      this.applicationCapabilityTypes = new ArrayList<>();
    }
    this.applicationCapabilityTypes.add(applicationCapabilityTypesItem);
    return this;
  }

   /**
   * 
   * @return applicationCapabilityTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationCapabilityType> getApplicationCapabilityTypes() {
    return applicationCapabilityTypes;
  }


  public void setApplicationCapabilityTypes(List<ApplicationCapabilityType> applicationCapabilityTypes) {
    this.applicationCapabilityTypes = applicationCapabilityTypes;
  }


  public AppDevPackage applicationAttributes(List<ApplicationAttribute> applicationAttributes) {
    
    this.applicationAttributes = applicationAttributes;
    return this;
  }

  public AppDevPackage addApplicationAttributesItem(ApplicationAttribute applicationAttributesItem) {
    if (this.applicationAttributes == null) {
      this.applicationAttributes = new ArrayList<>();
    }
    this.applicationAttributes.add(applicationAttributesItem);
    return this;
  }

   /**
   * 
   * @return applicationAttributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationAttribute> getApplicationAttributes() {
    return applicationAttributes;
  }


  public void setApplicationAttributes(List<ApplicationAttribute> applicationAttributes) {
    this.applicationAttributes = applicationAttributes;
  }


  public AppDevPackage applicationCapabilities(List<ApplicationCapability> applicationCapabilities) {
    
    this.applicationCapabilities = applicationCapabilities;
    return this;
  }

  public AppDevPackage addApplicationCapabilitiesItem(ApplicationCapability applicationCapabilitiesItem) {
    if (this.applicationCapabilities == null) {
      this.applicationCapabilities = new ArrayList<>();
    }
    this.applicationCapabilities.add(applicationCapabilitiesItem);
    return this;
  }

   /**
   * 
   * @return applicationCapabilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationCapability> getApplicationCapabilities() {
    return applicationCapabilities;
  }


  public void setApplicationCapabilities(List<ApplicationCapability> applicationCapabilities) {
    this.applicationCapabilities = applicationCapabilities;
  }


  public AppDevPackage applicationEntitlements(List<ApplicationEntitlement> applicationEntitlements) {
    
    this.applicationEntitlements = applicationEntitlements;
    return this;
  }

  public AppDevPackage addApplicationEntitlementsItem(ApplicationEntitlement applicationEntitlementsItem) {
    if (this.applicationEntitlements == null) {
      this.applicationEntitlements = new ArrayList<>();
    }
    this.applicationEntitlements.add(applicationEntitlementsItem);
    return this;
  }

   /**
   * 
   * @return applicationEntitlements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationEntitlement> getApplicationEntitlements() {
    return applicationEntitlements;
  }


  public void setApplicationEntitlements(List<ApplicationEntitlement> applicationEntitlements) {
    this.applicationEntitlements = applicationEntitlements;
  }


  public AppDevPackage attributeNamespace(String attributeNamespace) {
    
    this.attributeNamespace = attributeNamespace;
    return this;
  }

   /**
   * 
   * @return attributeNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAttributeNamespace() {
    return attributeNamespace;
  }


  public void setAttributeNamespace(String attributeNamespace) {
    this.attributeNamespace = attributeNamespace;
  }


  public AppDevPackage hasApplicationVersions(Boolean hasApplicationVersions) {
    
    this.hasApplicationVersions = hasApplicationVersions;
    return this;
  }

   /**
   * 
   * @return hasApplicationVersions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasApplicationVersions() {
    return hasApplicationVersions;
  }


  public void setHasApplicationVersions(Boolean hasApplicationVersions) {
    this.hasApplicationVersions = hasApplicationVersions;
  }


  public AppDevPackage legacyNamespace(String legacyNamespace) {
    
    this.legacyNamespace = legacyNamespace;
    return this;
  }

   /**
   * 
   * @return legacyNamespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLegacyNamespace() {
    return legacyNamespace;
  }


  public void setLegacyNamespace(String legacyNamespace) {
    this.legacyNamespace = legacyNamespace;
  }


  public AppDevPackage namespaceRegistryId(String namespaceRegistryId) {
    
    this.namespaceRegistryId = namespaceRegistryId;
    return this;
  }

   /**
   * 
   * @return namespaceRegistryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespaceRegistryId() {
    return namespaceRegistryId;
  }


  public void setNamespaceRegistryId(String namespaceRegistryId) {
    this.namespaceRegistryId = namespaceRegistryId;
  }


  public AppDevPackage publishedParentThemeId(Integer publishedParentThemeId) {
    
    this.publishedParentThemeId = publishedParentThemeId;
    return this;
  }

   /**
   * 
   * @return publishedParentThemeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPublishedParentThemeId() {
    return publishedParentThemeId;
  }


  public void setPublishedParentThemeId(Integer publishedParentThemeId) {
    this.publishedParentThemeId = publishedParentThemeId;
  }


  public AppDevPackage publishedParentSemanticVersion(String publishedParentSemanticVersion) {
    
    this.publishedParentSemanticVersion = publishedParentSemanticVersion;
    return this;
  }

   /**
   * 
   * @return publishedParentSemanticVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPublishedParentSemanticVersion() {
    return publishedParentSemanticVersion;
  }


  public void setPublishedParentSemanticVersion(String publishedParentSemanticVersion) {
    this.publishedParentSemanticVersion = publishedParentSemanticVersion;
  }


  public AppDevPackage semanticVersionRange(String semanticVersionRange) {
    
    this.semanticVersionRange = semanticVersionRange;
    return this;
  }

   /**
   * 
   * @return semanticVersionRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSemanticVersionRange() {
    return semanticVersionRange;
  }


  public void setSemanticVersionRange(String semanticVersionRange) {
    this.semanticVersionRange = semanticVersionRange;
  }


  public AppDevPackage parentThemeName(String parentThemeName) {
    
    this.parentThemeName = parentThemeName;
    return this;
  }

   /**
   * 
   * @return parentThemeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParentThemeName() {
    return parentThemeName;
  }


  public void setParentThemeName(String parentThemeName) {
    this.parentThemeName = parentThemeName;
  }


  public AppDevPackage parentThemeAppKey(String parentThemeAppKey) {
    
    this.parentThemeAppKey = parentThemeAppKey;
    return this;
  }

   /**
   * The parent theme AppKey if this is a theme and   the theme extends a valid, published theme.
   * @return parentThemeAppKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The parent theme AppKey if this is a theme and   the theme extends a valid, published theme.")

  public String getParentThemeAppKey() {
    return parentThemeAppKey;
  }


  public void setParentThemeAppKey(String parentThemeAppKey) {
    this.parentThemeAppKey = parentThemeAppKey;
  }


  public AppDevPackage updateParentAppKey(String updateParentAppKey) {
    
    this.updateParentAppKey = updateParentAppKey;
    return this;
  }

   /**
   * The AppKey is a runtime type.  This only applies for themes that inherit from another theme.  It shows the most current update available.
   * @return updateParentAppKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The AppKey is a runtime type.  This only applies for themes that inherit from another theme.  It shows the most current update available.")

  public String getUpdateParentAppKey() {
    return updateParentAppKey;
  }


  public void setUpdateParentAppKey(String updateParentAppKey) {
    this.updateParentAppKey = updateParentAppKey;
  }


  public AppDevPackage updateAvailable(Boolean updateAvailable) {
    
    this.updateAvailable = updateAvailable;
    return this;
  }

   /**
   * Whether or not there&#39;s a theme update.
   * @return updateAvailable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether or not there's a theme update.")

  public Boolean getUpdateAvailable() {
    return updateAvailable;
  }


  public void setUpdateAvailable(Boolean updateAvailable) {
    this.updateAvailable = updateAvailable;
  }


  public AppDevPackage appKey(String appKey) {
    
    this.appKey = appKey;
    return this;
  }

   /**
   * App Key for the package in question.
   * @return appKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "App Key for the package in question.")

  public String getAppKey() {
    return appKey;
  }


  public void setAppKey(String appKey) {
    this.appKey = appKey;
  }


  public AppDevPackage updateParentThemeName(String updateParentThemeName) {
    
    this.updateParentThemeName = updateParentThemeName;
    return this;
  }

   /**
   * This only applies for themes that inherit from another theme.  It shows the name of the most current update available.
   * @return updateParentThemeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This only applies for themes that inherit from another theme.  It shows the name of the most current update available.")

  public String getUpdateParentThemeName() {
    return updateParentThemeName;
  }


  public void setUpdateParentThemeName(String updateParentThemeName) {
    this.updateParentThemeName = updateParentThemeName;
  }


  public AppDevPackage updateParentThemeVersion(String updateParentThemeVersion) {
    
    this.updateParentThemeVersion = updateParentThemeVersion;
    return this;
  }

   /**
   * This only applies for themes that inherit from another theme.  It shows the version of the most current update available.
   * @return updateParentThemeVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This only applies for themes that inherit from another theme.  It shows the version of the most current update available.")

  public String getUpdateParentThemeVersion() {
    return updateParentThemeVersion;
  }


  public void setUpdateParentThemeVersion(String updateParentThemeVersion) {
    this.updateParentThemeVersion = updateParentThemeVersion;
  }


  public AppDevPackage applicationOwnerDevAccountId(Integer applicationOwnerDevAccountId) {
    
    this.applicationOwnerDevAccountId = applicationOwnerDevAccountId;
    return this;
  }

   /**
   * This is the DevAccountId that owns the application
   * @return applicationOwnerDevAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This is the DevAccountId that owns the application")

  public Integer getApplicationOwnerDevAccountId() {
    return applicationOwnerDevAccountId;
  }


  public void setApplicationOwnerDevAccountId(Integer applicationOwnerDevAccountId) {
    this.applicationOwnerDevAccountId = applicationOwnerDevAccountId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AppDevPackage appDevPackage = (AppDevPackage) o;
    return Objects.equals(this.updateDate, appDevPackage.updateDate) &&
        Objects.equals(this.applicationUpdateDate, appDevPackage.applicationUpdateDate) &&
        Objects.equals(this.id, appDevPackage.id) &&
        Objects.equals(this.applicationName, appDevPackage.applicationName) &&
        Objects.equals(this.applicationTypeId, appDevPackage.applicationTypeId) &&
        Objects.equals(this.applicationTypeName, appDevPackage.applicationTypeName) &&
        Objects.equals(this.majorVersion, appDevPackage.majorVersion) &&
        Objects.equals(this.minorVersion, appDevPackage.minorVersion) &&
        Objects.equals(this.revision, appDevPackage.revision) &&
        Objects.equals(this.sharedSecret, appDevPackage.sharedSecret) &&
        Objects.equals(this.applicationStatusId, appDevPackage.applicationStatusId) &&
        Objects.equals(this.applicationStatusName, appDevPackage.applicationStatusName) &&
        Objects.equals(this.apiVersion, appDevPackage.apiVersion) &&
        Objects.equals(this.applicationDescription, appDevPackage.applicationDescription) &&
        Objects.equals(this.themeEngineVersion, appDevPackage.themeEngineVersion) &&
        Objects.equals(this.namespace, appDevPackage.namespace) &&
        Objects.equals(this.validApplicationStatusIdList, appDevPackage.validApplicationStatusIdList) &&
        Objects.equals(this.appSchemeVersion, appDevPackage.appSchemeVersion) &&
        Objects.equals(this.appConfigUrl, appDevPackage.appConfigUrl) &&
        Objects.equals(this.isReleasePackage, appDevPackage.isReleasePackage) &&
        Objects.equals(this.packageName, appDevPackage.packageName) &&
        Objects.equals(this.packageDescription, appDevPackage.packageDescription) &&
        Objects.equals(this.dataNamespace, appDevPackage.dataNamespace) &&
        Objects.equals(this.userId, appDevPackage.userId) &&
        Objects.equals(this.appId, appDevPackage.appId) &&
        Objects.equals(this.applicationId, appDevPackage.applicationId) &&
        Objects.equals(this.applicationDetailId, appDevPackage.applicationDetailId) &&
        Objects.equals(this.isLocked, appDevPackage.isLocked) &&
        Objects.equals(this.isDeleted, appDevPackage.isDeleted) &&
        Objects.equals(this.assetFileCount, appDevPackage.assetFileCount) &&
        Objects.equals(this.packageGuid, appDevPackage.packageGuid) &&
        Objects.equals(this.applicationStatus, appDevPackage.applicationStatus) &&
        Objects.equals(this.applicationBehaviors, appDevPackage.applicationBehaviors) &&
        Objects.equals(this.applicationSubscriptions, appDevPackage.applicationSubscriptions) &&
        Objects.equals(this.applicationCapabilityTypes, appDevPackage.applicationCapabilityTypes) &&
        Objects.equals(this.applicationAttributes, appDevPackage.applicationAttributes) &&
        Objects.equals(this.applicationCapabilities, appDevPackage.applicationCapabilities) &&
        Objects.equals(this.applicationEntitlements, appDevPackage.applicationEntitlements) &&
        Objects.equals(this.attributeNamespace, appDevPackage.attributeNamespace) &&
        Objects.equals(this.hasApplicationVersions, appDevPackage.hasApplicationVersions) &&
        Objects.equals(this.legacyNamespace, appDevPackage.legacyNamespace) &&
        Objects.equals(this.namespaceRegistryId, appDevPackage.namespaceRegistryId) &&
        Objects.equals(this.publishedParentThemeId, appDevPackage.publishedParentThemeId) &&
        Objects.equals(this.publishedParentSemanticVersion, appDevPackage.publishedParentSemanticVersion) &&
        Objects.equals(this.semanticVersionRange, appDevPackage.semanticVersionRange) &&
        Objects.equals(this.parentThemeName, appDevPackage.parentThemeName) &&
        Objects.equals(this.parentThemeAppKey, appDevPackage.parentThemeAppKey) &&
        Objects.equals(this.updateParentAppKey, appDevPackage.updateParentAppKey) &&
        Objects.equals(this.updateAvailable, appDevPackage.updateAvailable) &&
        Objects.equals(this.appKey, appDevPackage.appKey) &&
        Objects.equals(this.updateParentThemeName, appDevPackage.updateParentThemeName) &&
        Objects.equals(this.updateParentThemeVersion, appDevPackage.updateParentThemeVersion) &&
        Objects.equals(this.applicationOwnerDevAccountId, appDevPackage.applicationOwnerDevAccountId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateDate, applicationUpdateDate, id, applicationName, applicationTypeId, applicationTypeName, majorVersion, minorVersion, revision, sharedSecret, applicationStatusId, applicationStatusName, apiVersion, applicationDescription, themeEngineVersion, namespace, validApplicationStatusIdList, appSchemeVersion, appConfigUrl, isReleasePackage, packageName, packageDescription, dataNamespace, userId, appId, applicationId, applicationDetailId, isLocked, isDeleted, assetFileCount, packageGuid, applicationStatus, applicationBehaviors, applicationSubscriptions, applicationCapabilityTypes, applicationAttributes, applicationCapabilities, applicationEntitlements, attributeNamespace, hasApplicationVersions, legacyNamespace, namespaceRegistryId, publishedParentThemeId, publishedParentSemanticVersion, semanticVersionRange, parentThemeName, parentThemeAppKey, updateParentAppKey, updateAvailable, appKey, updateParentThemeName, updateParentThemeVersion, applicationOwnerDevAccountId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AppDevPackage {\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    applicationUpdateDate: ").append(toIndentedString(applicationUpdateDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    applicationTypeId: ").append(toIndentedString(applicationTypeId)).append("\n");
    sb.append("    applicationTypeName: ").append(toIndentedString(applicationTypeName)).append("\n");
    sb.append("    majorVersion: ").append(toIndentedString(majorVersion)).append("\n");
    sb.append("    minorVersion: ").append(toIndentedString(minorVersion)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    sharedSecret: ").append(toIndentedString(sharedSecret)).append("\n");
    sb.append("    applicationStatusId: ").append(toIndentedString(applicationStatusId)).append("\n");
    sb.append("    applicationStatusName: ").append(toIndentedString(applicationStatusName)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    applicationDescription: ").append(toIndentedString(applicationDescription)).append("\n");
    sb.append("    themeEngineVersion: ").append(toIndentedString(themeEngineVersion)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    validApplicationStatusIdList: ").append(toIndentedString(validApplicationStatusIdList)).append("\n");
    sb.append("    appSchemeVersion: ").append(toIndentedString(appSchemeVersion)).append("\n");
    sb.append("    appConfigUrl: ").append(toIndentedString(appConfigUrl)).append("\n");
    sb.append("    isReleasePackage: ").append(toIndentedString(isReleasePackage)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    packageDescription: ").append(toIndentedString(packageDescription)).append("\n");
    sb.append("    dataNamespace: ").append(toIndentedString(dataNamespace)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    applicationDetailId: ").append(toIndentedString(applicationDetailId)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    assetFileCount: ").append(toIndentedString(assetFileCount)).append("\n");
    sb.append("    packageGuid: ").append(toIndentedString(packageGuid)).append("\n");
    sb.append("    applicationStatus: ").append(toIndentedString(applicationStatus)).append("\n");
    sb.append("    applicationBehaviors: ").append(toIndentedString(applicationBehaviors)).append("\n");
    sb.append("    applicationSubscriptions: ").append(toIndentedString(applicationSubscriptions)).append("\n");
    sb.append("    applicationCapabilityTypes: ").append(toIndentedString(applicationCapabilityTypes)).append("\n");
    sb.append("    applicationAttributes: ").append(toIndentedString(applicationAttributes)).append("\n");
    sb.append("    applicationCapabilities: ").append(toIndentedString(applicationCapabilities)).append("\n");
    sb.append("    applicationEntitlements: ").append(toIndentedString(applicationEntitlements)).append("\n");
    sb.append("    attributeNamespace: ").append(toIndentedString(attributeNamespace)).append("\n");
    sb.append("    hasApplicationVersions: ").append(toIndentedString(hasApplicationVersions)).append("\n");
    sb.append("    legacyNamespace: ").append(toIndentedString(legacyNamespace)).append("\n");
    sb.append("    namespaceRegistryId: ").append(toIndentedString(namespaceRegistryId)).append("\n");
    sb.append("    publishedParentThemeId: ").append(toIndentedString(publishedParentThemeId)).append("\n");
    sb.append("    publishedParentSemanticVersion: ").append(toIndentedString(publishedParentSemanticVersion)).append("\n");
    sb.append("    semanticVersionRange: ").append(toIndentedString(semanticVersionRange)).append("\n");
    sb.append("    parentThemeName: ").append(toIndentedString(parentThemeName)).append("\n");
    sb.append("    parentThemeAppKey: ").append(toIndentedString(parentThemeAppKey)).append("\n");
    sb.append("    updateParentAppKey: ").append(toIndentedString(updateParentAppKey)).append("\n");
    sb.append("    updateAvailable: ").append(toIndentedString(updateAvailable)).append("\n");
    sb.append("    appKey: ").append(toIndentedString(appKey)).append("\n");
    sb.append("    updateParentThemeName: ").append(toIndentedString(updateParentThemeName)).append("\n");
    sb.append("    updateParentThemeVersion: ").append(toIndentedString(updateParentThemeVersion)).append("\n");
    sb.append("    applicationOwnerDevAccountId: ").append(toIndentedString(applicationOwnerDevAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("updateDate");
    openapiFields.add("applicationUpdateDate");
    openapiFields.add("id");
    openapiFields.add("applicationName");
    openapiFields.add("applicationTypeId");
    openapiFields.add("applicationTypeName");
    openapiFields.add("majorVersion");
    openapiFields.add("minorVersion");
    openapiFields.add("revision");
    openapiFields.add("sharedSecret");
    openapiFields.add("applicationStatusId");
    openapiFields.add("applicationStatusName");
    openapiFields.add("apiVersion");
    openapiFields.add("applicationDescription");
    openapiFields.add("themeEngineVersion");
    openapiFields.add("namespace");
    openapiFields.add("validApplicationStatusIdList");
    openapiFields.add("appSchemeVersion");
    openapiFields.add("appConfigUrl");
    openapiFields.add("isReleasePackage");
    openapiFields.add("packageName");
    openapiFields.add("packageDescription");
    openapiFields.add("dataNamespace");
    openapiFields.add("userId");
    openapiFields.add("appId");
    openapiFields.add("applicationId");
    openapiFields.add("applicationDetailId");
    openapiFields.add("isLocked");
    openapiFields.add("isDeleted");
    openapiFields.add("assetFileCount");
    openapiFields.add("packageGuid");
    openapiFields.add("applicationStatus");
    openapiFields.add("applicationBehaviors");
    openapiFields.add("applicationSubscriptions");
    openapiFields.add("applicationCapabilityTypes");
    openapiFields.add("applicationAttributes");
    openapiFields.add("applicationCapabilities");
    openapiFields.add("applicationEntitlements");
    openapiFields.add("attributeNamespace");
    openapiFields.add("hasApplicationVersions");
    openapiFields.add("legacyNamespace");
    openapiFields.add("namespaceRegistryId");
    openapiFields.add("publishedParentThemeId");
    openapiFields.add("publishedParentSemanticVersion");
    openapiFields.add("semanticVersionRange");
    openapiFields.add("parentThemeName");
    openapiFields.add("parentThemeAppKey");
    openapiFields.add("updateParentAppKey");
    openapiFields.add("updateAvailable");
    openapiFields.add("appKey");
    openapiFields.add("updateParentThemeName");
    openapiFields.add("updateParentThemeVersion");
    openapiFields.add("applicationOwnerDevAccountId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AppDevPackage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!AppDevPackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AppDevPackage is not found in the empty JSON string", AppDevPackage.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!AppDevPackage.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AppDevPackage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("applicationName") != null && !jsonObj.get("applicationName").isJsonNull()) && !jsonObj.get("applicationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationName").toString()));
      }
      if ((jsonObj.get("applicationTypeName") != null && !jsonObj.get("applicationTypeName").isJsonNull()) && !jsonObj.get("applicationTypeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationTypeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationTypeName").toString()));
      }
      if ((jsonObj.get("sharedSecret") != null && !jsonObj.get("sharedSecret").isJsonNull()) && !jsonObj.get("sharedSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sharedSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sharedSecret").toString()));
      }
      if ((jsonObj.get("applicationStatusName") != null && !jsonObj.get("applicationStatusName").isJsonNull()) && !jsonObj.get("applicationStatusName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationStatusName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationStatusName").toString()));
      }
      if ((jsonObj.get("apiVersion") != null && !jsonObj.get("apiVersion").isJsonNull()) && !jsonObj.get("apiVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiVersion").toString()));
      }
      if ((jsonObj.get("applicationDescription") != null && !jsonObj.get("applicationDescription").isJsonNull()) && !jsonObj.get("applicationDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationDescription").toString()));
      }
      if ((jsonObj.get("themeEngineVersion") != null && !jsonObj.get("themeEngineVersion").isJsonNull()) && !jsonObj.get("themeEngineVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `themeEngineVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("themeEngineVersion").toString()));
      }
      if ((jsonObj.get("namespace") != null && !jsonObj.get("namespace").isJsonNull()) && !jsonObj.get("namespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namespace").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("validApplicationStatusIdList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `validApplicationStatusIdList` to be an array in the JSON string but got `%s`", jsonObj.get("validApplicationStatusIdList").toString()));
      }
      if ((jsonObj.get("appConfigUrl") != null && !jsonObj.get("appConfigUrl").isJsonNull()) && !jsonObj.get("appConfigUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appConfigUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appConfigUrl").toString()));
      }
      if ((jsonObj.get("packageName") != null && !jsonObj.get("packageName").isJsonNull()) && !jsonObj.get("packageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageName").toString()));
      }
      if ((jsonObj.get("packageDescription") != null && !jsonObj.get("packageDescription").isJsonNull()) && !jsonObj.get("packageDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageDescription").toString()));
      }
      if ((jsonObj.get("dataNamespace") != null && !jsonObj.get("dataNamespace").isJsonNull()) && !jsonObj.get("dataNamespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataNamespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataNamespace").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      if ((jsonObj.get("packageGuid") != null && !jsonObj.get("packageGuid").isJsonNull()) && !jsonObj.get("packageGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageGuid").toString()));
      }
      if ((jsonObj.get("applicationStatus") != null && !jsonObj.get("applicationStatus").isJsonNull()) && !jsonObj.get("applicationStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationStatus").toString()));
      }
      if (jsonObj.get("applicationBehaviors") != null && !jsonObj.get("applicationBehaviors").isJsonNull()) {
        JsonArray jsonArrayapplicationBehaviors = jsonObj.getAsJsonArray("applicationBehaviors");
        if (jsonArrayapplicationBehaviors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationBehaviors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationBehaviors` to be an array in the JSON string but got `%s`", jsonObj.get("applicationBehaviors").toString()));
          }

          // validate the optional field `applicationBehaviors` (array)
          for (int i = 0; i < jsonArrayapplicationBehaviors.size(); i++) {
            ApplicationBehavior.validateJsonObject(jsonArrayapplicationBehaviors.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("applicationSubscriptions") != null && !jsonObj.get("applicationSubscriptions").isJsonNull()) {
        JsonArray jsonArrayapplicationSubscriptions = jsonObj.getAsJsonArray("applicationSubscriptions");
        if (jsonArrayapplicationSubscriptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationSubscriptions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationSubscriptions` to be an array in the JSON string but got `%s`", jsonObj.get("applicationSubscriptions").toString()));
          }

          // validate the optional field `applicationSubscriptions` (array)
          for (int i = 0; i < jsonArrayapplicationSubscriptions.size(); i++) {
            ApplicationSubscription.validateJsonObject(jsonArrayapplicationSubscriptions.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("applicationCapabilityTypes") != null && !jsonObj.get("applicationCapabilityTypes").isJsonNull()) {
        JsonArray jsonArrayapplicationCapabilityTypes = jsonObj.getAsJsonArray("applicationCapabilityTypes");
        if (jsonArrayapplicationCapabilityTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationCapabilityTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationCapabilityTypes` to be an array in the JSON string but got `%s`", jsonObj.get("applicationCapabilityTypes").toString()));
          }

          // validate the optional field `applicationCapabilityTypes` (array)
          for (int i = 0; i < jsonArrayapplicationCapabilityTypes.size(); i++) {
            ApplicationCapabilityType.validateJsonObject(jsonArrayapplicationCapabilityTypes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("applicationAttributes") != null && !jsonObj.get("applicationAttributes").isJsonNull()) {
        JsonArray jsonArrayapplicationAttributes = jsonObj.getAsJsonArray("applicationAttributes");
        if (jsonArrayapplicationAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("applicationAttributes").toString()));
          }

          // validate the optional field `applicationAttributes` (array)
          for (int i = 0; i < jsonArrayapplicationAttributes.size(); i++) {
            ApplicationAttribute.validateJsonObject(jsonArrayapplicationAttributes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("applicationCapabilities") != null && !jsonObj.get("applicationCapabilities").isJsonNull()) {
        JsonArray jsonArrayapplicationCapabilities = jsonObj.getAsJsonArray("applicationCapabilities");
        if (jsonArrayapplicationCapabilities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationCapabilities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationCapabilities` to be an array in the JSON string but got `%s`", jsonObj.get("applicationCapabilities").toString()));
          }

          // validate the optional field `applicationCapabilities` (array)
          for (int i = 0; i < jsonArrayapplicationCapabilities.size(); i++) {
            ApplicationCapability.validateJsonObject(jsonArrayapplicationCapabilities.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("applicationEntitlements") != null && !jsonObj.get("applicationEntitlements").isJsonNull()) {
        JsonArray jsonArrayapplicationEntitlements = jsonObj.getAsJsonArray("applicationEntitlements");
        if (jsonArrayapplicationEntitlements != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationEntitlements").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationEntitlements` to be an array in the JSON string but got `%s`", jsonObj.get("applicationEntitlements").toString()));
          }

          // validate the optional field `applicationEntitlements` (array)
          for (int i = 0; i < jsonArrayapplicationEntitlements.size(); i++) {
            ApplicationEntitlement.validateJsonObject(jsonArrayapplicationEntitlements.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("attributeNamespace") != null && !jsonObj.get("attributeNamespace").isJsonNull()) && !jsonObj.get("attributeNamespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributeNamespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributeNamespace").toString()));
      }
      if ((jsonObj.get("legacyNamespace") != null && !jsonObj.get("legacyNamespace").isJsonNull()) && !jsonObj.get("legacyNamespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `legacyNamespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("legacyNamespace").toString()));
      }
      if ((jsonObj.get("namespaceRegistryId") != null && !jsonObj.get("namespaceRegistryId").isJsonNull()) && !jsonObj.get("namespaceRegistryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namespaceRegistryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namespaceRegistryId").toString()));
      }
      if ((jsonObj.get("publishedParentSemanticVersion") != null && !jsonObj.get("publishedParentSemanticVersion").isJsonNull()) && !jsonObj.get("publishedParentSemanticVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publishedParentSemanticVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publishedParentSemanticVersion").toString()));
      }
      if ((jsonObj.get("semanticVersionRange") != null && !jsonObj.get("semanticVersionRange").isJsonNull()) && !jsonObj.get("semanticVersionRange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `semanticVersionRange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("semanticVersionRange").toString()));
      }
      if ((jsonObj.get("parentThemeName") != null && !jsonObj.get("parentThemeName").isJsonNull()) && !jsonObj.get("parentThemeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentThemeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentThemeName").toString()));
      }
      if ((jsonObj.get("parentThemeAppKey") != null && !jsonObj.get("parentThemeAppKey").isJsonNull()) && !jsonObj.get("parentThemeAppKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentThemeAppKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentThemeAppKey").toString()));
      }
      if ((jsonObj.get("updateParentAppKey") != null && !jsonObj.get("updateParentAppKey").isJsonNull()) && !jsonObj.get("updateParentAppKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateParentAppKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateParentAppKey").toString()));
      }
      if ((jsonObj.get("appKey") != null && !jsonObj.get("appKey").isJsonNull()) && !jsonObj.get("appKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appKey").toString()));
      }
      if ((jsonObj.get("updateParentThemeName") != null && !jsonObj.get("updateParentThemeName").isJsonNull()) && !jsonObj.get("updateParentThemeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateParentThemeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateParentThemeName").toString()));
      }
      if ((jsonObj.get("updateParentThemeVersion") != null && !jsonObj.get("updateParentThemeVersion").isJsonNull()) && !jsonObj.get("updateParentThemeVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateParentThemeVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateParentThemeVersion").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AppDevPackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AppDevPackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AppDevPackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AppDevPackage.class));

       return (TypeAdapter<T>) new TypeAdapter<AppDevPackage>() {
           @Override
           public void write(JsonWriter out, AppDevPackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AppDevPackage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AppDevPackage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AppDevPackage
  * @throws IOException if the JSON string is invalid with respect to AppDevPackage
  */
  public static AppDevPackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AppDevPackage.class);
  }

 /**
  * Convert an instance of AppDevPackage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

