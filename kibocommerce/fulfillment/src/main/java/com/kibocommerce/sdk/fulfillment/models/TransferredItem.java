/*
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.fulfillment.models.AuditInfo0;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentAppeasementReason;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentFulfillmentField;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentGiftCard;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentInventoryTag;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentProductOption;
import com.kibocommerce.sdk.fulfillment.models.RejectedReason;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * TransferredItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TransferredItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ACTUAL_PRICE = "actualPrice";
  @SerializedName(SERIALIZED_NAME_ACTUAL_PRICE)
  private BigDecimal actualPrice;

  public static final String SERIALIZED_NAME_ALLOCATED_QUANTITY = "allocatedQuantity";
  @SerializedName(SERIALIZED_NAME_ALLOCATED_QUANTITY)
  private Integer allocatedQuantity;

  public static final String SERIALIZED_NAME_ALLOWS_BACK_ORDER = "allowsBackOrder";
  @SerializedName(SERIALIZED_NAME_ALLOWS_BACK_ORDER)
  private Boolean allowsBackOrder;

  public static final String SERIALIZED_NAME_ALLOWS_FUTURE_ALLOCATE = "allowsFutureAllocate";
  @SerializedName(SERIALIZED_NAME_ALLOWS_FUTURE_ALLOCATE)
  private Boolean allowsFutureAllocate;

  public static final String SERIALIZED_NAME_APPEASEMENT_REASON = "appeasementReason";
  @SerializedName(SERIALIZED_NAME_APPEASEMENT_REASON)
  private FulfillmentAppeasementReason appeasementReason;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AuditInfo0 auditInfo;

  public static final String SERIALIZED_NAME_BACKORDER_RELEASE_DATE = "backorderReleaseDate";
  @SerializedName(SERIALIZED_NAME_BACKORDER_RELEASE_DATE)
  private OffsetDateTime backorderReleaseDate;

  public static final String SERIALIZED_NAME_BLOCK_ASSIGNMENT = "blockAssignment";
  @SerializedName(SERIALIZED_NAME_BLOCK_ASSIGNMENT)
  private Boolean blockAssignment;

  public static final String SERIALIZED_NAME_CART_ITEM_ID = "cartItemId";
  @SerializedName(SERIALIZED_NAME_CART_ITEM_ID)
  private String cartItemId;

  public static final String SERIALIZED_NAME_CHILD_ITEM_IDS = "childItemIds";
  @SerializedName(SERIALIZED_NAME_CHILD_ITEM_IDS)
  private List<String> childItemIds = null;

  public static final String SERIALIZED_NAME_CREDIT_CURRENCY_CODE = "creditCurrencyCode";
  @SerializedName(SERIALIZED_NAME_CREDIT_CURRENCY_CODE)
  private String creditCurrencyCode;

  public static final String SERIALIZED_NAME_CREDIT_VALUE = "creditValue";
  @SerializedName(SERIALIZED_NAME_CREDIT_VALUE)
  private BigDecimal creditValue;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Map<String, Object> data = null;

  public static final String SERIALIZED_NAME_DUTY = "duty";
  @SerializedName(SERIALIZED_NAME_DUTY)
  private BigDecimal duty;

  public static final String SERIALIZED_NAME_EXPECTED_DELIVERY_DATE = "expectedDeliveryDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_DELIVERY_DATE)
  private OffsetDateTime expectedDeliveryDate;

  public static final String SERIALIZED_NAME_FULFILLMENT_FIELDS = "fulfillmentFields";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_FIELDS)
  private List<FulfillmentFulfillmentField> fulfillmentFields = null;

  public static final String SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE = "fulfillmentLocationCode";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE)
  private String fulfillmentLocationCode;

  public static final String SERIALIZED_NAME_GIFT_CARDS = "giftCards";
  @SerializedName(SERIALIZED_NAME_GIFT_CARDS)
  private List<FulfillmentGiftCard> giftCards = null;

  /**
   * Gets or Sets goodsType
   */
  @JsonAdapter(GoodsTypeEnum.Adapter.class)
  public enum GoodsTypeEnum {
    DIGITAL("Digital"),
    
    DIGITALCREDIT("DigitalCredit"),
    
    DIGITALGIFTCARD("DigitalGiftCard"),
    
    PHYSICAL("Physical"),
    
    SERVICE("Service");

    private String value;

    GoodsTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static GoodsTypeEnum fromValue(String value) {
      for (GoodsTypeEnum b : GoodsTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<GoodsTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GoodsTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GoodsTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return GoodsTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_GOODS_TYPE = "goodsType";
  @SerializedName(SERIALIZED_NAME_GOODS_TYPE)
  private GoodsTypeEnum goodsType;

  public static final String SERIALIZED_NAME_HANDLING = "handling";
  @SerializedName(SERIALIZED_NAME_HANDLING)
  private BigDecimal handling;

  public static final String SERIALIZED_NAME_HANDLING_DISCOUNT = "handlingDiscount";
  @SerializedName(SERIALIZED_NAME_HANDLING_DISCOUNT)
  private BigDecimal handlingDiscount;

  public static final String SERIALIZED_NAME_HANDLING_TAX = "handlingTax";
  @SerializedName(SERIALIZED_NAME_HANDLING_TAX)
  private BigDecimal handlingTax;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_INVENTORY_TAGS = "inventoryTags";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TAGS)
  private List<FulfillmentInventoryTag> inventoryTags = null;

  public static final String SERIALIZED_NAME_IS_ASSEMBLY_REQUIRED = "isAssemblyRequired";
  @SerializedName(SERIALIZED_NAME_IS_ASSEMBLY_REQUIRED)
  private Boolean isAssemblyRequired;

  public static final String SERIALIZED_NAME_IS_PACKAGED_STAND_ALONE = "isPackagedStandAlone";
  @SerializedName(SERIALIZED_NAME_IS_PACKAGED_STAND_ALONE)
  private Boolean isPackagedStandAlone;

  public static final String SERIALIZED_NAME_IS_RESERVED_INVENTORY = "isReservedInventory";
  @SerializedName(SERIALIZED_NAME_IS_RESERVED_INVENTORY)
  private Boolean isReservedInventory;

  public static final String SERIALIZED_NAME_IS_TAXABLE = "isTaxable";
  @SerializedName(SERIALIZED_NAME_IS_TAXABLE)
  private Boolean isTaxable;

  public static final String SERIALIZED_NAME_ITEM_DISCOUNT = "itemDiscount";
  @SerializedName(SERIALIZED_NAME_ITEM_DISCOUNT)
  private BigDecimal itemDiscount;

  public static final String SERIALIZED_NAME_ITEM_TAX = "itemTax";
  @SerializedName(SERIALIZED_NAME_ITEM_TAX)
  private BigDecimal itemTax;

  public static final String SERIALIZED_NAME_LINE_ID = "lineId";
  @SerializedName(SERIALIZED_NAME_LINE_ID)
  private Integer lineId;

  public static final String SERIALIZED_NAME_LINE_ITEM_ADJUSTMENT = "lineItemAdjustment";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_ADJUSTMENT)
  private BigDecimal lineItemAdjustment;

  public static final String SERIALIZED_NAME_LINE_ITEM_COST = "lineItemCost";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_COST)
  private BigDecimal lineItemCost;

  public static final String SERIALIZED_NAME_LOCATOR_NAME = "locatorName";
  @SerializedName(SERIALIZED_NAME_LOCATOR_NAME)
  private String locatorName;

  public static final String SERIALIZED_NAME_MANAGE_STOCK = "manageStock";
  @SerializedName(SERIALIZED_NAME_MANAGE_STOCK)
  private Boolean manageStock;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPTION_ATTRIBUTE_F_Q_N = "optionAttributeFQN";
  @SerializedName(SERIALIZED_NAME_OPTION_ATTRIBUTE_F_Q_N)
  private String optionAttributeFQN;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<FulfillmentProductOption> options = null;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_ITEM_ID = "originalOrderItemId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_ITEM_ID)
  private String originalOrderItemId;

  public static final String SERIALIZED_NAME_ORIGINAL_QUANTITY = "originalQuantity";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_QUANTITY)
  private Integer originalQuantity;

  public static final String SERIALIZED_NAME_OVERRIDE_PRICE = "overridePrice";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_PRICE)
  private BigDecimal overridePrice;

  public static final String SERIALIZED_NAME_PARENT_ITEM_ID = "parentItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_ITEM_ID)
  private String parentItemId;

  public static final String SERIALIZED_NAME_PART_NUMBER = "partNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "productCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_READY_FOR_PICKUP_QUANTITY = "readyForPickupQuantity";
  @SerializedName(SERIALIZED_NAME_READY_FOR_PICKUP_QUANTITY)
  private Integer readyForPickupQuantity;

  public static final String SERIALIZED_NAME_REJECTED_REASON = "rejectedReason";
  @SerializedName(SERIALIZED_NAME_REJECTED_REASON)
  private RejectedReason rejectedReason;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private BigDecimal shipping;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT = "shippingDiscount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT)
  private BigDecimal shippingDiscount;

  public static final String SERIALIZED_NAME_SHIPPING_TAX = "shippingTax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX)
  private BigDecimal shippingTax;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_TAX_DATA = "taxData";
  @SerializedName(SERIALIZED_NAME_TAX_DATA)
  private Object taxData;

  public static final String SERIALIZED_NAME_TAXABLE_HANDLING = "taxableHandling";
  @SerializedName(SERIALIZED_NAME_TAXABLE_HANDLING)
  private BigDecimal taxableHandling;

  public static final String SERIALIZED_NAME_TAXABLE_LINE_ITEM_COST = "taxableLineItemCost";
  @SerializedName(SERIALIZED_NAME_TAXABLE_LINE_ITEM_COST)
  private BigDecimal taxableLineItemCost;

  public static final String SERIALIZED_NAME_TAXABLE_SHIPPING = "taxableShipping";
  @SerializedName(SERIALIZED_NAME_TAXABLE_SHIPPING)
  private BigDecimal taxableShipping;

  public static final String SERIALIZED_NAME_TRANSFER_QUANTITY = "transferQuantity";
  @SerializedName(SERIALIZED_NAME_TRANSFER_QUANTITY)
  private Integer transferQuantity;

  public static final String SERIALIZED_NAME_TRUE_TRANSFER_QUANTITY = "trueTransferQuantity";
  @SerializedName(SERIALIZED_NAME_TRUE_TRANSFER_QUANTITY)
  private Integer trueTransferQuantity;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unitPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private BigDecimal unitPrice;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_VARIATION_PRODUCT_CODE = "variationProductCode";
  @SerializedName(SERIALIZED_NAME_VARIATION_PRODUCT_CODE)
  private String variationProductCode;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private BigDecimal weight;

  public static final String SERIALIZED_NAME_WEIGHT_UNIT = "weightUnit";
  @SerializedName(SERIALIZED_NAME_WEIGHT_UNIT)
  private String weightUnit;

  public static final String SERIALIZED_NAME_WEIGHTED_DUTY_ADJUSTMENT = "weightedDutyAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_DUTY_ADJUSTMENT)
  private BigDecimal weightedDutyAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_HANDLING_ADJUSTMENT = "weightedHandlingAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_HANDLING_ADJUSTMENT)
  private BigDecimal weightedHandlingAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_HANDLING_TAX_ADJUSTMENT = "weightedHandlingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_HANDLING_TAX_ADJUSTMENT)
  private BigDecimal weightedHandlingTaxAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_LINE_ITEM_TAX_ADJUSTMENT = "weightedLineItemTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_LINE_ITEM_TAX_ADJUSTMENT)
  private BigDecimal weightedLineItemTaxAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_SHIPMENT_ADJUSTMENT = "weightedShipmentAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_SHIPMENT_ADJUSTMENT)
  private BigDecimal weightedShipmentAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_SHIPPING_ADJUSTMENT = "weightedShippingAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_SHIPPING_ADJUSTMENT)
  private BigDecimal weightedShippingAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_SHIPPING_TAX_ADJUSTMENT = "weightedShippingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_SHIPPING_TAX_ADJUSTMENT)
  private BigDecimal weightedShippingTaxAdjustment;

  public TransferredItem() {
  }

  public TransferredItem actualPrice(BigDecimal actualPrice) {
    
    this.actualPrice = actualPrice;
    return this;
  }

   /**
   * Get actualPrice
   * @return actualPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getActualPrice() {
    return actualPrice;
  }


  public void setActualPrice(BigDecimal actualPrice) {
    this.actualPrice = actualPrice;
  }


  public TransferredItem allocatedQuantity(Integer allocatedQuantity) {
    
    this.allocatedQuantity = allocatedQuantity;
    return this;
  }

   /**
   * Get allocatedQuantity
   * @return allocatedQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAllocatedQuantity() {
    return allocatedQuantity;
  }


  public void setAllocatedQuantity(Integer allocatedQuantity) {
    this.allocatedQuantity = allocatedQuantity;
  }


  public TransferredItem allowsBackOrder(Boolean allowsBackOrder) {
    
    this.allowsBackOrder = allowsBackOrder;
    return this;
  }

   /**
   * Get allowsBackOrder
   * @return allowsBackOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowsBackOrder() {
    return allowsBackOrder;
  }


  public void setAllowsBackOrder(Boolean allowsBackOrder) {
    this.allowsBackOrder = allowsBackOrder;
  }


  public TransferredItem allowsFutureAllocate(Boolean allowsFutureAllocate) {
    
    this.allowsFutureAllocate = allowsFutureAllocate;
    return this;
  }

   /**
   * Get allowsFutureAllocate
   * @return allowsFutureAllocate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowsFutureAllocate() {
    return allowsFutureAllocate;
  }


  public void setAllowsFutureAllocate(Boolean allowsFutureAllocate) {
    this.allowsFutureAllocate = allowsFutureAllocate;
  }


  public TransferredItem appeasementReason(FulfillmentAppeasementReason appeasementReason) {
    
    this.appeasementReason = appeasementReason;
    return this;
  }

   /**
   * Get appeasementReason
   * @return appeasementReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentAppeasementReason getAppeasementReason() {
    return appeasementReason;
  }


  public void setAppeasementReason(FulfillmentAppeasementReason appeasementReason) {
    this.appeasementReason = appeasementReason;
  }


  public TransferredItem attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public TransferredItem putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public TransferredItem auditInfo(AuditInfo0 auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AuditInfo0 getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AuditInfo0 auditInfo) {
    this.auditInfo = auditInfo;
  }


  public TransferredItem backorderReleaseDate(OffsetDateTime backorderReleaseDate) {
    
    this.backorderReleaseDate = backorderReleaseDate;
    return this;
  }

   /**
   * Get backorderReleaseDate
   * @return backorderReleaseDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBackorderReleaseDate() {
    return backorderReleaseDate;
  }


  public void setBackorderReleaseDate(OffsetDateTime backorderReleaseDate) {
    this.backorderReleaseDate = backorderReleaseDate;
  }


  public TransferredItem blockAssignment(Boolean blockAssignment) {
    
    this.blockAssignment = blockAssignment;
    return this;
  }

   /**
   * Get blockAssignment
   * @return blockAssignment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBlockAssignment() {
    return blockAssignment;
  }


  public void setBlockAssignment(Boolean blockAssignment) {
    this.blockAssignment = blockAssignment;
  }


  public TransferredItem cartItemId(String cartItemId) {
    
    this.cartItemId = cartItemId;
    return this;
  }

   /**
   * Get cartItemId
   * @return cartItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCartItemId() {
    return cartItemId;
  }


  public void setCartItemId(String cartItemId) {
    this.cartItemId = cartItemId;
  }


  public TransferredItem childItemIds(List<String> childItemIds) {
    
    this.childItemIds = childItemIds;
    return this;
  }

  public TransferredItem addChildItemIdsItem(String childItemIdsItem) {
    if (this.childItemIds == null) {
      this.childItemIds = new ArrayList<>();
    }
    this.childItemIds.add(childItemIdsItem);
    return this;
  }

   /**
   * Get childItemIds
   * @return childItemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getChildItemIds() {
    return childItemIds;
  }


  public void setChildItemIds(List<String> childItemIds) {
    this.childItemIds = childItemIds;
  }


  public TransferredItem creditCurrencyCode(String creditCurrencyCode) {
    
    this.creditCurrencyCode = creditCurrencyCode;
    return this;
  }

   /**
   * Get creditCurrencyCode
   * @return creditCurrencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreditCurrencyCode() {
    return creditCurrencyCode;
  }


  public void setCreditCurrencyCode(String creditCurrencyCode) {
    this.creditCurrencyCode = creditCurrencyCode;
  }


  public TransferredItem creditValue(BigDecimal creditValue) {
    
    this.creditValue = creditValue;
    return this;
  }

   /**
   * Get creditValue
   * @return creditValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getCreditValue() {
    return creditValue;
  }


  public void setCreditValue(BigDecimal creditValue) {
    this.creditValue = creditValue;
  }


  public TransferredItem data(Map<String, Object> data) {
    
    this.data = data;
    return this;
  }

  public TransferredItem putDataItem(String key, Object dataItem) {
    if (this.data == null) {
      this.data = new HashMap<>();
    }
    this.data.put(key, dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getData() {
    return data;
  }


  public void setData(Map<String, Object> data) {
    this.data = data;
  }


  public TransferredItem duty(BigDecimal duty) {
    
    this.duty = duty;
    return this;
  }

   /**
   * Get duty
   * @return duty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getDuty() {
    return duty;
  }


  public void setDuty(BigDecimal duty) {
    this.duty = duty;
  }


  public TransferredItem expectedDeliveryDate(OffsetDateTime expectedDeliveryDate) {
    
    this.expectedDeliveryDate = expectedDeliveryDate;
    return this;
  }

   /**
   * Get expectedDeliveryDate
   * @return expectedDeliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getExpectedDeliveryDate() {
    return expectedDeliveryDate;
  }


  public void setExpectedDeliveryDate(OffsetDateTime expectedDeliveryDate) {
    this.expectedDeliveryDate = expectedDeliveryDate;
  }


  public TransferredItem fulfillmentFields(List<FulfillmentFulfillmentField> fulfillmentFields) {
    
    this.fulfillmentFields = fulfillmentFields;
    return this;
  }

  public TransferredItem addFulfillmentFieldsItem(FulfillmentFulfillmentField fulfillmentFieldsItem) {
    if (this.fulfillmentFields == null) {
      this.fulfillmentFields = new ArrayList<>();
    }
    this.fulfillmentFields.add(fulfillmentFieldsItem);
    return this;
  }

   /**
   * Get fulfillmentFields
   * @return fulfillmentFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentFulfillmentField> getFulfillmentFields() {
    return fulfillmentFields;
  }


  public void setFulfillmentFields(List<FulfillmentFulfillmentField> fulfillmentFields) {
    this.fulfillmentFields = fulfillmentFields;
  }


  public TransferredItem fulfillmentLocationCode(String fulfillmentLocationCode) {
    
    this.fulfillmentLocationCode = fulfillmentLocationCode;
    return this;
  }

   /**
   * Get fulfillmentLocationCode
   * @return fulfillmentLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFulfillmentLocationCode() {
    return fulfillmentLocationCode;
  }


  public void setFulfillmentLocationCode(String fulfillmentLocationCode) {
    this.fulfillmentLocationCode = fulfillmentLocationCode;
  }


  public TransferredItem giftCards(List<FulfillmentGiftCard> giftCards) {
    
    this.giftCards = giftCards;
    return this;
  }

  public TransferredItem addGiftCardsItem(FulfillmentGiftCard giftCardsItem) {
    if (this.giftCards == null) {
      this.giftCards = new ArrayList<>();
    }
    this.giftCards.add(giftCardsItem);
    return this;
  }

   /**
   * Get giftCards
   * @return giftCards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentGiftCard> getGiftCards() {
    return giftCards;
  }


  public void setGiftCards(List<FulfillmentGiftCard> giftCards) {
    this.giftCards = giftCards;
  }


  public TransferredItem goodsType(GoodsTypeEnum goodsType) {
    
    this.goodsType = goodsType;
    return this;
  }

   /**
   * Get goodsType
   * @return goodsType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GoodsTypeEnum getGoodsType() {
    return goodsType;
  }


  public void setGoodsType(GoodsTypeEnum goodsType) {
    this.goodsType = goodsType;
  }


  public TransferredItem handling(BigDecimal handling) {
    
    this.handling = handling;
    return this;
  }

   /**
   * Get handling
   * @return handling
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getHandling() {
    return handling;
  }


  public void setHandling(BigDecimal handling) {
    this.handling = handling;
  }


  public TransferredItem handlingDiscount(BigDecimal handlingDiscount) {
    
    this.handlingDiscount = handlingDiscount;
    return this;
  }

   /**
   * Get handlingDiscount
   * @return handlingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getHandlingDiscount() {
    return handlingDiscount;
  }


  public void setHandlingDiscount(BigDecimal handlingDiscount) {
    this.handlingDiscount = handlingDiscount;
  }


  public TransferredItem handlingTax(BigDecimal handlingTax) {
    
    this.handlingTax = handlingTax;
    return this;
  }

   /**
   * Get handlingTax
   * @return handlingTax
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getHandlingTax() {
    return handlingTax;
  }


  public void setHandlingTax(BigDecimal handlingTax) {
    this.handlingTax = handlingTax;
  }


  public TransferredItem imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public TransferredItem inventoryTags(List<FulfillmentInventoryTag> inventoryTags) {
    
    this.inventoryTags = inventoryTags;
    return this;
  }

  public TransferredItem addInventoryTagsItem(FulfillmentInventoryTag inventoryTagsItem) {
    if (this.inventoryTags == null) {
      this.inventoryTags = new ArrayList<>();
    }
    this.inventoryTags.add(inventoryTagsItem);
    return this;
  }

   /**
   * Get inventoryTags
   * @return inventoryTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentInventoryTag> getInventoryTags() {
    return inventoryTags;
  }


  public void setInventoryTags(List<FulfillmentInventoryTag> inventoryTags) {
    this.inventoryTags = inventoryTags;
  }


  public TransferredItem isAssemblyRequired(Boolean isAssemblyRequired) {
    
    this.isAssemblyRequired = isAssemblyRequired;
    return this;
  }

   /**
   * Get isAssemblyRequired
   * @return isAssemblyRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAssemblyRequired() {
    return isAssemblyRequired;
  }


  public void setIsAssemblyRequired(Boolean isAssemblyRequired) {
    this.isAssemblyRequired = isAssemblyRequired;
  }


  public TransferredItem isPackagedStandAlone(Boolean isPackagedStandAlone) {
    
    this.isPackagedStandAlone = isPackagedStandAlone;
    return this;
  }

   /**
   * Get isPackagedStandAlone
   * @return isPackagedStandAlone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPackagedStandAlone() {
    return isPackagedStandAlone;
  }


  public void setIsPackagedStandAlone(Boolean isPackagedStandAlone) {
    this.isPackagedStandAlone = isPackagedStandAlone;
  }


  public TransferredItem isReservedInventory(Boolean isReservedInventory) {
    
    this.isReservedInventory = isReservedInventory;
    return this;
  }

   /**
   * Get isReservedInventory
   * @return isReservedInventory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsReservedInventory() {
    return isReservedInventory;
  }


  public void setIsReservedInventory(Boolean isReservedInventory) {
    this.isReservedInventory = isReservedInventory;
  }


  public TransferredItem isTaxable(Boolean isTaxable) {
    
    this.isTaxable = isTaxable;
    return this;
  }

   /**
   * Get isTaxable
   * @return isTaxable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsTaxable() {
    return isTaxable;
  }


  public void setIsTaxable(Boolean isTaxable) {
    this.isTaxable = isTaxable;
  }


  public TransferredItem itemDiscount(BigDecimal itemDiscount) {
    
    this.itemDiscount = itemDiscount;
    return this;
  }

   /**
   * Get itemDiscount
   * @return itemDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getItemDiscount() {
    return itemDiscount;
  }


  public void setItemDiscount(BigDecimal itemDiscount) {
    this.itemDiscount = itemDiscount;
  }


  public TransferredItem itemTax(BigDecimal itemTax) {
    
    this.itemTax = itemTax;
    return this;
  }

   /**
   * Get itemTax
   * @return itemTax
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getItemTax() {
    return itemTax;
  }


  public void setItemTax(BigDecimal itemTax) {
    this.itemTax = itemTax;
  }


  public TransferredItem lineId(Integer lineId) {
    
    this.lineId = lineId;
    return this;
  }

   /**
   * Get lineId
   * @return lineId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getLineId() {
    return lineId;
  }


  public void setLineId(Integer lineId) {
    this.lineId = lineId;
  }


  public TransferredItem lineItemAdjustment(BigDecimal lineItemAdjustment) {
    
    this.lineItemAdjustment = lineItemAdjustment;
    return this;
  }

   /**
   * Get lineItemAdjustment
   * @return lineItemAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getLineItemAdjustment() {
    return lineItemAdjustment;
  }


  public void setLineItemAdjustment(BigDecimal lineItemAdjustment) {
    this.lineItemAdjustment = lineItemAdjustment;
  }


  public TransferredItem lineItemCost(BigDecimal lineItemCost) {
    
    this.lineItemCost = lineItemCost;
    return this;
  }

   /**
   * Get lineItemCost
   * @return lineItemCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getLineItemCost() {
    return lineItemCost;
  }


  public void setLineItemCost(BigDecimal lineItemCost) {
    this.lineItemCost = lineItemCost;
  }


  public TransferredItem locatorName(String locatorName) {
    
    this.locatorName = locatorName;
    return this;
  }

   /**
   * Get locatorName
   * @return locatorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocatorName() {
    return locatorName;
  }


  public void setLocatorName(String locatorName) {
    this.locatorName = locatorName;
  }


  public TransferredItem manageStock(Boolean manageStock) {
    
    this.manageStock = manageStock;
    return this;
  }

   /**
   * Get manageStock
   * @return manageStock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getManageStock() {
    return manageStock;
  }


  public void setManageStock(Boolean manageStock) {
    this.manageStock = manageStock;
  }


  public TransferredItem name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TransferredItem optionAttributeFQN(String optionAttributeFQN) {
    
    this.optionAttributeFQN = optionAttributeFQN;
    return this;
  }

   /**
   * Get optionAttributeFQN
   * @return optionAttributeFQN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOptionAttributeFQN() {
    return optionAttributeFQN;
  }


  public void setOptionAttributeFQN(String optionAttributeFQN) {
    this.optionAttributeFQN = optionAttributeFQN;
  }


  public TransferredItem options(List<FulfillmentProductOption> options) {
    
    this.options = options;
    return this;
  }

  public TransferredItem addOptionsItem(FulfillmentProductOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentProductOption> getOptions() {
    return options;
  }


  public void setOptions(List<FulfillmentProductOption> options) {
    this.options = options;
  }


  public TransferredItem originalOrderItemId(String originalOrderItemId) {
    
    this.originalOrderItemId = originalOrderItemId;
    return this;
  }

   /**
   * Get originalOrderItemId
   * @return originalOrderItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOriginalOrderItemId() {
    return originalOrderItemId;
  }


  public void setOriginalOrderItemId(String originalOrderItemId) {
    this.originalOrderItemId = originalOrderItemId;
  }


  public TransferredItem originalQuantity(Integer originalQuantity) {
    
    this.originalQuantity = originalQuantity;
    return this;
  }

   /**
   * Get originalQuantity
   * @return originalQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOriginalQuantity() {
    return originalQuantity;
  }


  public void setOriginalQuantity(Integer originalQuantity) {
    this.originalQuantity = originalQuantity;
  }


  public TransferredItem overridePrice(BigDecimal overridePrice) {
    
    this.overridePrice = overridePrice;
    return this;
  }

   /**
   * Get overridePrice
   * @return overridePrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getOverridePrice() {
    return overridePrice;
  }


  public void setOverridePrice(BigDecimal overridePrice) {
    this.overridePrice = overridePrice;
  }


  public TransferredItem parentItemId(String parentItemId) {
    
    this.parentItemId = parentItemId;
    return this;
  }

   /**
   * Get parentItemId
   * @return parentItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getParentItemId() {
    return parentItemId;
  }


  public void setParentItemId(String parentItemId) {
    this.parentItemId = parentItemId;
  }


  public TransferredItem partNumber(String partNumber) {
    
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Get partNumber
   * @return partNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPartNumber() {
    return partNumber;
  }


  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }


  public TransferredItem productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Get productCode
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public TransferredItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public TransferredItem readyForPickupQuantity(Integer readyForPickupQuantity) {
    
    this.readyForPickupQuantity = readyForPickupQuantity;
    return this;
  }

   /**
   * Get readyForPickupQuantity
   * @return readyForPickupQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getReadyForPickupQuantity() {
    return readyForPickupQuantity;
  }


  public void setReadyForPickupQuantity(Integer readyForPickupQuantity) {
    this.readyForPickupQuantity = readyForPickupQuantity;
  }


  public TransferredItem rejectedReason(RejectedReason rejectedReason) {
    
    this.rejectedReason = rejectedReason;
    return this;
  }

   /**
   * Get rejectedReason
   * @return rejectedReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RejectedReason getRejectedReason() {
    return rejectedReason;
  }


  public void setRejectedReason(RejectedReason rejectedReason) {
    this.rejectedReason = rejectedReason;
  }


  public TransferredItem shipping(BigDecimal shipping) {
    
    this.shipping = shipping;
    return this;
  }

   /**
   * Get shipping
   * @return shipping
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getShipping() {
    return shipping;
  }


  public void setShipping(BigDecimal shipping) {
    this.shipping = shipping;
  }


  public TransferredItem shippingDiscount(BigDecimal shippingDiscount) {
    
    this.shippingDiscount = shippingDiscount;
    return this;
  }

   /**
   * Get shippingDiscount
   * @return shippingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getShippingDiscount() {
    return shippingDiscount;
  }


  public void setShippingDiscount(BigDecimal shippingDiscount) {
    this.shippingDiscount = shippingDiscount;
  }


  public TransferredItem shippingTax(BigDecimal shippingTax) {
    
    this.shippingTax = shippingTax;
    return this;
  }

   /**
   * Get shippingTax
   * @return shippingTax
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getShippingTax() {
    return shippingTax;
  }


  public void setShippingTax(BigDecimal shippingTax) {
    this.shippingTax = shippingTax;
  }


  public TransferredItem sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public TransferredItem taxData(Object taxData) {
    
    this.taxData = taxData;
    return this;
  }

   /**
   * Get taxData
   * @return taxData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTaxData() {
    return taxData;
  }


  public void setTaxData(Object taxData) {
    this.taxData = taxData;
  }


  public TransferredItem taxableHandling(BigDecimal taxableHandling) {
    
    this.taxableHandling = taxableHandling;
    return this;
  }

   /**
   * Get taxableHandling
   * @return taxableHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTaxableHandling() {
    return taxableHandling;
  }


  public void setTaxableHandling(BigDecimal taxableHandling) {
    this.taxableHandling = taxableHandling;
  }


  public TransferredItem taxableLineItemCost(BigDecimal taxableLineItemCost) {
    
    this.taxableLineItemCost = taxableLineItemCost;
    return this;
  }

   /**
   * Get taxableLineItemCost
   * @return taxableLineItemCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTaxableLineItemCost() {
    return taxableLineItemCost;
  }


  public void setTaxableLineItemCost(BigDecimal taxableLineItemCost) {
    this.taxableLineItemCost = taxableLineItemCost;
  }


  public TransferredItem taxableShipping(BigDecimal taxableShipping) {
    
    this.taxableShipping = taxableShipping;
    return this;
  }

   /**
   * Get taxableShipping
   * @return taxableShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getTaxableShipping() {
    return taxableShipping;
  }


  public void setTaxableShipping(BigDecimal taxableShipping) {
    this.taxableShipping = taxableShipping;
  }


  public TransferredItem transferQuantity(Integer transferQuantity) {
    
    this.transferQuantity = transferQuantity;
    return this;
  }

   /**
   * Get transferQuantity
   * @return transferQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTransferQuantity() {
    return transferQuantity;
  }


  public void setTransferQuantity(Integer transferQuantity) {
    this.transferQuantity = transferQuantity;
  }


  public TransferredItem trueTransferQuantity(Integer trueTransferQuantity) {
    
    this.trueTransferQuantity = trueTransferQuantity;
    return this;
  }

   /**
   * Get trueTransferQuantity
   * @return trueTransferQuantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTrueTransferQuantity() {
    return trueTransferQuantity;
  }


  public void setTrueTransferQuantity(Integer trueTransferQuantity) {
    this.trueTransferQuantity = trueTransferQuantity;
  }


  public TransferredItem unitPrice(BigDecimal unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getUnitPrice() {
    return unitPrice;
  }


  public void setUnitPrice(BigDecimal unitPrice) {
    this.unitPrice = unitPrice;
  }


  public TransferredItem upc(String upc) {
    
    this.upc = upc;
    return this;
  }

   /**
   * Get upc
   * @return upc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUpc() {
    return upc;
  }


  public void setUpc(String upc) {
    this.upc = upc;
  }


  public TransferredItem variationProductCode(String variationProductCode) {
    
    this.variationProductCode = variationProductCode;
    return this;
  }

   /**
   * Get variationProductCode
   * @return variationProductCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVariationProductCode() {
    return variationProductCode;
  }


  public void setVariationProductCode(String variationProductCode) {
    this.variationProductCode = variationProductCode;
  }


  public TransferredItem weight(BigDecimal weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Get weight
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeight() {
    return weight;
  }


  public void setWeight(BigDecimal weight) {
    this.weight = weight;
  }


  public TransferredItem weightUnit(String weightUnit) {
    
    this.weightUnit = weightUnit;
    return this;
  }

   /**
   * Get weightUnit
   * @return weightUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWeightUnit() {
    return weightUnit;
  }


  public void setWeightUnit(String weightUnit) {
    this.weightUnit = weightUnit;
  }


  public TransferredItem weightedDutyAdjustment(BigDecimal weightedDutyAdjustment) {
    
    this.weightedDutyAdjustment = weightedDutyAdjustment;
    return this;
  }

   /**
   * Get weightedDutyAdjustment
   * @return weightedDutyAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeightedDutyAdjustment() {
    return weightedDutyAdjustment;
  }


  public void setWeightedDutyAdjustment(BigDecimal weightedDutyAdjustment) {
    this.weightedDutyAdjustment = weightedDutyAdjustment;
  }


  public TransferredItem weightedHandlingAdjustment(BigDecimal weightedHandlingAdjustment) {
    
    this.weightedHandlingAdjustment = weightedHandlingAdjustment;
    return this;
  }

   /**
   * Get weightedHandlingAdjustment
   * @return weightedHandlingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeightedHandlingAdjustment() {
    return weightedHandlingAdjustment;
  }


  public void setWeightedHandlingAdjustment(BigDecimal weightedHandlingAdjustment) {
    this.weightedHandlingAdjustment = weightedHandlingAdjustment;
  }


  public TransferredItem weightedHandlingTaxAdjustment(BigDecimal weightedHandlingTaxAdjustment) {
    
    this.weightedHandlingTaxAdjustment = weightedHandlingTaxAdjustment;
    return this;
  }

   /**
   * Get weightedHandlingTaxAdjustment
   * @return weightedHandlingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeightedHandlingTaxAdjustment() {
    return weightedHandlingTaxAdjustment;
  }


  public void setWeightedHandlingTaxAdjustment(BigDecimal weightedHandlingTaxAdjustment) {
    this.weightedHandlingTaxAdjustment = weightedHandlingTaxAdjustment;
  }


  public TransferredItem weightedLineItemTaxAdjustment(BigDecimal weightedLineItemTaxAdjustment) {
    
    this.weightedLineItemTaxAdjustment = weightedLineItemTaxAdjustment;
    return this;
  }

   /**
   * Get weightedLineItemTaxAdjustment
   * @return weightedLineItemTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeightedLineItemTaxAdjustment() {
    return weightedLineItemTaxAdjustment;
  }


  public void setWeightedLineItemTaxAdjustment(BigDecimal weightedLineItemTaxAdjustment) {
    this.weightedLineItemTaxAdjustment = weightedLineItemTaxAdjustment;
  }


  public TransferredItem weightedShipmentAdjustment(BigDecimal weightedShipmentAdjustment) {
    
    this.weightedShipmentAdjustment = weightedShipmentAdjustment;
    return this;
  }

   /**
   * Get weightedShipmentAdjustment
   * @return weightedShipmentAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeightedShipmentAdjustment() {
    return weightedShipmentAdjustment;
  }


  public void setWeightedShipmentAdjustment(BigDecimal weightedShipmentAdjustment) {
    this.weightedShipmentAdjustment = weightedShipmentAdjustment;
  }


  public TransferredItem weightedShippingAdjustment(BigDecimal weightedShippingAdjustment) {
    
    this.weightedShippingAdjustment = weightedShippingAdjustment;
    return this;
  }

   /**
   * Get weightedShippingAdjustment
   * @return weightedShippingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeightedShippingAdjustment() {
    return weightedShippingAdjustment;
  }


  public void setWeightedShippingAdjustment(BigDecimal weightedShippingAdjustment) {
    this.weightedShippingAdjustment = weightedShippingAdjustment;
  }


  public TransferredItem weightedShippingTaxAdjustment(BigDecimal weightedShippingTaxAdjustment) {
    
    this.weightedShippingTaxAdjustment = weightedShippingTaxAdjustment;
    return this;
  }

   /**
   * Get weightedShippingTaxAdjustment
   * @return weightedShippingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public BigDecimal getWeightedShippingTaxAdjustment() {
    return weightedShippingTaxAdjustment;
  }


  public void setWeightedShippingTaxAdjustment(BigDecimal weightedShippingTaxAdjustment) {
    this.weightedShippingTaxAdjustment = weightedShippingTaxAdjustment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransferredItem transferredItem = (TransferredItem) o;
    return Objects.equals(this.actualPrice, transferredItem.actualPrice) &&
        Objects.equals(this.allocatedQuantity, transferredItem.allocatedQuantity) &&
        Objects.equals(this.allowsBackOrder, transferredItem.allowsBackOrder) &&
        Objects.equals(this.allowsFutureAllocate, transferredItem.allowsFutureAllocate) &&
        Objects.equals(this.appeasementReason, transferredItem.appeasementReason) &&
        Objects.equals(this.attributes, transferredItem.attributes) &&
        Objects.equals(this.auditInfo, transferredItem.auditInfo) &&
        Objects.equals(this.backorderReleaseDate, transferredItem.backorderReleaseDate) &&
        Objects.equals(this.blockAssignment, transferredItem.blockAssignment) &&
        Objects.equals(this.cartItemId, transferredItem.cartItemId) &&
        Objects.equals(this.childItemIds, transferredItem.childItemIds) &&
        Objects.equals(this.creditCurrencyCode, transferredItem.creditCurrencyCode) &&
        Objects.equals(this.creditValue, transferredItem.creditValue) &&
        Objects.equals(this.data, transferredItem.data) &&
        Objects.equals(this.duty, transferredItem.duty) &&
        Objects.equals(this.expectedDeliveryDate, transferredItem.expectedDeliveryDate) &&
        Objects.equals(this.fulfillmentFields, transferredItem.fulfillmentFields) &&
        Objects.equals(this.fulfillmentLocationCode, transferredItem.fulfillmentLocationCode) &&
        Objects.equals(this.giftCards, transferredItem.giftCards) &&
        Objects.equals(this.goodsType, transferredItem.goodsType) &&
        Objects.equals(this.handling, transferredItem.handling) &&
        Objects.equals(this.handlingDiscount, transferredItem.handlingDiscount) &&
        Objects.equals(this.handlingTax, transferredItem.handlingTax) &&
        Objects.equals(this.imageUrl, transferredItem.imageUrl) &&
        Objects.equals(this.inventoryTags, transferredItem.inventoryTags) &&
        Objects.equals(this.isAssemblyRequired, transferredItem.isAssemblyRequired) &&
        Objects.equals(this.isPackagedStandAlone, transferredItem.isPackagedStandAlone) &&
        Objects.equals(this.isReservedInventory, transferredItem.isReservedInventory) &&
        Objects.equals(this.isTaxable, transferredItem.isTaxable) &&
        Objects.equals(this.itemDiscount, transferredItem.itemDiscount) &&
        Objects.equals(this.itemTax, transferredItem.itemTax) &&
        Objects.equals(this.lineId, transferredItem.lineId) &&
        Objects.equals(this.lineItemAdjustment, transferredItem.lineItemAdjustment) &&
        Objects.equals(this.lineItemCost, transferredItem.lineItemCost) &&
        Objects.equals(this.locatorName, transferredItem.locatorName) &&
        Objects.equals(this.manageStock, transferredItem.manageStock) &&
        Objects.equals(this.name, transferredItem.name) &&
        Objects.equals(this.optionAttributeFQN, transferredItem.optionAttributeFQN) &&
        Objects.equals(this.options, transferredItem.options) &&
        Objects.equals(this.originalOrderItemId, transferredItem.originalOrderItemId) &&
        Objects.equals(this.originalQuantity, transferredItem.originalQuantity) &&
        Objects.equals(this.overridePrice, transferredItem.overridePrice) &&
        Objects.equals(this.parentItemId, transferredItem.parentItemId) &&
        Objects.equals(this.partNumber, transferredItem.partNumber) &&
        Objects.equals(this.productCode, transferredItem.productCode) &&
        Objects.equals(this.quantity, transferredItem.quantity) &&
        Objects.equals(this.readyForPickupQuantity, transferredItem.readyForPickupQuantity) &&
        Objects.equals(this.rejectedReason, transferredItem.rejectedReason) &&
        Objects.equals(this.shipping, transferredItem.shipping) &&
        Objects.equals(this.shippingDiscount, transferredItem.shippingDiscount) &&
        Objects.equals(this.shippingTax, transferredItem.shippingTax) &&
        Objects.equals(this.sku, transferredItem.sku) &&
        Objects.equals(this.taxData, transferredItem.taxData) &&
        Objects.equals(this.taxableHandling, transferredItem.taxableHandling) &&
        Objects.equals(this.taxableLineItemCost, transferredItem.taxableLineItemCost) &&
        Objects.equals(this.taxableShipping, transferredItem.taxableShipping) &&
        Objects.equals(this.transferQuantity, transferredItem.transferQuantity) &&
        Objects.equals(this.trueTransferQuantity, transferredItem.trueTransferQuantity) &&
        Objects.equals(this.unitPrice, transferredItem.unitPrice) &&
        Objects.equals(this.upc, transferredItem.upc) &&
        Objects.equals(this.variationProductCode, transferredItem.variationProductCode) &&
        Objects.equals(this.weight, transferredItem.weight) &&
        Objects.equals(this.weightUnit, transferredItem.weightUnit) &&
        Objects.equals(this.weightedDutyAdjustment, transferredItem.weightedDutyAdjustment) &&
        Objects.equals(this.weightedHandlingAdjustment, transferredItem.weightedHandlingAdjustment) &&
        Objects.equals(this.weightedHandlingTaxAdjustment, transferredItem.weightedHandlingTaxAdjustment) &&
        Objects.equals(this.weightedLineItemTaxAdjustment, transferredItem.weightedLineItemTaxAdjustment) &&
        Objects.equals(this.weightedShipmentAdjustment, transferredItem.weightedShipmentAdjustment) &&
        Objects.equals(this.weightedShippingAdjustment, transferredItem.weightedShippingAdjustment) &&
        Objects.equals(this.weightedShippingTaxAdjustment, transferredItem.weightedShippingTaxAdjustment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actualPrice, allocatedQuantity, allowsBackOrder, allowsFutureAllocate, appeasementReason, attributes, auditInfo, backorderReleaseDate, blockAssignment, cartItemId, childItemIds, creditCurrencyCode, creditValue, data, duty, expectedDeliveryDate, fulfillmentFields, fulfillmentLocationCode, giftCards, goodsType, handling, handlingDiscount, handlingTax, imageUrl, inventoryTags, isAssemblyRequired, isPackagedStandAlone, isReservedInventory, isTaxable, itemDiscount, itemTax, lineId, lineItemAdjustment, lineItemCost, locatorName, manageStock, name, optionAttributeFQN, options, originalOrderItemId, originalQuantity, overridePrice, parentItemId, partNumber, productCode, quantity, readyForPickupQuantity, rejectedReason, shipping, shippingDiscount, shippingTax, sku, taxData, taxableHandling, taxableLineItemCost, taxableShipping, transferQuantity, trueTransferQuantity, unitPrice, upc, variationProductCode, weight, weightUnit, weightedDutyAdjustment, weightedHandlingAdjustment, weightedHandlingTaxAdjustment, weightedLineItemTaxAdjustment, weightedShipmentAdjustment, weightedShippingAdjustment, weightedShippingTaxAdjustment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransferredItem {\n");
    sb.append("    actualPrice: ").append(toIndentedString(actualPrice)).append("\n");
    sb.append("    allocatedQuantity: ").append(toIndentedString(allocatedQuantity)).append("\n");
    sb.append("    allowsBackOrder: ").append(toIndentedString(allowsBackOrder)).append("\n");
    sb.append("    allowsFutureAllocate: ").append(toIndentedString(allowsFutureAllocate)).append("\n");
    sb.append("    appeasementReason: ").append(toIndentedString(appeasementReason)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    backorderReleaseDate: ").append(toIndentedString(backorderReleaseDate)).append("\n");
    sb.append("    blockAssignment: ").append(toIndentedString(blockAssignment)).append("\n");
    sb.append("    cartItemId: ").append(toIndentedString(cartItemId)).append("\n");
    sb.append("    childItemIds: ").append(toIndentedString(childItemIds)).append("\n");
    sb.append("    creditCurrencyCode: ").append(toIndentedString(creditCurrencyCode)).append("\n");
    sb.append("    creditValue: ").append(toIndentedString(creditValue)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    duty: ").append(toIndentedString(duty)).append("\n");
    sb.append("    expectedDeliveryDate: ").append(toIndentedString(expectedDeliveryDate)).append("\n");
    sb.append("    fulfillmentFields: ").append(toIndentedString(fulfillmentFields)).append("\n");
    sb.append("    fulfillmentLocationCode: ").append(toIndentedString(fulfillmentLocationCode)).append("\n");
    sb.append("    giftCards: ").append(toIndentedString(giftCards)).append("\n");
    sb.append("    goodsType: ").append(toIndentedString(goodsType)).append("\n");
    sb.append("    handling: ").append(toIndentedString(handling)).append("\n");
    sb.append("    handlingDiscount: ").append(toIndentedString(handlingDiscount)).append("\n");
    sb.append("    handlingTax: ").append(toIndentedString(handlingTax)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    inventoryTags: ").append(toIndentedString(inventoryTags)).append("\n");
    sb.append("    isAssemblyRequired: ").append(toIndentedString(isAssemblyRequired)).append("\n");
    sb.append("    isPackagedStandAlone: ").append(toIndentedString(isPackagedStandAlone)).append("\n");
    sb.append("    isReservedInventory: ").append(toIndentedString(isReservedInventory)).append("\n");
    sb.append("    isTaxable: ").append(toIndentedString(isTaxable)).append("\n");
    sb.append("    itemDiscount: ").append(toIndentedString(itemDiscount)).append("\n");
    sb.append("    itemTax: ").append(toIndentedString(itemTax)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    lineItemAdjustment: ").append(toIndentedString(lineItemAdjustment)).append("\n");
    sb.append("    lineItemCost: ").append(toIndentedString(lineItemCost)).append("\n");
    sb.append("    locatorName: ").append(toIndentedString(locatorName)).append("\n");
    sb.append("    manageStock: ").append(toIndentedString(manageStock)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    optionAttributeFQN: ").append(toIndentedString(optionAttributeFQN)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    originalOrderItemId: ").append(toIndentedString(originalOrderItemId)).append("\n");
    sb.append("    originalQuantity: ").append(toIndentedString(originalQuantity)).append("\n");
    sb.append("    overridePrice: ").append(toIndentedString(overridePrice)).append("\n");
    sb.append("    parentItemId: ").append(toIndentedString(parentItemId)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    readyForPickupQuantity: ").append(toIndentedString(readyForPickupQuantity)).append("\n");
    sb.append("    rejectedReason: ").append(toIndentedString(rejectedReason)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    shippingDiscount: ").append(toIndentedString(shippingDiscount)).append("\n");
    sb.append("    shippingTax: ").append(toIndentedString(shippingTax)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    taxData: ").append(toIndentedString(taxData)).append("\n");
    sb.append("    taxableHandling: ").append(toIndentedString(taxableHandling)).append("\n");
    sb.append("    taxableLineItemCost: ").append(toIndentedString(taxableLineItemCost)).append("\n");
    sb.append("    taxableShipping: ").append(toIndentedString(taxableShipping)).append("\n");
    sb.append("    transferQuantity: ").append(toIndentedString(transferQuantity)).append("\n");
    sb.append("    trueTransferQuantity: ").append(toIndentedString(trueTransferQuantity)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    variationProductCode: ").append(toIndentedString(variationProductCode)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    weightUnit: ").append(toIndentedString(weightUnit)).append("\n");
    sb.append("    weightedDutyAdjustment: ").append(toIndentedString(weightedDutyAdjustment)).append("\n");
    sb.append("    weightedHandlingAdjustment: ").append(toIndentedString(weightedHandlingAdjustment)).append("\n");
    sb.append("    weightedHandlingTaxAdjustment: ").append(toIndentedString(weightedHandlingTaxAdjustment)).append("\n");
    sb.append("    weightedLineItemTaxAdjustment: ").append(toIndentedString(weightedLineItemTaxAdjustment)).append("\n");
    sb.append("    weightedShipmentAdjustment: ").append(toIndentedString(weightedShipmentAdjustment)).append("\n");
    sb.append("    weightedShippingAdjustment: ").append(toIndentedString(weightedShippingAdjustment)).append("\n");
    sb.append("    weightedShippingTaxAdjustment: ").append(toIndentedString(weightedShippingTaxAdjustment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actualPrice");
    openapiFields.add("allocatedQuantity");
    openapiFields.add("allowsBackOrder");
    openapiFields.add("allowsFutureAllocate");
    openapiFields.add("appeasementReason");
    openapiFields.add("attributes");
    openapiFields.add("auditInfo");
    openapiFields.add("backorderReleaseDate");
    openapiFields.add("blockAssignment");
    openapiFields.add("cartItemId");
    openapiFields.add("childItemIds");
    openapiFields.add("creditCurrencyCode");
    openapiFields.add("creditValue");
    openapiFields.add("data");
    openapiFields.add("duty");
    openapiFields.add("expectedDeliveryDate");
    openapiFields.add("fulfillmentFields");
    openapiFields.add("fulfillmentLocationCode");
    openapiFields.add("giftCards");
    openapiFields.add("goodsType");
    openapiFields.add("handling");
    openapiFields.add("handlingDiscount");
    openapiFields.add("handlingTax");
    openapiFields.add("imageUrl");
    openapiFields.add("inventoryTags");
    openapiFields.add("isAssemblyRequired");
    openapiFields.add("isPackagedStandAlone");
    openapiFields.add("isReservedInventory");
    openapiFields.add("isTaxable");
    openapiFields.add("itemDiscount");
    openapiFields.add("itemTax");
    openapiFields.add("lineId");
    openapiFields.add("lineItemAdjustment");
    openapiFields.add("lineItemCost");
    openapiFields.add("locatorName");
    openapiFields.add("manageStock");
    openapiFields.add("name");
    openapiFields.add("optionAttributeFQN");
    openapiFields.add("options");
    openapiFields.add("originalOrderItemId");
    openapiFields.add("originalQuantity");
    openapiFields.add("overridePrice");
    openapiFields.add("parentItemId");
    openapiFields.add("partNumber");
    openapiFields.add("productCode");
    openapiFields.add("quantity");
    openapiFields.add("readyForPickupQuantity");
    openapiFields.add("rejectedReason");
    openapiFields.add("shipping");
    openapiFields.add("shippingDiscount");
    openapiFields.add("shippingTax");
    openapiFields.add("sku");
    openapiFields.add("taxData");
    openapiFields.add("taxableHandling");
    openapiFields.add("taxableLineItemCost");
    openapiFields.add("taxableShipping");
    openapiFields.add("transferQuantity");
    openapiFields.add("trueTransferQuantity");
    openapiFields.add("unitPrice");
    openapiFields.add("upc");
    openapiFields.add("variationProductCode");
    openapiFields.add("weight");
    openapiFields.add("weightUnit");
    openapiFields.add("weightedDutyAdjustment");
    openapiFields.add("weightedHandlingAdjustment");
    openapiFields.add("weightedHandlingTaxAdjustment");
    openapiFields.add("weightedLineItemTaxAdjustment");
    openapiFields.add("weightedShipmentAdjustment");
    openapiFields.add("weightedShippingAdjustment");
    openapiFields.add("weightedShippingTaxAdjustment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("handling");
    openapiRequiredFields.add("handlingTax");
    openapiRequiredFields.add("itemTax");
    openapiRequiredFields.add("lineId");
    openapiRequiredFields.add("quantity");
    openapiRequiredFields.add("shipping");
    openapiRequiredFields.add("shippingTax");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TransferredItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TransferredItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransferredItem is not found in the empty JSON string", TransferredItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!TransferredItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TransferredItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TransferredItem.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `appeasementReason`
      if (jsonObj.get("appeasementReason") != null && !jsonObj.get("appeasementReason").isJsonNull()) {
        FulfillmentAppeasementReason.validateJsonObject(jsonObj.getAsJsonObject("appeasementReason"));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AuditInfo0.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      if ((jsonObj.get("cartItemId") != null && !jsonObj.get("cartItemId").isJsonNull()) && !jsonObj.get("cartItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cartItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cartItemId").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("childItemIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `childItemIds` to be an array in the JSON string but got `%s`", jsonObj.get("childItemIds").toString()));
      }
      if ((jsonObj.get("creditCurrencyCode") != null && !jsonObj.get("creditCurrencyCode").isJsonNull()) && !jsonObj.get("creditCurrencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creditCurrencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creditCurrencyCode").toString()));
      }
      if (jsonObj.get("fulfillmentFields") != null && !jsonObj.get("fulfillmentFields").isJsonNull()) {
        JsonArray jsonArrayfulfillmentFields = jsonObj.getAsJsonArray("fulfillmentFields");
        if (jsonArrayfulfillmentFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fulfillmentFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fulfillmentFields` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentFields").toString()));
          }

          // validate the optional field `fulfillmentFields` (array)
          for (int i = 0; i < jsonArrayfulfillmentFields.size(); i++) {
            FulfillmentFulfillmentField.validateJsonObject(jsonArrayfulfillmentFields.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("fulfillmentLocationCode") != null && !jsonObj.get("fulfillmentLocationCode").isJsonNull()) && !jsonObj.get("fulfillmentLocationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentLocationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentLocationCode").toString()));
      }
      if (jsonObj.get("giftCards") != null && !jsonObj.get("giftCards").isJsonNull()) {
        JsonArray jsonArraygiftCards = jsonObj.getAsJsonArray("giftCards");
        if (jsonArraygiftCards != null) {
          // ensure the json data is an array
          if (!jsonObj.get("giftCards").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `giftCards` to be an array in the JSON string but got `%s`", jsonObj.get("giftCards").toString()));
          }

          // validate the optional field `giftCards` (array)
          for (int i = 0; i < jsonArraygiftCards.size(); i++) {
            FulfillmentGiftCard.validateJsonObject(jsonArraygiftCards.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("goodsType") != null && !jsonObj.get("goodsType").isJsonNull()) && !jsonObj.get("goodsType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `goodsType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("goodsType").toString()));
      }
      if ((jsonObj.get("imageUrl") != null && !jsonObj.get("imageUrl").isJsonNull()) && !jsonObj.get("imageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageUrl").toString()));
      }
      if (jsonObj.get("inventoryTags") != null && !jsonObj.get("inventoryTags").isJsonNull()) {
        JsonArray jsonArrayinventoryTags = jsonObj.getAsJsonArray("inventoryTags");
        if (jsonArrayinventoryTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inventoryTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventoryTags` to be an array in the JSON string but got `%s`", jsonObj.get("inventoryTags").toString()));
          }

          // validate the optional field `inventoryTags` (array)
          for (int i = 0; i < jsonArrayinventoryTags.size(); i++) {
            FulfillmentInventoryTag.validateJsonObject(jsonArrayinventoryTags.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("locatorName") != null && !jsonObj.get("locatorName").isJsonNull()) && !jsonObj.get("locatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locatorName").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("optionAttributeFQN") != null && !jsonObj.get("optionAttributeFQN").isJsonNull()) && !jsonObj.get("optionAttributeFQN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `optionAttributeFQN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("optionAttributeFQN").toString()));
      }
      if (jsonObj.get("options") != null && !jsonObj.get("options").isJsonNull()) {
        JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
        if (jsonArrayoptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("options").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
          }

          // validate the optional field `options` (array)
          for (int i = 0; i < jsonArrayoptions.size(); i++) {
            FulfillmentProductOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("originalOrderItemId") != null && !jsonObj.get("originalOrderItemId").isJsonNull()) && !jsonObj.get("originalOrderItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalOrderItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalOrderItemId").toString()));
      }
      if ((jsonObj.get("parentItemId") != null && !jsonObj.get("parentItemId").isJsonNull()) && !jsonObj.get("parentItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentItemId").toString()));
      }
      if ((jsonObj.get("partNumber") != null && !jsonObj.get("partNumber").isJsonNull()) && !jsonObj.get("partNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `partNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("partNumber").toString()));
      }
      if ((jsonObj.get("productCode") != null && !jsonObj.get("productCode").isJsonNull()) && !jsonObj.get("productCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productCode").toString()));
      }
      // validate the optional field `rejectedReason`
      if (jsonObj.get("rejectedReason") != null && !jsonObj.get("rejectedReason").isJsonNull()) {
        RejectedReason.validateJsonObject(jsonObj.getAsJsonObject("rejectedReason"));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
      if ((jsonObj.get("variationProductCode") != null && !jsonObj.get("variationProductCode").isJsonNull()) && !jsonObj.get("variationProductCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `variationProductCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("variationProductCode").toString()));
      }
      if ((jsonObj.get("weightUnit") != null && !jsonObj.get("weightUnit").isJsonNull()) && !jsonObj.get("weightUnit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `weightUnit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("weightUnit").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransferredItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransferredItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransferredItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransferredItem.class));

       return (TypeAdapter<T>) new TypeAdapter<TransferredItem>() {
           @Override
           public void write(JsonWriter out, TransferredItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TransferredItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TransferredItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TransferredItem
  * @throws IOException if the JSON string is invalid with respect to TransferredItem
  */
  public static TransferredItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransferredItem.class);
  }

 /**
  * Convert an instance of TransferredItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

