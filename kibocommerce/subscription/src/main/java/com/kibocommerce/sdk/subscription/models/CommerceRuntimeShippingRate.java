/*
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.subscription.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * How much the customer and merchant pay for shipping based on the current shipping rate.   The cost can differ between the merchant and customer depending on any merchant discounts or   extra fees.
 */
@ApiModel(description = "How much the customer and merchant pay for shipping based on the current shipping rate.   The cost can differ between the merchant and customer depending on any merchant discounts or   extra fees.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimeShippingRate implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_CODE = "shippingMethodCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_CODE)
  private String shippingMethodCode;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_NAME = "shippingMethodName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_NAME)
  private String shippingMethodName;

  public static final String SERIALIZED_NAME_SHIPPING_ZONE_CODE = "shippingZoneCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ZONE_CODE)
  private String shippingZoneCode;

  public static final String SERIALIZED_NAME_IS_VALID = "isValid";
  @SerializedName(SERIALIZED_NAME_IS_VALID)
  private Boolean isValid;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<String> messages = null;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Double price;

  public CommerceRuntimeShippingRate() {
  }

  public CommerceRuntimeShippingRate shippingMethodCode(String shippingMethodCode) {
    
    this.shippingMethodCode = shippingMethodCode;
    return this;
  }

   /**
   * Code that uniquely identifies the selected shipping method.
   * @return shippingMethodCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code that uniquely identifies the selected shipping method.")

  public String getShippingMethodCode() {
    return shippingMethodCode;
  }


  public void setShippingMethodCode(String shippingMethodCode) {
    this.shippingMethodCode = shippingMethodCode;
  }


  public CommerceRuntimeShippingRate shippingMethodName(String shippingMethodName) {
    
    this.shippingMethodName = shippingMethodName;
    return this;
  }

   /**
   * Shipping Method Name
   * @return shippingMethodName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Method Name")

  public String getShippingMethodName() {
    return shippingMethodName;
  }


  public void setShippingMethodName(String shippingMethodName) {
    this.shippingMethodName = shippingMethodName;
  }


  public CommerceRuntimeShippingRate shippingZoneCode(String shippingZoneCode) {
    
    this.shippingZoneCode = shippingZoneCode;
    return this;
  }

   /**
   * The shipping zone to which this rate applies.
   * @return shippingZoneCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The shipping zone to which this rate applies.")

  public String getShippingZoneCode() {
    return shippingZoneCode;
  }


  public void setShippingZoneCode(String shippingZoneCode) {
    this.shippingZoneCode = shippingZoneCode;
  }


  public CommerceRuntimeShippingRate isValid(Boolean isValid) {
    
    this.isValid = isValid;
    return this;
  }

   /**
   * If true, the shipping rate is valid.
   * @return isValid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the shipping rate is valid.")

  public Boolean getIsValid() {
    return isValid;
  }


  public void setIsValid(Boolean isValid) {
    this.isValid = isValid;
  }


  public CommerceRuntimeShippingRate messages(List<String> messages) {
    
    this.messages = messages;
    return this;
  }

  public CommerceRuntimeShippingRate addMessagesItem(String messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Messages and detail about why the shipping rate may be invalid.
   * @return messages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Messages and detail about why the shipping rate may be invalid.")

  public List<String> getMessages() {
    return messages;
  }


  public void setMessages(List<String> messages) {
    this.messages = messages;
  }


  public CommerceRuntimeShippingRate data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Custom data returned by the shipping service.
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom data returned by the shipping service.")

  public Object getData() {
    return data;
  }


  public void setData(Object data) {
    this.data = data;
  }


  public CommerceRuntimeShippingRate currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * ISO currency code such as US dollars. Currently, only USD is supported.
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO currency code such as US dollars. Currently, only USD is supported.")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public CommerceRuntimeShippingRate price(Double price) {
    
    this.price = price;
    return this;
  }

   /**
   * How much the customer pays for shipping which includes any shipping discounts that the merchant offers.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How much the customer pays for shipping which includes any shipping discounts that the merchant offers.")

  public Double getPrice() {
    return price;
  }


  public void setPrice(Double price) {
    this.price = price;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimeShippingRate commerceRuntimeShippingRate = (CommerceRuntimeShippingRate) o;
    return Objects.equals(this.shippingMethodCode, commerceRuntimeShippingRate.shippingMethodCode) &&
        Objects.equals(this.shippingMethodName, commerceRuntimeShippingRate.shippingMethodName) &&
        Objects.equals(this.shippingZoneCode, commerceRuntimeShippingRate.shippingZoneCode) &&
        Objects.equals(this.isValid, commerceRuntimeShippingRate.isValid) &&
        Objects.equals(this.messages, commerceRuntimeShippingRate.messages) &&
        Objects.equals(this.data, commerceRuntimeShippingRate.data) &&
        Objects.equals(this.currencyCode, commerceRuntimeShippingRate.currencyCode) &&
        Objects.equals(this.price, commerceRuntimeShippingRate.price);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(shippingMethodCode, shippingMethodName, shippingZoneCode, isValid, messages, data, currencyCode, price);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimeShippingRate {\n");
    sb.append("    shippingMethodCode: ").append(toIndentedString(shippingMethodCode)).append("\n");
    sb.append("    shippingMethodName: ").append(toIndentedString(shippingMethodName)).append("\n");
    sb.append("    shippingZoneCode: ").append(toIndentedString(shippingZoneCode)).append("\n");
    sb.append("    isValid: ").append(toIndentedString(isValid)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currencyCode");
    openapiFields.add("price");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimeShippingRate
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimeShippingRate.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimeShippingRate is not found in the empty JSON string", CommerceRuntimeShippingRate.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimeShippingRate.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimeShippingRate` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("shippingMethodCode") != null && !jsonObj.get("shippingMethodCode").isJsonNull()) && !jsonObj.get("shippingMethodCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodCode").toString()));
      }
      if ((jsonObj.get("shippingMethodName") != null && !jsonObj.get("shippingMethodName").isJsonNull()) && !jsonObj.get("shippingMethodName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodName").toString()));
      }
      if ((jsonObj.get("shippingZoneCode") != null && !jsonObj.get("shippingZoneCode").isJsonNull()) && !jsonObj.get("shippingZoneCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingZoneCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingZoneCode").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("messages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimeShippingRate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimeShippingRate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimeShippingRate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimeShippingRate.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimeShippingRate>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimeShippingRate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimeShippingRate read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimeShippingRate given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimeShippingRate
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimeShippingRate
  */
  public static CommerceRuntimeShippingRate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimeShippingRate.class);
  }

 /**
  * Convert an instance of CommerceRuntimeShippingRate to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

