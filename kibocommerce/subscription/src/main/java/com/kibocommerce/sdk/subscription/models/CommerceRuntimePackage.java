/*
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.subscription.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.subscription.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimeChangeMessage;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimePackageMeasurements;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimeTracking;
import com.kibocommerce.sdk.subscription.models.PackageItem;
import com.kibocommerce.sdk.subscription.models.PackingSlipItemDetail;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Describes a package that will be shipped to somebody
 */
@ApiModel(description = "Describes a package that will be shipped to somebody")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimePackage implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_CODE = "shippingMethodCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_CODE)
  private String shippingMethodCode;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_NAME = "shippingMethodName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_NAME)
  private String shippingMethodName;

  public static final String SERIALIZED_NAME_SHIPMENT_ID = "shipmentId";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_ID)
  private String shipmentId;

  public static final String SERIALIZED_NAME_TRACKING_NUMBER = "trackingNumber";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBER)
  private String trackingNumber;

  public static final String SERIALIZED_NAME_TRACKING_NUMBERS = "trackingNumbers";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBERS)
  private List<String> trackingNumbers = null;

  public static final String SERIALIZED_NAME_PACKAGING_TYPE = "packagingType";
  @SerializedName(SERIALIZED_NAME_PACKAGING_TYPE)
  private String packagingType;

  public static final String SERIALIZED_NAME_HAS_LABEL = "hasLabel";
  @SerializedName(SERIALIZED_NAME_HAS_LABEL)
  private Boolean hasLabel;

  public static final String SERIALIZED_NAME_MEASUREMENTS = "measurements";
  @SerializedName(SERIALIZED_NAME_MEASUREMENTS)
  private CommerceRuntimePackageMeasurements measurements;

  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private String carrier;

  public static final String SERIALIZED_NAME_SIGNATURE_REQUIRED = "signatureRequired";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_REQUIRED)
  private Boolean signatureRequired;

  public static final String SERIALIZED_NAME_TRACKINGS = "trackings";
  @SerializedName(SERIALIZED_NAME_TRACKINGS)
  private List<CommerceRuntimeTracking> trackings = null;

  public static final String SERIALIZED_NAME_PACKING_SLIP_ITEM_DETAILS = "packingSlipItemDetails";
  @SerializedName(SERIALIZED_NAME_PACKING_SLIP_ITEM_DETAILS)
  private List<PackingSlipItemDetail> packingSlipItemDetails = null;

  public static final String SERIALIZED_NAME_PACKING_SLIP_NUMBER = "packingSlipNumber";
  @SerializedName(SERIALIZED_NAME_PACKING_SLIP_NUMBER)
  private Integer packingSlipNumber;

  public static final String SERIALIZED_NAME_RETURN_TRACKINGS = "returnTrackings";
  @SerializedName(SERIALIZED_NAME_RETURN_TRACKINGS)
  private List<CommerceRuntimeTracking> returnTrackings = null;

  public static final String SERIALIZED_NAME_RETURN_TRACKING_NUMBERS = "returnTrackingNumbers";
  @SerializedName(SERIALIZED_NAME_RETURN_TRACKING_NUMBERS)
  private List<String> returnTrackingNumbers = null;

  public static final String SERIALIZED_NAME_RETURN_CARRIER = "returnCarrier";
  @SerializedName(SERIALIZED_NAME_RETURN_CARRIER)
  private String returnCarrier;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "packageId";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private String packageId;

  public static final String SERIALIZED_NAME_MANIFEST_ID = "manifestId";
  @SerializedName(SERIALIZED_NAME_MANIFEST_ID)
  private String manifestId;

  public static final String SERIALIZED_NAME_LABEL_FORMAT = "labelFormat";
  @SerializedName(SERIALIZED_NAME_LABEL_FORMAT)
  private String labelFormat;

  public static final String SERIALIZED_NAME_INTEGRATOR_ID = "integratorId";
  @SerializedName(SERIALIZED_NAME_INTEGRATOR_ID)
  private String integratorId;

  public static final String SERIALIZED_NAME_FXCB_PACK_NOTIFICATION_ID = "fxcbPackNotificationId";
  @SerializedName(SERIALIZED_NAME_FXCB_PACK_NOTIFICATION_ID)
  private String fxcbPackNotificationId;

  public static final String SERIALIZED_NAME_FXCB_DOCUMENTS_URL = "fxcbDocumentsUrl";
  @SerializedName(SERIALIZED_NAME_FXCB_DOCUMENTS_URL)
  private String fxcbDocumentsUrl;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<PackageItem> items = null;

  public static final String SERIALIZED_NAME_FULFILLMENT_DATE = "fulfillmentDate";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_DATE)
  private OffsetDateTime fulfillmentDate;

  public static final String SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE = "fulfillmentLocationCode";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE)
  private String fulfillmentLocationCode;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_AVAILABLE_ACTIONS = "availableActions";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_ACTIONS)
  private List<String> availableActions = null;

  public static final String SERIALIZED_NAME_CHANGE_MESSAGES = "changeMessages";
  @SerializedName(SERIALIZED_NAME_CHANGE_MESSAGES)
  private List<CommerceRuntimeChangeMessage> changeMessages = null;

  public CommerceRuntimePackage() {
  }

  public CommerceRuntimePackage shippingMethodCode(String shippingMethodCode) {
    
    this.shippingMethodCode = shippingMethodCode;
    return this;
  }

   /**
   * Code describing the shipping method.
   * @return shippingMethodCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code describing the shipping method.")

  public String getShippingMethodCode() {
    return shippingMethodCode;
  }


  public void setShippingMethodCode(String shippingMethodCode) {
    this.shippingMethodCode = shippingMethodCode;
  }


  public CommerceRuntimePackage shippingMethodName(String shippingMethodName) {
    
    this.shippingMethodName = shippingMethodName;
    return this;
  }

   /**
   * Name of the shipping method
   * @return shippingMethodName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the shipping method")

  public String getShippingMethodName() {
    return shippingMethodName;
  }


  public void setShippingMethodName(String shippingMethodName) {
    this.shippingMethodName = shippingMethodName;
  }


  public CommerceRuntimePackage shipmentId(String shipmentId) {
    
    this.shipmentId = shipmentId;
    return this;
  }

   /**
   * ID of the related shipment
   * @return shipmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the related shipment")

  public String getShipmentId() {
    return shipmentId;
  }


  public void setShipmentId(String shipmentId) {
    this.shipmentId = shipmentId;
  }


  public CommerceRuntimePackage trackingNumber(String trackingNumber) {
    
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * Tracking number of this package (to support classic use cases)
   * @return trackingNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tracking number of this package (to support classic use cases)")

  public String getTrackingNumber() {
    return trackingNumber;
  }


  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }


  public CommerceRuntimePackage trackingNumbers(List<String> trackingNumbers) {
    
    this.trackingNumbers = trackingNumbers;
    return this;
  }

  public CommerceRuntimePackage addTrackingNumbersItem(String trackingNumbersItem) {
    if (this.trackingNumbers == null) {
      this.trackingNumbers = new ArrayList<>();
    }
    this.trackingNumbers.add(trackingNumbersItem);
    return this;
  }

   /**
   * Tracking number of this package
   * @return trackingNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tracking number of this package")

  public List<String> getTrackingNumbers() {
    return trackingNumbers;
  }


  public void setTrackingNumbers(List<String> trackingNumbers) {
    this.trackingNumbers = trackingNumbers;
  }


  public CommerceRuntimePackage packagingType(String packagingType) {
    
    this.packagingType = packagingType;
    return this;
  }

   /**
   * Packaging type of this package
   * @return packagingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Packaging type of this package")

  public String getPackagingType() {
    return packagingType;
  }


  public void setPackagingType(String packagingType) {
    this.packagingType = packagingType;
  }


  public CommerceRuntimePackage hasLabel(Boolean hasLabel) {
    
    this.hasLabel = hasLabel;
    return this;
  }

   /**
   * If there is a shipping label present for this Package, this will be set to true
   * @return hasLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If there is a shipping label present for this Package, this will be set to true")

  public Boolean getHasLabel() {
    return hasLabel;
  }


  public void setHasLabel(Boolean hasLabel) {
    this.hasLabel = hasLabel;
  }


  public CommerceRuntimePackage measurements(CommerceRuntimePackageMeasurements measurements) {
    
    this.measurements = measurements;
    return this;
  }

   /**
   * Get measurements
   * @return measurements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimePackageMeasurements getMeasurements() {
    return measurements;
  }


  public void setMeasurements(CommerceRuntimePackageMeasurements measurements) {
    this.measurements = measurements;
  }


  public CommerceRuntimePackage carrier(String carrier) {
    
    this.carrier = carrier;
    return this;
  }

   /**
   * Carrier of this package
   * @return carrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Carrier of this package")

  public String getCarrier() {
    return carrier;
  }


  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public CommerceRuntimePackage signatureRequired(Boolean signatureRequired) {
    
    this.signatureRequired = signatureRequired;
    return this;
  }

   /**
   * SignatureRequired for this package
   * @return signatureRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SignatureRequired for this package")

  public Boolean getSignatureRequired() {
    return signatureRequired;
  }


  public void setSignatureRequired(Boolean signatureRequired) {
    this.signatureRequired = signatureRequired;
  }


  public CommerceRuntimePackage trackings(List<CommerceRuntimeTracking> trackings) {
    
    this.trackings = trackings;
    return this;
  }

  public CommerceRuntimePackage addTrackingsItem(CommerceRuntimeTracking trackingsItem) {
    if (this.trackings == null) {
      this.trackings = new ArrayList<>();
    }
    this.trackings.add(trackingsItem);
    return this;
  }

   /**
   * Tracking number and url data for this package
   * @return trackings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Tracking number and url data for this package")

  public List<CommerceRuntimeTracking> getTrackings() {
    return trackings;
  }


  public void setTrackings(List<CommerceRuntimeTracking> trackings) {
    this.trackings = trackings;
  }


  public CommerceRuntimePackage packingSlipItemDetails(List<PackingSlipItemDetail> packingSlipItemDetails) {
    
    this.packingSlipItemDetails = packingSlipItemDetails;
    return this;
  }

  public CommerceRuntimePackage addPackingSlipItemDetailsItem(PackingSlipItemDetail packingSlipItemDetailsItem) {
    if (this.packingSlipItemDetails == null) {
      this.packingSlipItemDetails = new ArrayList<>();
    }
    this.packingSlipItemDetails.add(packingSlipItemDetailsItem);
    return this;
  }

   /**
   * PackingSlipItemDetails for this package
   * @return packingSlipItemDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PackingSlipItemDetails for this package")

  public List<PackingSlipItemDetail> getPackingSlipItemDetails() {
    return packingSlipItemDetails;
  }


  public void setPackingSlipItemDetails(List<PackingSlipItemDetail> packingSlipItemDetails) {
    this.packingSlipItemDetails = packingSlipItemDetails;
  }


  public CommerceRuntimePackage packingSlipNumber(Integer packingSlipNumber) {
    
    this.packingSlipNumber = packingSlipNumber;
    return this;
  }

   /**
   * PackingSlipNumber for this package
   * @return packingSlipNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PackingSlipNumber for this package")

  public Integer getPackingSlipNumber() {
    return packingSlipNumber;
  }


  public void setPackingSlipNumber(Integer packingSlipNumber) {
    this.packingSlipNumber = packingSlipNumber;
  }


  public CommerceRuntimePackage returnTrackings(List<CommerceRuntimeTracking> returnTrackings) {
    
    this.returnTrackings = returnTrackings;
    return this;
  }

  public CommerceRuntimePackage addReturnTrackingsItem(CommerceRuntimeTracking returnTrackingsItem) {
    if (this.returnTrackings == null) {
      this.returnTrackings = new ArrayList<>();
    }
    this.returnTrackings.add(returnTrackingsItem);
    return this;
  }

   /**
   * Get returnTrackings
   * @return returnTrackings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CommerceRuntimeTracking> getReturnTrackings() {
    return returnTrackings;
  }


  public void setReturnTrackings(List<CommerceRuntimeTracking> returnTrackings) {
    this.returnTrackings = returnTrackings;
  }


  public CommerceRuntimePackage returnTrackingNumbers(List<String> returnTrackingNumbers) {
    
    this.returnTrackingNumbers = returnTrackingNumbers;
    return this;
  }

  public CommerceRuntimePackage addReturnTrackingNumbersItem(String returnTrackingNumbersItem) {
    if (this.returnTrackingNumbers == null) {
      this.returnTrackingNumbers = new ArrayList<>();
    }
    this.returnTrackingNumbers.add(returnTrackingNumbersItem);
    return this;
  }

   /**
   * Get returnTrackingNumbers
   * @return returnTrackingNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getReturnTrackingNumbers() {
    return returnTrackingNumbers;
  }


  public void setReturnTrackingNumbers(List<String> returnTrackingNumbers) {
    this.returnTrackingNumbers = returnTrackingNumbers;
  }


  public CommerceRuntimePackage returnCarrier(String returnCarrier) {
    
    this.returnCarrier = returnCarrier;
    return this;
  }

   /**
   * Get returnCarrier
   * @return returnCarrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReturnCarrier() {
    return returnCarrier;
  }


  public void setReturnCarrier(String returnCarrier) {
    this.returnCarrier = returnCarrier;
  }


  public CommerceRuntimePackage packageId(String packageId) {
    
    this.packageId = packageId;
    return this;
  }

   /**
   * Get packageId
   * @return packageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackageId() {
    return packageId;
  }


  public void setPackageId(String packageId) {
    this.packageId = packageId;
  }


  public CommerceRuntimePackage manifestId(String manifestId) {
    
    this.manifestId = manifestId;
    return this;
  }

   /**
   * Get manifestId
   * @return manifestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getManifestId() {
    return manifestId;
  }


  public void setManifestId(String manifestId) {
    this.manifestId = manifestId;
  }


  public CommerceRuntimePackage labelFormat(String labelFormat) {
    
    this.labelFormat = labelFormat;
    return this;
  }

   /**
   * Get labelFormat
   * @return labelFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLabelFormat() {
    return labelFormat;
  }


  public void setLabelFormat(String labelFormat) {
    this.labelFormat = labelFormat;
  }


  public CommerceRuntimePackage integratorId(String integratorId) {
    
    this.integratorId = integratorId;
    return this;
  }

   /**
   * Get integratorId
   * @return integratorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIntegratorId() {
    return integratorId;
  }


  public void setIntegratorId(String integratorId) {
    this.integratorId = integratorId;
  }


  public CommerceRuntimePackage fxcbPackNotificationId(String fxcbPackNotificationId) {
    
    this.fxcbPackNotificationId = fxcbPackNotificationId;
    return this;
  }

   /**
   * Get fxcbPackNotificationId
   * @return fxcbPackNotificationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFxcbPackNotificationId() {
    return fxcbPackNotificationId;
  }


  public void setFxcbPackNotificationId(String fxcbPackNotificationId) {
    this.fxcbPackNotificationId = fxcbPackNotificationId;
  }


  public CommerceRuntimePackage fxcbDocumentsUrl(String fxcbDocumentsUrl) {
    
    this.fxcbDocumentsUrl = fxcbDocumentsUrl;
    return this;
  }

   /**
   * Get fxcbDocumentsUrl
   * @return fxcbDocumentsUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFxcbDocumentsUrl() {
    return fxcbDocumentsUrl;
  }


  public void setFxcbDocumentsUrl(String fxcbDocumentsUrl) {
    this.fxcbDocumentsUrl = fxcbDocumentsUrl;
  }


  public CommerceRuntimePackage attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public CommerceRuntimePackage putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public CommerceRuntimePackage id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * ID of the fulfillment unit.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the fulfillment unit.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CommerceRuntimePackage code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * A human-readable identifier for this fulfillment unit.  If not set on create, will be autogenerated as a string of the form      {fulfillmentUnitType} #{next available int}
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human-readable identifier for this fulfillment unit.  If not set on create, will be autogenerated as a string of the form      {fulfillmentUnitType} #{next available int}")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public CommerceRuntimePackage status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of the fulfillment unit  See FulfillmentStatusConst
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the fulfillment unit  See FulfillmentStatusConst")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public CommerceRuntimePackage items(List<PackageItem> items) {
    
    this.items = items;
    return this;
  }

  public CommerceRuntimePackage addItemsItem(PackageItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * List of items in the fulfillment unit
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of items in the fulfillment unit")

  public List<PackageItem> getItems() {
    return items;
  }


  public void setItems(List<PackageItem> items) {
    this.items = items;
  }


  public CommerceRuntimePackage fulfillmentDate(OffsetDateTime fulfillmentDate) {
    
    this.fulfillmentDate = fulfillmentDate;
    return this;
  }

   /**
   * Date of the pickup
   * @return fulfillmentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the pickup")

  public OffsetDateTime getFulfillmentDate() {
    return fulfillmentDate;
  }


  public void setFulfillmentDate(OffsetDateTime fulfillmentDate) {
    this.fulfillmentDate = fulfillmentDate;
  }


  public CommerceRuntimePackage fulfillmentLocationCode(String fulfillmentLocationCode) {
    
    this.fulfillmentLocationCode = fulfillmentLocationCode;
    return this;
  }

   /**
   * Location code from which to obtain this item
   * @return fulfillmentLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location code from which to obtain this item")

  public String getFulfillmentLocationCode() {
    return fulfillmentLocationCode;
  }


  public void setFulfillmentLocationCode(String fulfillmentLocationCode) {
    this.fulfillmentLocationCode = fulfillmentLocationCode;
  }


  public CommerceRuntimePackage auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public CommerceRuntimePackage availableActions(List<String> availableActions) {
    
    this.availableActions = availableActions;
    return this;
  }

  public CommerceRuntimePackage addAvailableActionsItem(String availableActionsItem) {
    if (this.availableActions == null) {
      this.availableActions = new ArrayList<>();
    }
    this.availableActions.add(availableActionsItem);
    return this;
  }

   /**
   * Actions that can be taken on this fulfillment unit
   * @return availableActions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Actions that can be taken on this fulfillment unit")

  public List<String> getAvailableActions() {
    return availableActions;
  }


  public void setAvailableActions(List<String> availableActions) {
    this.availableActions = availableActions;
  }


  public CommerceRuntimePackage changeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    
    this.changeMessages = changeMessages;
    return this;
  }

  public CommerceRuntimePackage addChangeMessagesItem(CommerceRuntimeChangeMessage changeMessagesItem) {
    if (this.changeMessages == null) {
      this.changeMessages = new ArrayList<>();
    }
    this.changeMessages.add(changeMessagesItem);
    return this;
  }

   /**
   * Change messages related to the fulfillment unit.
   * @return changeMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Change messages related to the fulfillment unit.")

  public List<CommerceRuntimeChangeMessage> getChangeMessages() {
    return changeMessages;
  }


  public void setChangeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    this.changeMessages = changeMessages;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimePackage commerceRuntimePackage = (CommerceRuntimePackage) o;
    return Objects.equals(this.shippingMethodCode, commerceRuntimePackage.shippingMethodCode) &&
        Objects.equals(this.shippingMethodName, commerceRuntimePackage.shippingMethodName) &&
        Objects.equals(this.shipmentId, commerceRuntimePackage.shipmentId) &&
        Objects.equals(this.trackingNumber, commerceRuntimePackage.trackingNumber) &&
        Objects.equals(this.trackingNumbers, commerceRuntimePackage.trackingNumbers) &&
        Objects.equals(this.packagingType, commerceRuntimePackage.packagingType) &&
        Objects.equals(this.hasLabel, commerceRuntimePackage.hasLabel) &&
        Objects.equals(this.measurements, commerceRuntimePackage.measurements) &&
        Objects.equals(this.carrier, commerceRuntimePackage.carrier) &&
        Objects.equals(this.signatureRequired, commerceRuntimePackage.signatureRequired) &&
        Objects.equals(this.trackings, commerceRuntimePackage.trackings) &&
        Objects.equals(this.packingSlipItemDetails, commerceRuntimePackage.packingSlipItemDetails) &&
        Objects.equals(this.packingSlipNumber, commerceRuntimePackage.packingSlipNumber) &&
        Objects.equals(this.returnTrackings, commerceRuntimePackage.returnTrackings) &&
        Objects.equals(this.returnTrackingNumbers, commerceRuntimePackage.returnTrackingNumbers) &&
        Objects.equals(this.returnCarrier, commerceRuntimePackage.returnCarrier) &&
        Objects.equals(this.packageId, commerceRuntimePackage.packageId) &&
        Objects.equals(this.manifestId, commerceRuntimePackage.manifestId) &&
        Objects.equals(this.labelFormat, commerceRuntimePackage.labelFormat) &&
        Objects.equals(this.integratorId, commerceRuntimePackage.integratorId) &&
        Objects.equals(this.fxcbPackNotificationId, commerceRuntimePackage.fxcbPackNotificationId) &&
        Objects.equals(this.fxcbDocumentsUrl, commerceRuntimePackage.fxcbDocumentsUrl) &&
        Objects.equals(this.attributes, commerceRuntimePackage.attributes) &&
        Objects.equals(this.id, commerceRuntimePackage.id) &&
        Objects.equals(this.code, commerceRuntimePackage.code) &&
        Objects.equals(this.status, commerceRuntimePackage.status) &&
        Objects.equals(this.items, commerceRuntimePackage.items) &&
        Objects.equals(this.fulfillmentDate, commerceRuntimePackage.fulfillmentDate) &&
        Objects.equals(this.fulfillmentLocationCode, commerceRuntimePackage.fulfillmentLocationCode) &&
        Objects.equals(this.auditInfo, commerceRuntimePackage.auditInfo) &&
        Objects.equals(this.availableActions, commerceRuntimePackage.availableActions) &&
        Objects.equals(this.changeMessages, commerceRuntimePackage.changeMessages);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(shippingMethodCode, shippingMethodName, shipmentId, trackingNumber, trackingNumbers, packagingType, hasLabel, measurements, carrier, signatureRequired, trackings, packingSlipItemDetails, packingSlipNumber, returnTrackings, returnTrackingNumbers, returnCarrier, packageId, manifestId, labelFormat, integratorId, fxcbPackNotificationId, fxcbDocumentsUrl, attributes, id, code, status, items, fulfillmentDate, fulfillmentLocationCode, auditInfo, availableActions, changeMessages);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimePackage {\n");
    sb.append("    shippingMethodCode: ").append(toIndentedString(shippingMethodCode)).append("\n");
    sb.append("    shippingMethodName: ").append(toIndentedString(shippingMethodName)).append("\n");
    sb.append("    shipmentId: ").append(toIndentedString(shipmentId)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    trackingNumbers: ").append(toIndentedString(trackingNumbers)).append("\n");
    sb.append("    packagingType: ").append(toIndentedString(packagingType)).append("\n");
    sb.append("    hasLabel: ").append(toIndentedString(hasLabel)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    signatureRequired: ").append(toIndentedString(signatureRequired)).append("\n");
    sb.append("    trackings: ").append(toIndentedString(trackings)).append("\n");
    sb.append("    packingSlipItemDetails: ").append(toIndentedString(packingSlipItemDetails)).append("\n");
    sb.append("    packingSlipNumber: ").append(toIndentedString(packingSlipNumber)).append("\n");
    sb.append("    returnTrackings: ").append(toIndentedString(returnTrackings)).append("\n");
    sb.append("    returnTrackingNumbers: ").append(toIndentedString(returnTrackingNumbers)).append("\n");
    sb.append("    returnCarrier: ").append(toIndentedString(returnCarrier)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    manifestId: ").append(toIndentedString(manifestId)).append("\n");
    sb.append("    labelFormat: ").append(toIndentedString(labelFormat)).append("\n");
    sb.append("    integratorId: ").append(toIndentedString(integratorId)).append("\n");
    sb.append("    fxcbPackNotificationId: ").append(toIndentedString(fxcbPackNotificationId)).append("\n");
    sb.append("    fxcbDocumentsUrl: ").append(toIndentedString(fxcbDocumentsUrl)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    fulfillmentDate: ").append(toIndentedString(fulfillmentDate)).append("\n");
    sb.append("    fulfillmentLocationCode: ").append(toIndentedString(fulfillmentLocationCode)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    availableActions: ").append(toIndentedString(availableActions)).append("\n");
    sb.append("    changeMessages: ").append(toIndentedString(changeMessages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("code");
    openapiFields.add("status");
    openapiFields.add("items");
    openapiFields.add("fulfillmentDate");
    openapiFields.add("fulfillmentLocationCode");
    openapiFields.add("auditInfo");
    openapiFields.add("availableActions");
    openapiFields.add("changeMessages");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimePackage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimePackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimePackage is not found in the empty JSON string", CommerceRuntimePackage.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimePackage.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimePackage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("shippingMethodCode") != null && !jsonObj.get("shippingMethodCode").isJsonNull()) && !jsonObj.get("shippingMethodCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodCode").toString()));
      }
      if ((jsonObj.get("shippingMethodName") != null && !jsonObj.get("shippingMethodName").isJsonNull()) && !jsonObj.get("shippingMethodName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodName").toString()));
      }
      if ((jsonObj.get("shipmentId") != null && !jsonObj.get("shipmentId").isJsonNull()) && !jsonObj.get("shipmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipmentId").toString()));
      }
      if ((jsonObj.get("trackingNumber") != null && !jsonObj.get("trackingNumber").isJsonNull()) && !jsonObj.get("trackingNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackingNumber").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("trackingNumbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("trackingNumbers").toString()));
      }
      if ((jsonObj.get("packagingType") != null && !jsonObj.get("packagingType").isJsonNull()) && !jsonObj.get("packagingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packagingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packagingType").toString()));
      }
      // validate the optional field `measurements`
      if (jsonObj.get("measurements") != null && !jsonObj.get("measurements").isJsonNull()) {
        CommerceRuntimePackageMeasurements.validateJsonObject(jsonObj.getAsJsonObject("measurements"));
      }
      if ((jsonObj.get("carrier") != null && !jsonObj.get("carrier").isJsonNull()) && !jsonObj.get("carrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier").toString()));
      }
      if (jsonObj.get("trackings") != null && !jsonObj.get("trackings").isJsonNull()) {
        JsonArray jsonArraytrackings = jsonObj.getAsJsonArray("trackings");
        if (jsonArraytrackings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trackings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trackings` to be an array in the JSON string but got `%s`", jsonObj.get("trackings").toString()));
          }

          // validate the optional field `trackings` (array)
          for (int i = 0; i < jsonArraytrackings.size(); i++) {
            CommerceRuntimeTracking.validateJsonObject(jsonArraytrackings.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("packingSlipItemDetails") != null && !jsonObj.get("packingSlipItemDetails").isJsonNull()) {
        JsonArray jsonArraypackingSlipItemDetails = jsonObj.getAsJsonArray("packingSlipItemDetails");
        if (jsonArraypackingSlipItemDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("packingSlipItemDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `packingSlipItemDetails` to be an array in the JSON string but got `%s`", jsonObj.get("packingSlipItemDetails").toString()));
          }

          // validate the optional field `packingSlipItemDetails` (array)
          for (int i = 0; i < jsonArraypackingSlipItemDetails.size(); i++) {
            PackingSlipItemDetail.validateJsonObject(jsonArraypackingSlipItemDetails.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("returnTrackings") != null && !jsonObj.get("returnTrackings").isJsonNull()) {
        JsonArray jsonArrayreturnTrackings = jsonObj.getAsJsonArray("returnTrackings");
        if (jsonArrayreturnTrackings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("returnTrackings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `returnTrackings` to be an array in the JSON string but got `%s`", jsonObj.get("returnTrackings").toString()));
          }

          // validate the optional field `returnTrackings` (array)
          for (int i = 0; i < jsonArrayreturnTrackings.size(); i++) {
            CommerceRuntimeTracking.validateJsonObject(jsonArrayreturnTrackings.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("returnTrackingNumbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnTrackingNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("returnTrackingNumbers").toString()));
      }
      if ((jsonObj.get("returnCarrier") != null && !jsonObj.get("returnCarrier").isJsonNull()) && !jsonObj.get("returnCarrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnCarrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnCarrier").toString()));
      }
      if ((jsonObj.get("packageId") != null && !jsonObj.get("packageId").isJsonNull()) && !jsonObj.get("packageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageId").toString()));
      }
      if ((jsonObj.get("manifestId") != null && !jsonObj.get("manifestId").isJsonNull()) && !jsonObj.get("manifestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manifestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manifestId").toString()));
      }
      if ((jsonObj.get("labelFormat") != null && !jsonObj.get("labelFormat").isJsonNull()) && !jsonObj.get("labelFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labelFormat").toString()));
      }
      if ((jsonObj.get("integratorId") != null && !jsonObj.get("integratorId").isJsonNull()) && !jsonObj.get("integratorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integratorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integratorId").toString()));
      }
      if ((jsonObj.get("fxcbPackNotificationId") != null && !jsonObj.get("fxcbPackNotificationId").isJsonNull()) && !jsonObj.get("fxcbPackNotificationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fxcbPackNotificationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fxcbPackNotificationId").toString()));
      }
      if ((jsonObj.get("fxcbDocumentsUrl") != null && !jsonObj.get("fxcbDocumentsUrl").isJsonNull()) && !jsonObj.get("fxcbDocumentsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fxcbDocumentsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fxcbDocumentsUrl").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            PackageItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("fulfillmentLocationCode") != null && !jsonObj.get("fulfillmentLocationCode").isJsonNull()) && !jsonObj.get("fulfillmentLocationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentLocationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentLocationCode").toString()));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("availableActions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `availableActions` to be an array in the JSON string but got `%s`", jsonObj.get("availableActions").toString()));
      }
      if (jsonObj.get("changeMessages") != null && !jsonObj.get("changeMessages").isJsonNull()) {
        JsonArray jsonArraychangeMessages = jsonObj.getAsJsonArray("changeMessages");
        if (jsonArraychangeMessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("changeMessages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `changeMessages` to be an array in the JSON string but got `%s`", jsonObj.get("changeMessages").toString()));
          }

          // validate the optional field `changeMessages` (array)
          for (int i = 0; i < jsonArraychangeMessages.size(); i++) {
            CommerceRuntimeChangeMessage.validateJsonObject(jsonArraychangeMessages.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimePackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimePackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimePackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimePackage.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimePackage>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimePackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimePackage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimePackage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimePackage
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimePackage
  */
  public static CommerceRuntimePackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimePackage.class);
  }

 /**
  * Convert an instance of CommerceRuntimePackage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

