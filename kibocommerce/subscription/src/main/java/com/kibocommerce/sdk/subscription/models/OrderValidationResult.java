/*
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.subscription.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.subscription.models.OrderValidationMessage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * The result of an order validator.
 */
@ApiModel(description = "The result of an order validator.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class OrderValidationResult implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_VALIDATION_ID = "validationId";
  @SerializedName(SERIALIZED_NAME_VALIDATION_ID)
  private String validationId;

  public static final String SERIALIZED_NAME_VALIDATOR_NAME = "validatorName";
  @SerializedName(SERIALIZED_NAME_VALIDATOR_NAME)
  private String validatorName;

  public static final String SERIALIZED_NAME_VALIDATOR_TYPE = "validatorType";
  @SerializedName(SERIALIZED_NAME_VALIDATOR_TYPE)
  private String validatorType;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<OrderValidationMessage> messages = null;

  public OrderValidationResult() {
  }

  public OrderValidationResult validationId(String validationId) {
    
    this.validationId = validationId;
    return this;
  }

   /**
   * Identifier set by the capability that states the id of this specific validation attempt
   * @return validationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier set by the capability that states the id of this specific validation attempt")

  public String getValidationId() {
    return validationId;
  }


  public void setValidationId(String validationId) {
    this.validationId = validationId;
  }


  public OrderValidationResult validatorName(String validatorName) {
    
    this.validatorName = validatorName;
    return this;
  }

   /**
   * Identifier set by the capability that states the specific name of this validator.
   * @return validatorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifier set by the capability that states the specific name of this validator.")

  public String getValidatorName() {
    return validatorName;
  }


  public void setValidatorName(String validatorName) {
    this.validatorName = validatorName;
  }


  public OrderValidationResult validatorType(String validatorType) {
    
    this.validatorType = validatorType;
    return this;
  }

   /**
   * Identifies the type of the validator (types are enumerated in OrderValidatorTypeConst)
   * @return validatorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the type of the validator (types are enumerated in OrderValidatorTypeConst)")

  public String getValidatorType() {
    return validatorType;
  }


  public void setValidatorType(String validatorType) {
    this.validatorType = validatorType;
  }


  public OrderValidationResult status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of the order validation result.  See OrderValidatorStatusConst for options.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Status of the order validation result.  See OrderValidatorStatusConst for options.")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public OrderValidationResult createdDate(OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * DateTime that this validation result was created
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "DateTime that this validation result was created")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public OrderValidationResult messages(List<OrderValidationMessage> messages) {
    
    this.messages = messages;
    return this;
  }

  public OrderValidationResult addMessagesItem(OrderValidationMessage messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * Messages returned by the order validator
   * @return messages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Messages returned by the order validator")

  public List<OrderValidationMessage> getMessages() {
    return messages;
  }


  public void setMessages(List<OrderValidationMessage> messages) {
    this.messages = messages;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderValidationResult orderValidationResult = (OrderValidationResult) o;
    return Objects.equals(this.validationId, orderValidationResult.validationId) &&
        Objects.equals(this.validatorName, orderValidationResult.validatorName) &&
        Objects.equals(this.validatorType, orderValidationResult.validatorType) &&
        Objects.equals(this.status, orderValidationResult.status) &&
        Objects.equals(this.createdDate, orderValidationResult.createdDate) &&
        Objects.equals(this.messages, orderValidationResult.messages);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(validationId, validatorName, validatorType, status, createdDate, messages);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderValidationResult {\n");
    sb.append("    validationId: ").append(toIndentedString(validationId)).append("\n");
    sb.append("    validatorName: ").append(toIndentedString(validatorName)).append("\n");
    sb.append("    validatorType: ").append(toIndentedString(validatorType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("validationId");
    openapiFields.add("validatorName");
    openapiFields.add("validatorType");
    openapiFields.add("status");
    openapiFields.add("createdDate");
    openapiFields.add("messages");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrderValidationResult
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OrderValidationResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderValidationResult is not found in the empty JSON string", OrderValidationResult.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!OrderValidationResult.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderValidationResult` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("validationId") != null && !jsonObj.get("validationId").isJsonNull()) && !jsonObj.get("validationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `validationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("validationId").toString()));
      }
      if ((jsonObj.get("validatorName") != null && !jsonObj.get("validatorName").isJsonNull()) && !jsonObj.get("validatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `validatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("validatorName").toString()));
      }
      if ((jsonObj.get("validatorType") != null && !jsonObj.get("validatorType").isJsonNull()) && !jsonObj.get("validatorType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `validatorType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("validatorType").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            OrderValidationMessage.validateJsonObject(jsonArraymessages.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderValidationResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderValidationResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderValidationResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderValidationResult.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderValidationResult>() {
           @Override
           public void write(JsonWriter out, OrderValidationResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderValidationResult read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrderValidationResult given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrderValidationResult
  * @throws IOException if the JSON string is invalid with respect to OrderValidationResult
  */
  public static OrderValidationResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderValidationResult.class);
  }

 /**
  * Convert an instance of OrderValidationResult to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

