/*
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.subscription.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * PackingSlipItemDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PackingSlipItemDetail implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_LINE_ID = "lineId";
  @SerializedName(SERIALIZED_NAME_LINE_ID)
  private Integer lineId;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_ITEM_ID = "originalOrderItemId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_ITEM_ID)
  private String originalOrderItemId;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public PackingSlipItemDetail() {
  }

  public PackingSlipItemDetail attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public PackingSlipItemDetail putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Gets or Sets Attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gets or Sets Attributes")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public PackingSlipItemDetail lineId(Integer lineId) {
    
    this.lineId = lineId;
    return this;
  }

   /**
   * Gets or Sets LineId
   * @return lineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gets or Sets LineId")

  public Integer getLineId() {
    return lineId;
  }


  public void setLineId(Integer lineId) {
    this.lineId = lineId;
  }


  public PackingSlipItemDetail originalOrderItemId(String originalOrderItemId) {
    
    this.originalOrderItemId = originalOrderItemId;
    return this;
  }

   /**
   * Gets or Sets OriginalOrderItemId
   * @return originalOrderItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gets or Sets OriginalOrderItemId")

  public String getOriginalOrderItemId() {
    return originalOrderItemId;
  }


  public void setOriginalOrderItemId(String originalOrderItemId) {
    this.originalOrderItemId = originalOrderItemId;
  }


  public PackingSlipItemDetail quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Gets or Sets Quantity
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Gets or Sets Quantity")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackingSlipItemDetail packingSlipItemDetail = (PackingSlipItemDetail) o;
    return Objects.equals(this.attributes, packingSlipItemDetail.attributes) &&
        Objects.equals(this.lineId, packingSlipItemDetail.lineId) &&
        Objects.equals(this.originalOrderItemId, packingSlipItemDetail.originalOrderItemId) &&
        Objects.equals(this.quantity, packingSlipItemDetail.quantity);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, lineId, originalOrderItemId, quantity);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackingSlipItemDetail {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    originalOrderItemId: ").append(toIndentedString(originalOrderItemId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("lineId");
    openapiFields.add("originalOrderItemId");
    openapiFields.add("quantity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PackingSlipItemDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PackingSlipItemDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PackingSlipItemDetail is not found in the empty JSON string", PackingSlipItemDetail.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!PackingSlipItemDetail.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PackingSlipItemDetail` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("originalOrderItemId") != null && !jsonObj.get("originalOrderItemId").isJsonNull()) && !jsonObj.get("originalOrderItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalOrderItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalOrderItemId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PackingSlipItemDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PackingSlipItemDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PackingSlipItemDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PackingSlipItemDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<PackingSlipItemDetail>() {
           @Override
           public void write(JsonWriter out, PackingSlipItemDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PackingSlipItemDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PackingSlipItemDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PackingSlipItemDetail
  * @throws IOException if the JSON string is invalid with respect to PackingSlipItemDetail
  */
  public static PackingSlipItemDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PackingSlipItemDetail.class);
  }

 /**
  * Convert an instance of PackingSlipItemDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

