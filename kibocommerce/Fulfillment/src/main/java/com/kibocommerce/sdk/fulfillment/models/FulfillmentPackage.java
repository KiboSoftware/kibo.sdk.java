/*
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentAuditInfo;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentPackageMeasurements;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentTracking;
import com.kibocommerce.sdk.fulfillment.models.PackingSlipItemDetailDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * FulfillmentPackage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FulfillmentPackage implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private FulfillmentAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_CARRIER = "carrier";
  @SerializedName(SERIALIZED_NAME_CARRIER)
  private String carrier;

  public static final String SERIALIZED_NAME_FXCB_DOCUMENTS_URL = "fxcbDocumentsUrl";
  @SerializedName(SERIALIZED_NAME_FXCB_DOCUMENTS_URL)
  private String fxcbDocumentsUrl;

  public static final String SERIALIZED_NAME_FXCB_PACK_NOTIFICATION_ID = "fxcbPackNotificationId";
  @SerializedName(SERIALIZED_NAME_FXCB_PACK_NOTIFICATION_ID)
  private String fxcbPackNotificationId;

  public static final String SERIALIZED_NAME_HAS_LABEL = "hasLabel";
  @SerializedName(SERIALIZED_NAME_HAS_LABEL)
  private Boolean hasLabel;

  public static final String SERIALIZED_NAME_INTEGRATOR_ID = "integratorId";
  @SerializedName(SERIALIZED_NAME_INTEGRATOR_ID)
  private String integratorId;

  public static final String SERIALIZED_NAME_LABEL_FORMAT = "labelFormat";
  @SerializedName(SERIALIZED_NAME_LABEL_FORMAT)
  private String labelFormat;

  public static final String SERIALIZED_NAME_MANIFEST_ID = "manifestId";
  @SerializedName(SERIALIZED_NAME_MANIFEST_ID)
  private String manifestId;

  public static final String SERIALIZED_NAME_MEASUREMENTS = "measurements";
  @SerializedName(SERIALIZED_NAME_MEASUREMENTS)
  private FulfillmentPackageMeasurements measurements;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "packageId";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private String packageId;

  public static final String SERIALIZED_NAME_PACKAGING_TYPE = "packagingType";
  @SerializedName(SERIALIZED_NAME_PACKAGING_TYPE)
  private String packagingType;

  public static final String SERIALIZED_NAME_PACKING_SLIP_ITEM_DETAILS = "packingSlipItemDetails";
  @SerializedName(SERIALIZED_NAME_PACKING_SLIP_ITEM_DETAILS)
  private List<PackingSlipItemDetailDto> packingSlipItemDetails = null;

  public static final String SERIALIZED_NAME_PACKING_SLIP_NUMBER = "packingSlipNumber";
  @SerializedName(SERIALIZED_NAME_PACKING_SLIP_NUMBER)
  private Integer packingSlipNumber;

  public static final String SERIALIZED_NAME_RETURN_CARRIER = "returnCarrier";
  @SerializedName(SERIALIZED_NAME_RETURN_CARRIER)
  private String returnCarrier;

  public static final String SERIALIZED_NAME_RETURN_TRACKING_NUMBERS = "returnTrackingNumbers";
  @SerializedName(SERIALIZED_NAME_RETURN_TRACKING_NUMBERS)
  private List<String> returnTrackingNumbers = null;

  public static final String SERIALIZED_NAME_RETURN_TRACKINGS = "returnTrackings";
  @SerializedName(SERIALIZED_NAME_RETURN_TRACKINGS)
  private List<FulfillmentTracking> returnTrackings = null;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_CODE = "shippingMethodCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_CODE)
  private String shippingMethodCode;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_NAME = "shippingMethodName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_NAME)
  private String shippingMethodName;

  public static final String SERIALIZED_NAME_SIGNATURE_REQUIRED = "signatureRequired";
  @SerializedName(SERIALIZED_NAME_SIGNATURE_REQUIRED)
  private Boolean signatureRequired;

  public static final String SERIALIZED_NAME_STRING_BARCODE = "stringBarcode";
  @SerializedName(SERIALIZED_NAME_STRING_BARCODE)
  private String stringBarcode;

  public static final String SERIALIZED_NAME_TRACKING_NUMBERS = "trackingNumbers";
  @SerializedName(SERIALIZED_NAME_TRACKING_NUMBERS)
  private List<String> trackingNumbers = null;

  public static final String SERIALIZED_NAME_TRACKINGS = "trackings";
  @SerializedName(SERIALIZED_NAME_TRACKINGS)
  private List<FulfillmentTracking> trackings = null;

  public FulfillmentPackage() {
  }

  public FulfillmentPackage attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public FulfillmentPackage putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public FulfillmentPackage auditInfo(FulfillmentAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(FulfillmentAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public FulfillmentPackage carrier(String carrier) {
    
    this.carrier = carrier;
    return this;
  }

   /**
   * Get carrier
   * @return carrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCarrier() {
    return carrier;
  }


  public void setCarrier(String carrier) {
    this.carrier = carrier;
  }


  public FulfillmentPackage fxcbDocumentsUrl(String fxcbDocumentsUrl) {
    
    this.fxcbDocumentsUrl = fxcbDocumentsUrl;
    return this;
  }

   /**
   * Get fxcbDocumentsUrl
   * @return fxcbDocumentsUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFxcbDocumentsUrl() {
    return fxcbDocumentsUrl;
  }


  public void setFxcbDocumentsUrl(String fxcbDocumentsUrl) {
    this.fxcbDocumentsUrl = fxcbDocumentsUrl;
  }


  public FulfillmentPackage fxcbPackNotificationId(String fxcbPackNotificationId) {
    
    this.fxcbPackNotificationId = fxcbPackNotificationId;
    return this;
  }

   /**
   * Get fxcbPackNotificationId
   * @return fxcbPackNotificationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFxcbPackNotificationId() {
    return fxcbPackNotificationId;
  }


  public void setFxcbPackNotificationId(String fxcbPackNotificationId) {
    this.fxcbPackNotificationId = fxcbPackNotificationId;
  }


  public FulfillmentPackage hasLabel(Boolean hasLabel) {
    
    this.hasLabel = hasLabel;
    return this;
  }

   /**
   * Get hasLabel
   * @return hasLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHasLabel() {
    return hasLabel;
  }


  public void setHasLabel(Boolean hasLabel) {
    this.hasLabel = hasLabel;
  }


  public FulfillmentPackage integratorId(String integratorId) {
    
    this.integratorId = integratorId;
    return this;
  }

   /**
   * Get integratorId
   * @return integratorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIntegratorId() {
    return integratorId;
  }


  public void setIntegratorId(String integratorId) {
    this.integratorId = integratorId;
  }


  public FulfillmentPackage labelFormat(String labelFormat) {
    
    this.labelFormat = labelFormat;
    return this;
  }

   /**
   * Get labelFormat
   * @return labelFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLabelFormat() {
    return labelFormat;
  }


  public void setLabelFormat(String labelFormat) {
    this.labelFormat = labelFormat;
  }


  public FulfillmentPackage manifestId(String manifestId) {
    
    this.manifestId = manifestId;
    return this;
  }

   /**
   * Get manifestId
   * @return manifestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getManifestId() {
    return manifestId;
  }


  public void setManifestId(String manifestId) {
    this.manifestId = manifestId;
  }


  public FulfillmentPackage measurements(FulfillmentPackageMeasurements measurements) {
    
    this.measurements = measurements;
    return this;
  }

   /**
   * Get measurements
   * @return measurements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentPackageMeasurements getMeasurements() {
    return measurements;
  }


  public void setMeasurements(FulfillmentPackageMeasurements measurements) {
    this.measurements = measurements;
  }


  public FulfillmentPackage packageId(String packageId) {
    
    this.packageId = packageId;
    return this;
  }

   /**
   * Get packageId
   * @return packageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackageId() {
    return packageId;
  }


  public void setPackageId(String packageId) {
    this.packageId = packageId;
  }


  public FulfillmentPackage packagingType(String packagingType) {
    
    this.packagingType = packagingType;
    return this;
  }

   /**
   * Get packagingType
   * @return packagingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackagingType() {
    return packagingType;
  }


  public void setPackagingType(String packagingType) {
    this.packagingType = packagingType;
  }


  public FulfillmentPackage packingSlipItemDetails(List<PackingSlipItemDetailDto> packingSlipItemDetails) {
    
    this.packingSlipItemDetails = packingSlipItemDetails;
    return this;
  }

  public FulfillmentPackage addPackingSlipItemDetailsItem(PackingSlipItemDetailDto packingSlipItemDetailsItem) {
    if (this.packingSlipItemDetails == null) {
      this.packingSlipItemDetails = new ArrayList<>();
    }
    this.packingSlipItemDetails.add(packingSlipItemDetailsItem);
    return this;
  }

   /**
   * Get packingSlipItemDetails
   * @return packingSlipItemDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<PackingSlipItemDetailDto> getPackingSlipItemDetails() {
    return packingSlipItemDetails;
  }


  public void setPackingSlipItemDetails(List<PackingSlipItemDetailDto> packingSlipItemDetails) {
    this.packingSlipItemDetails = packingSlipItemDetails;
  }


  public FulfillmentPackage packingSlipNumber(Integer packingSlipNumber) {
    
    this.packingSlipNumber = packingSlipNumber;
    return this;
  }

   /**
   * Get packingSlipNumber
   * @return packingSlipNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPackingSlipNumber() {
    return packingSlipNumber;
  }


  public void setPackingSlipNumber(Integer packingSlipNumber) {
    this.packingSlipNumber = packingSlipNumber;
  }


  public FulfillmentPackage returnCarrier(String returnCarrier) {
    
    this.returnCarrier = returnCarrier;
    return this;
  }

   /**
   * Get returnCarrier
   * @return returnCarrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReturnCarrier() {
    return returnCarrier;
  }


  public void setReturnCarrier(String returnCarrier) {
    this.returnCarrier = returnCarrier;
  }


  public FulfillmentPackage returnTrackingNumbers(List<String> returnTrackingNumbers) {
    
    this.returnTrackingNumbers = returnTrackingNumbers;
    return this;
  }

  public FulfillmentPackage addReturnTrackingNumbersItem(String returnTrackingNumbersItem) {
    if (this.returnTrackingNumbers == null) {
      this.returnTrackingNumbers = new ArrayList<>();
    }
    this.returnTrackingNumbers.add(returnTrackingNumbersItem);
    return this;
  }

   /**
   * Get returnTrackingNumbers
   * @return returnTrackingNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getReturnTrackingNumbers() {
    return returnTrackingNumbers;
  }


  public void setReturnTrackingNumbers(List<String> returnTrackingNumbers) {
    this.returnTrackingNumbers = returnTrackingNumbers;
  }


  public FulfillmentPackage returnTrackings(List<FulfillmentTracking> returnTrackings) {
    
    this.returnTrackings = returnTrackings;
    return this;
  }

  public FulfillmentPackage addReturnTrackingsItem(FulfillmentTracking returnTrackingsItem) {
    if (this.returnTrackings == null) {
      this.returnTrackings = new ArrayList<>();
    }
    this.returnTrackings.add(returnTrackingsItem);
    return this;
  }

   /**
   * Get returnTrackings
   * @return returnTrackings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentTracking> getReturnTrackings() {
    return returnTrackings;
  }


  public void setReturnTrackings(List<FulfillmentTracking> returnTrackings) {
    this.returnTrackings = returnTrackings;
  }


  public FulfillmentPackage shippingMethodCode(String shippingMethodCode) {
    
    this.shippingMethodCode = shippingMethodCode;
    return this;
  }

   /**
   * Get shippingMethodCode
   * @return shippingMethodCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippingMethodCode() {
    return shippingMethodCode;
  }


  public void setShippingMethodCode(String shippingMethodCode) {
    this.shippingMethodCode = shippingMethodCode;
  }


  public FulfillmentPackage shippingMethodName(String shippingMethodName) {
    
    this.shippingMethodName = shippingMethodName;
    return this;
  }

   /**
   * Get shippingMethodName
   * @return shippingMethodName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippingMethodName() {
    return shippingMethodName;
  }


  public void setShippingMethodName(String shippingMethodName) {
    this.shippingMethodName = shippingMethodName;
  }


  public FulfillmentPackage signatureRequired(Boolean signatureRequired) {
    
    this.signatureRequired = signatureRequired;
    return this;
  }

   /**
   * Get signatureRequired
   * @return signatureRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSignatureRequired() {
    return signatureRequired;
  }


  public void setSignatureRequired(Boolean signatureRequired) {
    this.signatureRequired = signatureRequired;
  }


  public FulfillmentPackage stringBarcode(String stringBarcode) {
    
    this.stringBarcode = stringBarcode;
    return this;
  }

   /**
   * Get stringBarcode
   * @return stringBarcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStringBarcode() {
    return stringBarcode;
  }


  public void setStringBarcode(String stringBarcode) {
    this.stringBarcode = stringBarcode;
  }


  public FulfillmentPackage trackingNumbers(List<String> trackingNumbers) {
    
    this.trackingNumbers = trackingNumbers;
    return this;
  }

  public FulfillmentPackage addTrackingNumbersItem(String trackingNumbersItem) {
    if (this.trackingNumbers == null) {
      this.trackingNumbers = new ArrayList<>();
    }
    this.trackingNumbers.add(trackingNumbersItem);
    return this;
  }

   /**
   * Get trackingNumbers
   * @return trackingNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTrackingNumbers() {
    return trackingNumbers;
  }


  public void setTrackingNumbers(List<String> trackingNumbers) {
    this.trackingNumbers = trackingNumbers;
  }


  public FulfillmentPackage trackings(List<FulfillmentTracking> trackings) {
    
    this.trackings = trackings;
    return this;
  }

  public FulfillmentPackage addTrackingsItem(FulfillmentTracking trackingsItem) {
    if (this.trackings == null) {
      this.trackings = new ArrayList<>();
    }
    this.trackings.add(trackingsItem);
    return this;
  }

   /**
   * Get trackings
   * @return trackings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentTracking> getTrackings() {
    return trackings;
  }


  public void setTrackings(List<FulfillmentTracking> trackings) {
    this.trackings = trackings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FulfillmentPackage fulfillmentPackage = (FulfillmentPackage) o;
    return Objects.equals(this.attributes, fulfillmentPackage.attributes) &&
        Objects.equals(this.auditInfo, fulfillmentPackage.auditInfo) &&
        Objects.equals(this.carrier, fulfillmentPackage.carrier) &&
        Objects.equals(this.fxcbDocumentsUrl, fulfillmentPackage.fxcbDocumentsUrl) &&
        Objects.equals(this.fxcbPackNotificationId, fulfillmentPackage.fxcbPackNotificationId) &&
        Objects.equals(this.hasLabel, fulfillmentPackage.hasLabel) &&
        Objects.equals(this.integratorId, fulfillmentPackage.integratorId) &&
        Objects.equals(this.labelFormat, fulfillmentPackage.labelFormat) &&
        Objects.equals(this.manifestId, fulfillmentPackage.manifestId) &&
        Objects.equals(this.measurements, fulfillmentPackage.measurements) &&
        Objects.equals(this.packageId, fulfillmentPackage.packageId) &&
        Objects.equals(this.packagingType, fulfillmentPackage.packagingType) &&
        Objects.equals(this.packingSlipItemDetails, fulfillmentPackage.packingSlipItemDetails) &&
        Objects.equals(this.packingSlipNumber, fulfillmentPackage.packingSlipNumber) &&
        Objects.equals(this.returnCarrier, fulfillmentPackage.returnCarrier) &&
        Objects.equals(this.returnTrackingNumbers, fulfillmentPackage.returnTrackingNumbers) &&
        Objects.equals(this.returnTrackings, fulfillmentPackage.returnTrackings) &&
        Objects.equals(this.shippingMethodCode, fulfillmentPackage.shippingMethodCode) &&
        Objects.equals(this.shippingMethodName, fulfillmentPackage.shippingMethodName) &&
        Objects.equals(this.signatureRequired, fulfillmentPackage.signatureRequired) &&
        Objects.equals(this.stringBarcode, fulfillmentPackage.stringBarcode) &&
        Objects.equals(this.trackingNumbers, fulfillmentPackage.trackingNumbers) &&
        Objects.equals(this.trackings, fulfillmentPackage.trackings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, auditInfo, carrier, fxcbDocumentsUrl, fxcbPackNotificationId, hasLabel, integratorId, labelFormat, manifestId, measurements, packageId, packagingType, packingSlipItemDetails, packingSlipNumber, returnCarrier, returnTrackingNumbers, returnTrackings, shippingMethodCode, shippingMethodName, signatureRequired, stringBarcode, trackingNumbers, trackings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FulfillmentPackage {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    carrier: ").append(toIndentedString(carrier)).append("\n");
    sb.append("    fxcbDocumentsUrl: ").append(toIndentedString(fxcbDocumentsUrl)).append("\n");
    sb.append("    fxcbPackNotificationId: ").append(toIndentedString(fxcbPackNotificationId)).append("\n");
    sb.append("    hasLabel: ").append(toIndentedString(hasLabel)).append("\n");
    sb.append("    integratorId: ").append(toIndentedString(integratorId)).append("\n");
    sb.append("    labelFormat: ").append(toIndentedString(labelFormat)).append("\n");
    sb.append("    manifestId: ").append(toIndentedString(manifestId)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    packagingType: ").append(toIndentedString(packagingType)).append("\n");
    sb.append("    packingSlipItemDetails: ").append(toIndentedString(packingSlipItemDetails)).append("\n");
    sb.append("    packingSlipNumber: ").append(toIndentedString(packingSlipNumber)).append("\n");
    sb.append("    returnCarrier: ").append(toIndentedString(returnCarrier)).append("\n");
    sb.append("    returnTrackingNumbers: ").append(toIndentedString(returnTrackingNumbers)).append("\n");
    sb.append("    returnTrackings: ").append(toIndentedString(returnTrackings)).append("\n");
    sb.append("    shippingMethodCode: ").append(toIndentedString(shippingMethodCode)).append("\n");
    sb.append("    shippingMethodName: ").append(toIndentedString(shippingMethodName)).append("\n");
    sb.append("    signatureRequired: ").append(toIndentedString(signatureRequired)).append("\n");
    sb.append("    stringBarcode: ").append(toIndentedString(stringBarcode)).append("\n");
    sb.append("    trackingNumbers: ").append(toIndentedString(trackingNumbers)).append("\n");
    sb.append("    trackings: ").append(toIndentedString(trackings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("auditInfo");
    openapiFields.add("carrier");
    openapiFields.add("fxcbDocumentsUrl");
    openapiFields.add("fxcbPackNotificationId");
    openapiFields.add("hasLabel");
    openapiFields.add("integratorId");
    openapiFields.add("labelFormat");
    openapiFields.add("manifestId");
    openapiFields.add("measurements");
    openapiFields.add("packageId");
    openapiFields.add("packagingType");
    openapiFields.add("packingSlipItemDetails");
    openapiFields.add("packingSlipNumber");
    openapiFields.add("returnCarrier");
    openapiFields.add("returnTrackingNumbers");
    openapiFields.add("returnTrackings");
    openapiFields.add("shippingMethodCode");
    openapiFields.add("shippingMethodName");
    openapiFields.add("signatureRequired");
    openapiFields.add("stringBarcode");
    openapiFields.add("trackingNumbers");
    openapiFields.add("trackings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FulfillmentPackage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FulfillmentPackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FulfillmentPackage is not found in the empty JSON string", FulfillmentPackage.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!FulfillmentPackage.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FulfillmentPackage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        FulfillmentAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      if ((jsonObj.get("carrier") != null && !jsonObj.get("carrier").isJsonNull()) && !jsonObj.get("carrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier").toString()));
      }
      if ((jsonObj.get("fxcbDocumentsUrl") != null && !jsonObj.get("fxcbDocumentsUrl").isJsonNull()) && !jsonObj.get("fxcbDocumentsUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fxcbDocumentsUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fxcbDocumentsUrl").toString()));
      }
      if ((jsonObj.get("fxcbPackNotificationId") != null && !jsonObj.get("fxcbPackNotificationId").isJsonNull()) && !jsonObj.get("fxcbPackNotificationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fxcbPackNotificationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fxcbPackNotificationId").toString()));
      }
      if ((jsonObj.get("integratorId") != null && !jsonObj.get("integratorId").isJsonNull()) && !jsonObj.get("integratorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integratorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integratorId").toString()));
      }
      if ((jsonObj.get("labelFormat") != null && !jsonObj.get("labelFormat").isJsonNull()) && !jsonObj.get("labelFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labelFormat").toString()));
      }
      if ((jsonObj.get("manifestId") != null && !jsonObj.get("manifestId").isJsonNull()) && !jsonObj.get("manifestId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `manifestId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("manifestId").toString()));
      }
      // validate the optional field `measurements`
      if (jsonObj.get("measurements") != null && !jsonObj.get("measurements").isJsonNull()) {
        FulfillmentPackageMeasurements.validateJsonObject(jsonObj.getAsJsonObject("measurements"));
      }
      if ((jsonObj.get("packageId") != null && !jsonObj.get("packageId").isJsonNull()) && !jsonObj.get("packageId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageId").toString()));
      }
      if ((jsonObj.get("packagingType") != null && !jsonObj.get("packagingType").isJsonNull()) && !jsonObj.get("packagingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packagingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packagingType").toString()));
      }
      if (jsonObj.get("packingSlipItemDetails") != null && !jsonObj.get("packingSlipItemDetails").isJsonNull()) {
        JsonArray jsonArraypackingSlipItemDetails = jsonObj.getAsJsonArray("packingSlipItemDetails");
        if (jsonArraypackingSlipItemDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("packingSlipItemDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `packingSlipItemDetails` to be an array in the JSON string but got `%s`", jsonObj.get("packingSlipItemDetails").toString()));
          }

          // validate the optional field `packingSlipItemDetails` (array)
          for (int i = 0; i < jsonArraypackingSlipItemDetails.size(); i++) {
            PackingSlipItemDetailDto.validateJsonObject(jsonArraypackingSlipItemDetails.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("returnCarrier") != null && !jsonObj.get("returnCarrier").isJsonNull()) && !jsonObj.get("returnCarrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnCarrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnCarrier").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("returnTrackingNumbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnTrackingNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("returnTrackingNumbers").toString()));
      }
      if (jsonObj.get("returnTrackings") != null && !jsonObj.get("returnTrackings").isJsonNull()) {
        JsonArray jsonArrayreturnTrackings = jsonObj.getAsJsonArray("returnTrackings");
        if (jsonArrayreturnTrackings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("returnTrackings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `returnTrackings` to be an array in the JSON string but got `%s`", jsonObj.get("returnTrackings").toString()));
          }

          // validate the optional field `returnTrackings` (array)
          for (int i = 0; i < jsonArrayreturnTrackings.size(); i++) {
            FulfillmentTracking.validateJsonObject(jsonArrayreturnTrackings.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("shippingMethodCode") != null && !jsonObj.get("shippingMethodCode").isJsonNull()) && !jsonObj.get("shippingMethodCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodCode").toString()));
      }
      if ((jsonObj.get("shippingMethodName") != null && !jsonObj.get("shippingMethodName").isJsonNull()) && !jsonObj.get("shippingMethodName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodName").toString()));
      }
      if ((jsonObj.get("stringBarcode") != null && !jsonObj.get("stringBarcode").isJsonNull()) && !jsonObj.get("stringBarcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringBarcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stringBarcode").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("trackingNumbers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackingNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("trackingNumbers").toString()));
      }
      if (jsonObj.get("trackings") != null && !jsonObj.get("trackings").isJsonNull()) {
        JsonArray jsonArraytrackings = jsonObj.getAsJsonArray("trackings");
        if (jsonArraytrackings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("trackings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `trackings` to be an array in the JSON string but got `%s`", jsonObj.get("trackings").toString()));
          }

          // validate the optional field `trackings` (array)
          for (int i = 0; i < jsonArraytrackings.size(); i++) {
            FulfillmentTracking.validateJsonObject(jsonArraytrackings.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FulfillmentPackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FulfillmentPackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FulfillmentPackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FulfillmentPackage.class));

       return (TypeAdapter<T>) new TypeAdapter<FulfillmentPackage>() {
           @Override
           public void write(JsonWriter out, FulfillmentPackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FulfillmentPackage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FulfillmentPackage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FulfillmentPackage
  * @throws IOException if the JSON string is invalid with respect to FulfillmentPackage
  */
  public static FulfillmentPackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FulfillmentPackage.class);
  }

 /**
  * Convert an instance of FulfillmentPackage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

