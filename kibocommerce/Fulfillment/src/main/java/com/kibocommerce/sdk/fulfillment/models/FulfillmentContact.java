/*
 * Kibo Fulfillment Service
 * OpenAPI Spec for Kibo Fulfillment Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.fulfillment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentAddress;
import com.kibocommerce.sdk.fulfillment.models.FulfillmentPhone;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * FulfillmentContact
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FulfillmentContact implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private FulfillmentAddress address;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public static final String SERIALIZED_NAME_COMPANY_OR_ORGANIZATION = "companyOrOrganization";
  @SerializedName(SERIALIZED_NAME_COMPANY_OR_ORGANIZATION)
  private String companyOrOrganization;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  private String fullName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LAST_NAME_OR_SURNAME = "lastNameOrSurname";
  @SerializedName(SERIALIZED_NAME_LAST_NAME_OR_SURNAME)
  private String lastNameOrSurname;

  public static final String SERIALIZED_NAME_MIDDLE_NAME_OR_INITIAL = "middleNameOrInitial";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME_OR_INITIAL)
  private String middleNameOrInitial;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phoneNumbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private FulfillmentPhone phoneNumbers;

  public static final String SERIALIZED_NAME_SHORT_FULL_NAME = "shortFullName";
  @SerializedName(SERIALIZED_NAME_SHORT_FULL_NAME)
  private String shortFullName;

  public FulfillmentContact() {
  }

  public FulfillmentContact address(FulfillmentAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentAddress getAddress() {
    return address;
  }


  public void setAddress(FulfillmentAddress address) {
    this.address = address;
  }


  public FulfillmentContact attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public FulfillmentContact putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public FulfillmentContact companyOrOrganization(String companyOrOrganization) {
    
    this.companyOrOrganization = companyOrOrganization;
    return this;
  }

   /**
   * Get companyOrOrganization
   * @return companyOrOrganization
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyOrOrganization() {
    return companyOrOrganization;
  }


  public void setCompanyOrOrganization(String companyOrOrganization) {
    this.companyOrOrganization = companyOrOrganization;
  }


  public FulfillmentContact email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public FulfillmentContact firstName(String firstName) {
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public FulfillmentContact fullName(String fullName) {
    
    this.fullName = fullName;
    return this;
  }

   /**
   * Get fullName
   * @return fullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullName() {
    return fullName;
  }


  public void setFullName(String fullName) {
    this.fullName = fullName;
  }


  public FulfillmentContact id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public FulfillmentContact lastNameOrSurname(String lastNameOrSurname) {
    
    this.lastNameOrSurname = lastNameOrSurname;
    return this;
  }

   /**
   * Get lastNameOrSurname
   * @return lastNameOrSurname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastNameOrSurname() {
    return lastNameOrSurname;
  }


  public void setLastNameOrSurname(String lastNameOrSurname) {
    this.lastNameOrSurname = lastNameOrSurname;
  }


  public FulfillmentContact middleNameOrInitial(String middleNameOrInitial) {
    
    this.middleNameOrInitial = middleNameOrInitial;
    return this;
  }

   /**
   * Get middleNameOrInitial
   * @return middleNameOrInitial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMiddleNameOrInitial() {
    return middleNameOrInitial;
  }


  public void setMiddleNameOrInitial(String middleNameOrInitial) {
    this.middleNameOrInitial = middleNameOrInitial;
  }


  public FulfillmentContact phoneNumbers(FulfillmentPhone phoneNumbers) {
    
    this.phoneNumbers = phoneNumbers;
    return this;
  }

   /**
   * Get phoneNumbers
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentPhone getPhoneNumbers() {
    return phoneNumbers;
  }


  public void setPhoneNumbers(FulfillmentPhone phoneNumbers) {
    this.phoneNumbers = phoneNumbers;
  }


  public FulfillmentContact shortFullName(String shortFullName) {
    
    this.shortFullName = shortFullName;
    return this;
  }

   /**
   * Get shortFullName
   * @return shortFullName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShortFullName() {
    return shortFullName;
  }


  public void setShortFullName(String shortFullName) {
    this.shortFullName = shortFullName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FulfillmentContact fulfillmentContact = (FulfillmentContact) o;
    return Objects.equals(this.address, fulfillmentContact.address) &&
        Objects.equals(this.attributes, fulfillmentContact.attributes) &&
        Objects.equals(this.companyOrOrganization, fulfillmentContact.companyOrOrganization) &&
        Objects.equals(this.email, fulfillmentContact.email) &&
        Objects.equals(this.firstName, fulfillmentContact.firstName) &&
        Objects.equals(this.fullName, fulfillmentContact.fullName) &&
        Objects.equals(this.id, fulfillmentContact.id) &&
        Objects.equals(this.lastNameOrSurname, fulfillmentContact.lastNameOrSurname) &&
        Objects.equals(this.middleNameOrInitial, fulfillmentContact.middleNameOrInitial) &&
        Objects.equals(this.phoneNumbers, fulfillmentContact.phoneNumbers) &&
        Objects.equals(this.shortFullName, fulfillmentContact.shortFullName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, attributes, companyOrOrganization, email, firstName, fullName, id, lastNameOrSurname, middleNameOrInitial, phoneNumbers, shortFullName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FulfillmentContact {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    companyOrOrganization: ").append(toIndentedString(companyOrOrganization)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastNameOrSurname: ").append(toIndentedString(lastNameOrSurname)).append("\n");
    sb.append("    middleNameOrInitial: ").append(toIndentedString(middleNameOrInitial)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    shortFullName: ").append(toIndentedString(shortFullName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("attributes");
    openapiFields.add("companyOrOrganization");
    openapiFields.add("email");
    openapiFields.add("firstName");
    openapiFields.add("fullName");
    openapiFields.add("id");
    openapiFields.add("lastNameOrSurname");
    openapiFields.add("middleNameOrInitial");
    openapiFields.add("phoneNumbers");
    openapiFields.add("shortFullName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FulfillmentContact
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FulfillmentContact.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FulfillmentContact is not found in the empty JSON string", FulfillmentContact.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!FulfillmentContact.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FulfillmentContact` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        FulfillmentAddress.validateJsonObject(jsonObj.getAsJsonObject("address"));
      }
      if ((jsonObj.get("companyOrOrganization") != null && !jsonObj.get("companyOrOrganization").isJsonNull()) && !jsonObj.get("companyOrOrganization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyOrOrganization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyOrOrganization").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonNull()) && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      if ((jsonObj.get("lastNameOrSurname") != null && !jsonObj.get("lastNameOrSurname").isJsonNull()) && !jsonObj.get("lastNameOrSurname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastNameOrSurname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastNameOrSurname").toString()));
      }
      if ((jsonObj.get("middleNameOrInitial") != null && !jsonObj.get("middleNameOrInitial").isJsonNull()) && !jsonObj.get("middleNameOrInitial").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleNameOrInitial` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleNameOrInitial").toString()));
      }
      // validate the optional field `phoneNumbers`
      if (jsonObj.get("phoneNumbers") != null && !jsonObj.get("phoneNumbers").isJsonNull()) {
        FulfillmentPhone.validateJsonObject(jsonObj.getAsJsonObject("phoneNumbers"));
      }
      if ((jsonObj.get("shortFullName") != null && !jsonObj.get("shortFullName").isJsonNull()) && !jsonObj.get("shortFullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shortFullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shortFullName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FulfillmentContact.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FulfillmentContact' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FulfillmentContact> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FulfillmentContact.class));

       return (TypeAdapter<T>) new TypeAdapter<FulfillmentContact>() {
           @Override
           public void write(JsonWriter out, FulfillmentContact value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FulfillmentContact read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FulfillmentContact given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FulfillmentContact
  * @throws IOException if the JSON string is invalid with respect to FulfillmentContact
  */
  public static FulfillmentContact fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FulfillmentContact.class);
  }

 /**
  * Convert an instance of FulfillmentContact to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

