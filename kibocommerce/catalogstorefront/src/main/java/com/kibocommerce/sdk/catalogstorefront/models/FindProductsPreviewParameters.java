/*
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogstorefront.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogstorefront.models.PreviewCampaignSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * This should follow the immutable DTO pattern
 */
@ApiModel(description = "This should follow the immutable DTO pattern")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FindProductsPreviewParameters implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_MID = "mid";
  @SerializedName(SERIALIZED_NAME_MID)
  private String mid;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_START_INDEX = "startIndex";
  @SerializedName(SERIALIZED_NAME_START_INDEX)
  private Integer startIndex;

  public static final String SERIALIZED_NAME_SEARCH_TYPE = "searchType";
  @SerializedName(SERIALIZED_NAME_SEARCH_TYPE)
  private String searchType;

  public static final String SERIALIZED_NAME_FIELD_LIST = "fieldList";
  @SerializedName(SERIALIZED_NAME_FIELD_LIST)
  private List<String> fieldList = null;

  public static final String SERIALIZED_NAME_SEARCH_SETTINGS = "searchSettings";
  @SerializedName(SERIALIZED_NAME_SEARCH_SETTINGS)
  private String searchSettings;

  public static final String SERIALIZED_NAME_CAMPAIGN_SETTINGS = "campaignSettings";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_SETTINGS)
  private PreviewCampaignSettings campaignSettings;

  public FindProductsPreviewParameters() {
  }

  public FindProductsPreviewParameters mid(String mid) {
    
    this.mid = mid;
    return this;
  }

   /**
   * Get mid
   * @return mid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMid() {
    return mid;
  }


  public void setMid(String mid) {
    this.mid = mid;
  }


  public FindProductsPreviewParameters query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public FindProductsPreviewParameters pageSize(Integer pageSize) {
    
    this.pageSize = pageSize;
    return this;
  }

   /**
   * Get pageSize
   * @return pageSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPageSize() {
    return pageSize;
  }


  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public FindProductsPreviewParameters startIndex(Integer startIndex) {
    
    this.startIndex = startIndex;
    return this;
  }

   /**
   * Get startIndex
   * @return startIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStartIndex() {
    return startIndex;
  }


  public void setStartIndex(Integer startIndex) {
    this.startIndex = startIndex;
  }


  public FindProductsPreviewParameters searchType(String searchType) {
    
    this.searchType = searchType;
    return this;
  }

   /**
   * Get searchType
   * @return searchType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSearchType() {
    return searchType;
  }


  public void setSearchType(String searchType) {
    this.searchType = searchType;
  }


  public FindProductsPreviewParameters fieldList(List<String> fieldList) {
    
    this.fieldList = fieldList;
    return this;
  }

  public FindProductsPreviewParameters addFieldListItem(String fieldListItem) {
    if (this.fieldList == null) {
      this.fieldList = new ArrayList<>();
    }
    this.fieldList.add(fieldListItem);
    return this;
  }

   /**
   * Get fieldList
   * @return fieldList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getFieldList() {
    return fieldList;
  }


  public void setFieldList(List<String> fieldList) {
    this.fieldList = fieldList;
  }


  public FindProductsPreviewParameters searchSettings(String searchSettings) {
    
    this.searchSettings = searchSettings;
    return this;
  }

   /**
   * Get searchSettings
   * @return searchSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSearchSettings() {
    return searchSettings;
  }


  public void setSearchSettings(String searchSettings) {
    this.searchSettings = searchSettings;
  }


  public FindProductsPreviewParameters campaignSettings(PreviewCampaignSettings campaignSettings) {
    
    this.campaignSettings = campaignSettings;
    return this;
  }

   /**
   * Get campaignSettings
   * @return campaignSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PreviewCampaignSettings getCampaignSettings() {
    return campaignSettings;
  }


  public void setCampaignSettings(PreviewCampaignSettings campaignSettings) {
    this.campaignSettings = campaignSettings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FindProductsPreviewParameters findProductsPreviewParameters = (FindProductsPreviewParameters) o;
    return Objects.equals(this.mid, findProductsPreviewParameters.mid) &&
        Objects.equals(this.query, findProductsPreviewParameters.query) &&
        Objects.equals(this.pageSize, findProductsPreviewParameters.pageSize) &&
        Objects.equals(this.startIndex, findProductsPreviewParameters.startIndex) &&
        Objects.equals(this.searchType, findProductsPreviewParameters.searchType) &&
        Objects.equals(this.fieldList, findProductsPreviewParameters.fieldList) &&
        Objects.equals(this.searchSettings, findProductsPreviewParameters.searchSettings) &&
        Objects.equals(this.campaignSettings, findProductsPreviewParameters.campaignSettings);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(mid, query, pageSize, startIndex, searchType, fieldList, searchSettings, campaignSettings);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FindProductsPreviewParameters {\n");
    sb.append("    mid: ").append(toIndentedString(mid)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("    searchType: ").append(toIndentedString(searchType)).append("\n");
    sb.append("    fieldList: ").append(toIndentedString(fieldList)).append("\n");
    sb.append("    searchSettings: ").append(toIndentedString(searchSettings)).append("\n");
    sb.append("    campaignSettings: ").append(toIndentedString(campaignSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("mid");
    openapiFields.add("query");
    openapiFields.add("pageSize");
    openapiFields.add("startIndex");
    openapiFields.add("searchType");
    openapiFields.add("fieldList");
    openapiFields.add("searchSettings");
    openapiFields.add("campaignSettings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FindProductsPreviewParameters
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!FindProductsPreviewParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FindProductsPreviewParameters is not found in the empty JSON string", FindProductsPreviewParameters.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!FindProductsPreviewParameters.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FindProductsPreviewParameters` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("mid") != null && !jsonObj.get("mid").isJsonNull()) && !jsonObj.get("mid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mid").toString()));
      }
      if ((jsonObj.get("query") != null && !jsonObj.get("query").isJsonNull()) && !jsonObj.get("query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("query").toString()));
      }
      if ((jsonObj.get("searchType") != null && !jsonObj.get("searchType").isJsonNull()) && !jsonObj.get("searchType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchType").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("fieldList").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldList` to be an array in the JSON string but got `%s`", jsonObj.get("fieldList").toString()));
      }
      if ((jsonObj.get("searchSettings") != null && !jsonObj.get("searchSettings").isJsonNull()) && !jsonObj.get("searchSettings").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchSettings` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchSettings").toString()));
      }
      // validate the optional field `campaignSettings`
      if (jsonObj.get("campaignSettings") != null && !jsonObj.get("campaignSettings").isJsonNull()) {
        PreviewCampaignSettings.validateJsonObject(jsonObj.getAsJsonObject("campaignSettings"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FindProductsPreviewParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FindProductsPreviewParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FindProductsPreviewParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FindProductsPreviewParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<FindProductsPreviewParameters>() {
           @Override
           public void write(JsonWriter out, FindProductsPreviewParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FindProductsPreviewParameters read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FindProductsPreviewParameters given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FindProductsPreviewParameters
  * @throws IOException if the JSON string is invalid with respect to FindProductsPreviewParameters
  */
  public static FindProductsPreviewParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FindProductsPreviewParameters.class);
  }

 /**
  * Convert an instance of FindProductsPreviewParameters to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

