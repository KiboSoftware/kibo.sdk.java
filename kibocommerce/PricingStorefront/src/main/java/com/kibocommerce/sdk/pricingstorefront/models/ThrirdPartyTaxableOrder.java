/*
 * Kibo PricingRuntime Service
 * OpenAPI Spec for Kibo PricingRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.pricingstorefront.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.pricingstorefront.models.AppliedOrderShippingDiscount;
import com.kibocommerce.sdk.pricingstorefront.models.PricingRuntimeAppliedDiscount;
import com.kibocommerce.sdk.pricingstorefront.models.TaxAttribute;
import com.kibocommerce.sdk.pricingstorefront.models.TaxableLineItem;
import com.kibocommerce.sdk.pricingstorefront.models.ThrirdPartyTaxContext;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * An order sent to a thirdparty implementation for calculating taxes
 */
@ApiModel(description = "An order sent to a thirdparty implementation for calculating taxes")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ThrirdPartyTaxableOrder implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ORDER_DATE = "orderDate";
  @SerializedName(SERIALIZED_NAME_ORDER_DATE)
  private OffsetDateTime orderDate;

  public static final String SERIALIZED_NAME_TAX_CONTEXT = "taxContext";
  @SerializedName(SERIALIZED_NAME_TAX_CONTEXT)
  private ThrirdPartyTaxContext taxContext;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "lineItems";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  private List<TaxableLineItem> lineItems = null;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shippingAmount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private Double shippingAmount;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_HANDLING_FEE = "handlingFee";
  @SerializedName(SERIALIZED_NAME_HANDLING_FEE)
  private Double handlingFee;

  public static final String SERIALIZED_NAME_ORIGINAL_DOCUMENT_CODE = "originalDocumentCode";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_DOCUMENT_CODE)
  private String originalDocumentCode;

  public static final String SERIALIZED_NAME_ORDER_ID = "orderId";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private String orderId;

  public static final String SERIALIZED_NAME_ORDER_NUMBER = "orderNumber";
  @SerializedName(SERIALIZED_NAME_ORDER_NUMBER)
  private Integer orderNumber;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_DATE = "originalOrderDate";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_DATE)
  private OffsetDateTime originalOrderDate;

  public static final String SERIALIZED_NAME_TAX_REQUEST_TYPE = "taxRequestType";
  @SerializedName(SERIALIZED_NAME_TAX_REQUEST_TYPE)
  private String taxRequestType;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<TaxAttribute> attributes = null;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNTS = "shippingDiscounts";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNTS)
  private List<AppliedOrderShippingDiscount> shippingDiscounts = null;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT = "shippingDiscount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT)
  private AppliedOrderShippingDiscount shippingDiscount;

  public static final String SERIALIZED_NAME_ORDER_DISCOUNTS = "orderDiscounts";
  @SerializedName(SERIALIZED_NAME_ORDER_DISCOUNTS)
  private List<PricingRuntimeAppliedDiscount> orderDiscounts = null;

  public static final String SERIALIZED_NAME_ORDER_DISCOUNT = "orderDiscount";
  @SerializedName(SERIALIZED_NAME_ORDER_DISCOUNT)
  private PricingRuntimeAppliedDiscount orderDiscount;

  public static final String SERIALIZED_NAME_HANDLING_DISCOUNTS = "handlingDiscounts";
  @SerializedName(SERIALIZED_NAME_HANDLING_DISCOUNTS)
  private List<PricingRuntimeAppliedDiscount> handlingDiscounts = null;

  public static final String SERIALIZED_NAME_HANDLING_DISCOUNT = "handlingDiscount";
  @SerializedName(SERIALIZED_NAME_HANDLING_DISCOUNT)
  private PricingRuntimeAppliedDiscount handlingDiscount;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_CODE = "shippingMethodCode";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_CODE)
  private String shippingMethodCode;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD_NAME = "shippingMethodName";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD_NAME)
  private String shippingMethodName;

  public ThrirdPartyTaxableOrder() {
  }

  public ThrirdPartyTaxableOrder orderDate(OffsetDateTime orderDate) {
    
    this.orderDate = orderDate;
    return this;
  }

   /**
   * Date on which the order is/was submitted.  Cannot be a future date.
   * @return orderDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date on which the order is/was submitted.  Cannot be a future date.")

  public OffsetDateTime getOrderDate() {
    return orderDate;
  }


  public void setOrderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
  }


  public ThrirdPartyTaxableOrder taxContext(ThrirdPartyTaxContext taxContext) {
    
    this.taxContext = taxContext;
    return this;
  }

   /**
   * Get taxContext
   * @return taxContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThrirdPartyTaxContext getTaxContext() {
    return taxContext;
  }


  public void setTaxContext(ThrirdPartyTaxContext taxContext) {
    this.taxContext = taxContext;
  }


  public ThrirdPartyTaxableOrder lineItems(List<TaxableLineItem> lineItems) {
    
    this.lineItems = lineItems;
    return this;
  }

  public ThrirdPartyTaxableOrder addLineItemsItem(TaxableLineItem lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

   /**
   * List of taxable items.
   * @return lineItems
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of taxable items.")

  public List<TaxableLineItem> getLineItems() {
    return lineItems;
  }


  public void setLineItems(List<TaxableLineItem> lineItems) {
    this.lineItems = lineItems;
  }


  public ThrirdPartyTaxableOrder shippingAmount(Double shippingAmount) {
    
    this.shippingAmount = shippingAmount;
    return this;
  }

   /**
   * Shipping Amount rolled up for the order
   * @return shippingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping Amount rolled up for the order")

  public Double getShippingAmount() {
    return shippingAmount;
  }


  public void setShippingAmount(Double shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public ThrirdPartyTaxableOrder currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * The currency code for this order
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The currency code for this order")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ThrirdPartyTaxableOrder handlingFee(Double handlingFee) {
    
    this.handlingFee = handlingFee;
    return this;
  }

   /**
   * Handling Fee
   * @return handlingFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Handling Fee")

  public Double getHandlingFee() {
    return handlingFee;
  }


  public void setHandlingFee(Double handlingFee) {
    this.handlingFee = handlingFee;
  }


  public ThrirdPartyTaxableOrder originalDocumentCode(String originalDocumentCode) {
    
    this.originalDocumentCode = originalDocumentCode;
    return this;
  }

   /**
   * The order id of the original order.  This can be used to track changes to the order for taxing purposes.
   * @return originalDocumentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order id of the original order.  This can be used to track changes to the order for taxing purposes.")

  public String getOriginalDocumentCode() {
    return originalDocumentCode;
  }


  public void setOriginalDocumentCode(String originalDocumentCode) {
    this.originalDocumentCode = originalDocumentCode;
  }


  public ThrirdPartyTaxableOrder orderId(String orderId) {
    
    this.orderId = orderId;
    return this;
  }

   /**
   * Get orderId
   * @return orderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrderId() {
    return orderId;
  }


  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }


  public ThrirdPartyTaxableOrder orderNumber(Integer orderNumber) {
    
    this.orderNumber = orderNumber;
    return this;
  }

   /**
   * Get orderNumber
   * @return orderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOrderNumber() {
    return orderNumber;
  }


  public void setOrderNumber(Integer orderNumber) {
    this.orderNumber = orderNumber;
  }


  public ThrirdPartyTaxableOrder originalOrderDate(OffsetDateTime originalOrderDate) {
    
    this.originalOrderDate = originalOrderDate;
    return this;
  }

   /**
   * The date of the original order.  This is used when calculating changes to the Taxable Order, evaluating them at this time rather than the present.
   * @return originalOrderDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date of the original order.  This is used when calculating changes to the Taxable Order, evaluating them at this time rather than the present.")

  public OffsetDateTime getOriginalOrderDate() {
    return originalOrderDate;
  }


  public void setOriginalOrderDate(OffsetDateTime originalOrderDate) {
    this.originalOrderDate = originalOrderDate;
  }


  public ThrirdPartyTaxableOrder taxRequestType(String taxRequestType) {
    
    this.taxRequestType = taxRequestType;
    return this;
  }

   /**
   * Used to differentiate between an Order and a Return being used as the source of this Taxable Order
   * @return taxRequestType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Used to differentiate between an Order and a Return being used as the source of this Taxable Order")

  public String getTaxRequestType() {
    return taxRequestType;
  }


  public void setTaxRequestType(String taxRequestType) {
    this.taxRequestType = taxRequestType;
  }


  public ThrirdPartyTaxableOrder attributes(List<TaxAttribute> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public ThrirdPartyTaxableOrder addAttributesItem(TaxAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TaxAttribute> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<TaxAttribute> attributes) {
    this.attributes = attributes;
  }


  public ThrirdPartyTaxableOrder shippingDiscounts(List<AppliedOrderShippingDiscount> shippingDiscounts) {
    
    this.shippingDiscounts = shippingDiscounts;
    return this;
  }

  public ThrirdPartyTaxableOrder addShippingDiscountsItem(AppliedOrderShippingDiscount shippingDiscountsItem) {
    if (this.shippingDiscounts == null) {
      this.shippingDiscounts = new ArrayList<>();
    }
    this.shippingDiscounts.add(shippingDiscountsItem);
    return this;
  }

   /**
   * Get shippingDiscounts
   * @return shippingDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AppliedOrderShippingDiscount> getShippingDiscounts() {
    return shippingDiscounts;
  }


  public void setShippingDiscounts(List<AppliedOrderShippingDiscount> shippingDiscounts) {
    this.shippingDiscounts = shippingDiscounts;
  }


  public ThrirdPartyTaxableOrder shippingDiscount(AppliedOrderShippingDiscount shippingDiscount) {
    
    this.shippingDiscount = shippingDiscount;
    return this;
  }

   /**
   * Get shippingDiscount
   * @return shippingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AppliedOrderShippingDiscount getShippingDiscount() {
    return shippingDiscount;
  }


  public void setShippingDiscount(AppliedOrderShippingDiscount shippingDiscount) {
    this.shippingDiscount = shippingDiscount;
  }


  public ThrirdPartyTaxableOrder orderDiscounts(List<PricingRuntimeAppliedDiscount> orderDiscounts) {
    
    this.orderDiscounts = orderDiscounts;
    return this;
  }

  public ThrirdPartyTaxableOrder addOrderDiscountsItem(PricingRuntimeAppliedDiscount orderDiscountsItem) {
    if (this.orderDiscounts == null) {
      this.orderDiscounts = new ArrayList<>();
    }
    this.orderDiscounts.add(orderDiscountsItem);
    return this;
  }

   /**
   * The discount that has been applied to the cart itself. If multiple discounts exist, this is the discount that the system applies because it offers the best savings for the shopper. This is a negative number.
   * @return orderDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The discount that has been applied to the cart itself. If multiple discounts exist, this is the discount that the system applies because it offers the best savings for the shopper. This is a negative number.")

  public List<PricingRuntimeAppliedDiscount> getOrderDiscounts() {
    return orderDiscounts;
  }


  public void setOrderDiscounts(List<PricingRuntimeAppliedDiscount> orderDiscounts) {
    this.orderDiscounts = orderDiscounts;
  }


  public ThrirdPartyTaxableOrder orderDiscount(PricingRuntimeAppliedDiscount orderDiscount) {
    
    this.orderDiscount = orderDiscount;
    return this;
  }

   /**
   * Get orderDiscount
   * @return orderDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PricingRuntimeAppliedDiscount getOrderDiscount() {
    return orderDiscount;
  }


  public void setOrderDiscount(PricingRuntimeAppliedDiscount orderDiscount) {
    this.orderDiscount = orderDiscount;
  }


  public ThrirdPartyTaxableOrder handlingDiscounts(List<PricingRuntimeAppliedDiscount> handlingDiscounts) {
    
    this.handlingDiscounts = handlingDiscounts;
    return this;
  }

  public ThrirdPartyTaxableOrder addHandlingDiscountsItem(PricingRuntimeAppliedDiscount handlingDiscountsItem) {
    if (this.handlingDiscounts == null) {
      this.handlingDiscounts = new ArrayList<>();
    }
    this.handlingDiscounts.add(handlingDiscountsItem);
    return this;
  }

   /**
   * The list of historically-applied handling discounts.  The active one will have IsExcluded &#x3D;&#x3D; false
   * @return handlingDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of historically-applied handling discounts.  The active one will have IsExcluded == false")

  public List<PricingRuntimeAppliedDiscount> getHandlingDiscounts() {
    return handlingDiscounts;
  }


  public void setHandlingDiscounts(List<PricingRuntimeAppliedDiscount> handlingDiscounts) {
    this.handlingDiscounts = handlingDiscounts;
  }


  public ThrirdPartyTaxableOrder handlingDiscount(PricingRuntimeAppliedDiscount handlingDiscount) {
    
    this.handlingDiscount = handlingDiscount;
    return this;
  }

   /**
   * Get handlingDiscount
   * @return handlingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PricingRuntimeAppliedDiscount getHandlingDiscount() {
    return handlingDiscount;
  }


  public void setHandlingDiscount(PricingRuntimeAppliedDiscount handlingDiscount) {
    this.handlingDiscount = handlingDiscount;
  }


  public ThrirdPartyTaxableOrder shippingMethodCode(String shippingMethodCode) {
    
    this.shippingMethodCode = shippingMethodCode;
    return this;
  }

   /**
   * Code that uniquely identifies the shipping method such as \&quot;Ground,\&quot; \&quot;Overnight,\&quot; or \&quot;Digital.\&quot;  The site&#39;s shipping settings lists the valid shipping methods specified for this site.
   * @return shippingMethodCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Code that uniquely identifies the shipping method such as \"Ground,\" \"Overnight,\" or \"Digital.\"  The site's shipping settings lists the valid shipping methods specified for this site.")

  public String getShippingMethodCode() {
    return shippingMethodCode;
  }


  public void setShippingMethodCode(String shippingMethodCode) {
    this.shippingMethodCode = shippingMethodCode;
  }


  public ThrirdPartyTaxableOrder shippingMethodName(String shippingMethodName) {
    
    this.shippingMethodName = shippingMethodName;
    return this;
  }

   /**
   * Readable name of the shipping method
   * @return shippingMethodName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Readable name of the shipping method")

  public String getShippingMethodName() {
    return shippingMethodName;
  }


  public void setShippingMethodName(String shippingMethodName) {
    this.shippingMethodName = shippingMethodName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThrirdPartyTaxableOrder thrirdPartyTaxableOrder = (ThrirdPartyTaxableOrder) o;
    return Objects.equals(this.orderDate, thrirdPartyTaxableOrder.orderDate) &&
        Objects.equals(this.taxContext, thrirdPartyTaxableOrder.taxContext) &&
        Objects.equals(this.lineItems, thrirdPartyTaxableOrder.lineItems) &&
        Objects.equals(this.shippingAmount, thrirdPartyTaxableOrder.shippingAmount) &&
        Objects.equals(this.currencyCode, thrirdPartyTaxableOrder.currencyCode) &&
        Objects.equals(this.handlingFee, thrirdPartyTaxableOrder.handlingFee) &&
        Objects.equals(this.originalDocumentCode, thrirdPartyTaxableOrder.originalDocumentCode) &&
        Objects.equals(this.orderId, thrirdPartyTaxableOrder.orderId) &&
        Objects.equals(this.orderNumber, thrirdPartyTaxableOrder.orderNumber) &&
        Objects.equals(this.originalOrderDate, thrirdPartyTaxableOrder.originalOrderDate) &&
        Objects.equals(this.taxRequestType, thrirdPartyTaxableOrder.taxRequestType) &&
        Objects.equals(this.attributes, thrirdPartyTaxableOrder.attributes) &&
        Objects.equals(this.shippingDiscounts, thrirdPartyTaxableOrder.shippingDiscounts) &&
        Objects.equals(this.shippingDiscount, thrirdPartyTaxableOrder.shippingDiscount) &&
        Objects.equals(this.orderDiscounts, thrirdPartyTaxableOrder.orderDiscounts) &&
        Objects.equals(this.orderDiscount, thrirdPartyTaxableOrder.orderDiscount) &&
        Objects.equals(this.handlingDiscounts, thrirdPartyTaxableOrder.handlingDiscounts) &&
        Objects.equals(this.handlingDiscount, thrirdPartyTaxableOrder.handlingDiscount) &&
        Objects.equals(this.shippingMethodCode, thrirdPartyTaxableOrder.shippingMethodCode) &&
        Objects.equals(this.shippingMethodName, thrirdPartyTaxableOrder.shippingMethodName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderDate, taxContext, lineItems, shippingAmount, currencyCode, handlingFee, originalDocumentCode, orderId, orderNumber, originalOrderDate, taxRequestType, attributes, shippingDiscounts, shippingDiscount, orderDiscounts, orderDiscount, handlingDiscounts, handlingDiscount, shippingMethodCode, shippingMethodName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThrirdPartyTaxableOrder {\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    taxContext: ").append(toIndentedString(taxContext)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    handlingFee: ").append(toIndentedString(handlingFee)).append("\n");
    sb.append("    originalDocumentCode: ").append(toIndentedString(originalDocumentCode)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    orderNumber: ").append(toIndentedString(orderNumber)).append("\n");
    sb.append("    originalOrderDate: ").append(toIndentedString(originalOrderDate)).append("\n");
    sb.append("    taxRequestType: ").append(toIndentedString(taxRequestType)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    shippingDiscounts: ").append(toIndentedString(shippingDiscounts)).append("\n");
    sb.append("    shippingDiscount: ").append(toIndentedString(shippingDiscount)).append("\n");
    sb.append("    orderDiscounts: ").append(toIndentedString(orderDiscounts)).append("\n");
    sb.append("    orderDiscount: ").append(toIndentedString(orderDiscount)).append("\n");
    sb.append("    handlingDiscounts: ").append(toIndentedString(handlingDiscounts)).append("\n");
    sb.append("    handlingDiscount: ").append(toIndentedString(handlingDiscount)).append("\n");
    sb.append("    shippingMethodCode: ").append(toIndentedString(shippingMethodCode)).append("\n");
    sb.append("    shippingMethodName: ").append(toIndentedString(shippingMethodName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("orderDate");
    openapiFields.add("taxContext");
    openapiFields.add("lineItems");
    openapiFields.add("shippingAmount");
    openapiFields.add("currencyCode");
    openapiFields.add("handlingFee");
    openapiFields.add("originalDocumentCode");
    openapiFields.add("orderId");
    openapiFields.add("orderNumber");
    openapiFields.add("originalOrderDate");
    openapiFields.add("taxRequestType");
    openapiFields.add("attributes");
    openapiFields.add("shippingDiscounts");
    openapiFields.add("shippingDiscount");
    openapiFields.add("orderDiscounts");
    openapiFields.add("orderDiscount");
    openapiFields.add("handlingDiscounts");
    openapiFields.add("handlingDiscount");
    openapiFields.add("shippingMethodCode");
    openapiFields.add("shippingMethodName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ThrirdPartyTaxableOrder
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ThrirdPartyTaxableOrder.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ThrirdPartyTaxableOrder is not found in the empty JSON string", ThrirdPartyTaxableOrder.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ThrirdPartyTaxableOrder.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ThrirdPartyTaxableOrder` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `taxContext`
      if (jsonObj.get("taxContext") != null && !jsonObj.get("taxContext").isJsonNull()) {
        ThrirdPartyTaxContext.validateJsonObject(jsonObj.getAsJsonObject("taxContext"));
      }
      if (jsonObj.get("lineItems") != null && !jsonObj.get("lineItems").isJsonNull()) {
        JsonArray jsonArraylineItems = jsonObj.getAsJsonArray("lineItems");
        if (jsonArraylineItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("lineItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `lineItems` to be an array in the JSON string but got `%s`", jsonObj.get("lineItems").toString()));
          }

          // validate the optional field `lineItems` (array)
          for (int i = 0; i < jsonArraylineItems.size(); i++) {
            TaxableLineItem.validateJsonObject(jsonArraylineItems.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("originalDocumentCode") != null && !jsonObj.get("originalDocumentCode").isJsonNull()) && !jsonObj.get("originalDocumentCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalDocumentCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalDocumentCode").toString()));
      }
      if ((jsonObj.get("orderId") != null && !jsonObj.get("orderId").isJsonNull()) && !jsonObj.get("orderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderId").toString()));
      }
      if ((jsonObj.get("taxRequestType") != null && !jsonObj.get("taxRequestType").isJsonNull()) && !jsonObj.get("taxRequestType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxRequestType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxRequestType").toString()));
      }
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            TaxAttribute.validateJsonObject(jsonArrayattributes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("shippingDiscounts") != null && !jsonObj.get("shippingDiscounts").isJsonNull()) {
        JsonArray jsonArrayshippingDiscounts = jsonObj.getAsJsonArray("shippingDiscounts");
        if (jsonArrayshippingDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shippingDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shippingDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("shippingDiscounts").toString()));
          }

          // validate the optional field `shippingDiscounts` (array)
          for (int i = 0; i < jsonArrayshippingDiscounts.size(); i++) {
            AppliedOrderShippingDiscount.validateJsonObject(jsonArrayshippingDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `shippingDiscount`
      if (jsonObj.get("shippingDiscount") != null && !jsonObj.get("shippingDiscount").isJsonNull()) {
        AppliedOrderShippingDiscount.validateJsonObject(jsonObj.getAsJsonObject("shippingDiscount"));
      }
      if (jsonObj.get("orderDiscounts") != null && !jsonObj.get("orderDiscounts").isJsonNull()) {
        JsonArray jsonArrayorderDiscounts = jsonObj.getAsJsonArray("orderDiscounts");
        if (jsonArrayorderDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("orderDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `orderDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("orderDiscounts").toString()));
          }

          // validate the optional field `orderDiscounts` (array)
          for (int i = 0; i < jsonArrayorderDiscounts.size(); i++) {
            PricingRuntimeAppliedDiscount.validateJsonObject(jsonArrayorderDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `orderDiscount`
      if (jsonObj.get("orderDiscount") != null && !jsonObj.get("orderDiscount").isJsonNull()) {
        PricingRuntimeAppliedDiscount.validateJsonObject(jsonObj.getAsJsonObject("orderDiscount"));
      }
      if (jsonObj.get("handlingDiscounts") != null && !jsonObj.get("handlingDiscounts").isJsonNull()) {
        JsonArray jsonArrayhandlingDiscounts = jsonObj.getAsJsonArray("handlingDiscounts");
        if (jsonArrayhandlingDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("handlingDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `handlingDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("handlingDiscounts").toString()));
          }

          // validate the optional field `handlingDiscounts` (array)
          for (int i = 0; i < jsonArrayhandlingDiscounts.size(); i++) {
            PricingRuntimeAppliedDiscount.validateJsonObject(jsonArrayhandlingDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `handlingDiscount`
      if (jsonObj.get("handlingDiscount") != null && !jsonObj.get("handlingDiscount").isJsonNull()) {
        PricingRuntimeAppliedDiscount.validateJsonObject(jsonObj.getAsJsonObject("handlingDiscount"));
      }
      if ((jsonObj.get("shippingMethodCode") != null && !jsonObj.get("shippingMethodCode").isJsonNull()) && !jsonObj.get("shippingMethodCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodCode").toString()));
      }
      if ((jsonObj.get("shippingMethodName") != null && !jsonObj.get("shippingMethodName").isJsonNull()) && !jsonObj.get("shippingMethodName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethodName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingMethodName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ThrirdPartyTaxableOrder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ThrirdPartyTaxableOrder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ThrirdPartyTaxableOrder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ThrirdPartyTaxableOrder.class));

       return (TypeAdapter<T>) new TypeAdapter<ThrirdPartyTaxableOrder>() {
           @Override
           public void write(JsonWriter out, ThrirdPartyTaxableOrder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ThrirdPartyTaxableOrder read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ThrirdPartyTaxableOrder given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ThrirdPartyTaxableOrder
  * @throws IOException if the JSON string is invalid with respect to ThrirdPartyTaxableOrder
  */
  public static ThrirdPartyTaxableOrder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ThrirdPartyTaxableOrder.class);
  }

 /**
  * Convert an instance of ThrirdPartyTaxableOrder to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

