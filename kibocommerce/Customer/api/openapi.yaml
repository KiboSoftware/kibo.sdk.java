openapi: 3.0.1
info:
  description: OpenAPI Spec for Kibo Customer Service
  title: Kibo Customer Service
servers:
- description: TenantPod Host
  url: "https://{tenantPodHost}/api"
- description: Tenant Level Api
  url: "https://t{tenantId}.{env}.mozu.com/api"
  variables:
    tenantId:
      default: "0"
      description: Id of the Tenant
    env:
      default: sandbox
      enum:
      - sandbox
      - tp1
      - tp2
      - tp3
      - tp4
      - tp5
      - stg1
      - stg2
- description: Site Level Api
  url: "https://t{tenantId}-s{siteId}.{env}.mozu.com/api"
  variables:
    tenantId:
      default: "0"
      description: Id of the Tenant
    siteId:
      default: "0"
      description: Id of the Site
    env:
      default: sandbox
      enum:
      - sandbox
      - tp1
      - tp2
      - tp3
      - tp4
      - tp5
      - stg1
- description: HomePod Api
  url: https://home.mozu.com/api
- description: EURO Tenant Level Api
  url: "https://t{tenantId}.{env}.euw1.kibocommerce.com/api"
  variables:
    tenantId:
      default: "0"
      description: Id of the Tenant
    env:
      default: sandbox
      enum:
      - sb
      - tp1
- description: EURO Site Level Api
  url: "https://t{tenantId}-s{siteId}.{env}.euw1.kibocommerce.com/api"
  variables:
    tenantId:
      default: "0"
      description: Id of the Tenant
    siteId:
      default: "0"
      description: Id of the Site
    env:
      default: sandbox
      enum:
      - sb
      - tp1
- description: EURO HomePod Api
  url: https://home.euw1.kibocommerce.com/api
security:
- bearerAuth: []
  clientOauth2: []
paths:
  /commerce/customer/accountattributedefinition/attributes:
    get:
      description: Get Attributes
      operationId: getAttributes
      parameters:
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttributeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttributeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttributeCollection'
          description: Success
      summary: Get Attributes
      tags:
      - CustomerAccountAttributeDefinitions
      x-accepts: application/json
    post:
      description: Create Attribute
      operationId: createAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommerceRuntimeAttribute'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
          description: Success
      summary: Create Attribute
      tags:
      - CustomerAccountAttributeDefinitions
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accountattributedefinition/attributes/{attributeFQN}/VocabularyValues:
    get:
      description: Get Attribute Vocabulary Values
      operationId: getAttributeVocabularyValues
      parameters:
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommerceRuntimeAttributeVocabularyValue'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommerceRuntimeAttributeVocabularyValue'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommerceRuntimeAttributeVocabularyValue'
                type: array
          description: Success
      summary: Get Attribute Vocabulary Values
      tags:
      - CustomerAccountAttributeDefinitions
      x-accepts: application/json
  /commerce/customer/accountattributedefinition/attributes/{attributeFQN}:
    get:
      description: Get Attribute
      operationId: getAttribute
      parameters:
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
          description: Success
      summary: Get Attribute
      tags:
      - CustomerAccountAttributeDefinitions
      x-accepts: application/json
    put:
      description: Update Attribute
      operationId: updateAttribute
      parameters:
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommerceRuntimeAttribute'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
          description: Success
      summary: Update Attribute
      tags:
      - CustomerAccountAttributeDefinitions
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/addressvalidation:
    post:
      description: "Allows merchants and services to validate an address against the\
        \ configured AddressValidator capability in SiteSettings, fallback uses USPS\
        \ Address Validation."
      operationId: validateAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressValidationRequest'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressValidationResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AddressValidationResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/AddressValidationResponse'
          description: Success
      summary: Validate Address
      tags:
      - AddressValidation
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/authtickets:
    post:
      description: Authenticates a user for a particular site given a set of user
        credentials.
      operationId: createUserAuthTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUserAuthInfo'
        description: User's email address and password.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
          description: Success
      summary: Create User Auth Ticket
      tags:
      - StorefrontAuthTicket
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/authtickets/refresh:
    put:
      description: Refreshes a user's authentication.
      operationId: refreshUserAuthTicket
      parameters:
      - description: The user's refresh token.
        explode: true
        in: query
        name: refreshToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
          description: Success
      summary: Refresh User Auth Ticket
      tags:
      - StorefrontAuthTicket
      x-accepts: application/json
  /commerce/customer/authtickets/anonymousshopper:
    get:
      description: Authenticates anonymous shopper for the site.
      operationId: createAnonymousShopperAuthTicket
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
          description: Success
      summary: Create Anonymous Shopper Auth Ticket
      tags:
      - StorefrontAuthTicket
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/attributes:
    get:
      description: Retrieves a list of notes added to an account according to any
        specified filter criteria and sort options.
      operationId: getB2BAccountAttributes
      parameters:
      - description: Unique identifier of the customer account whose notes you want
          to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttributeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttributeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttributeCollection'
          description: Success
      summary: Get B2B Account Attributes
      tags:
      - B2BAccount
      x-accepts: application/json
    post:
      description: Add a customer attribute to the B2B account.
      operationId: addB2BAccountAttribute
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttribute'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
          description: Success
      summary: Add B2B Account tAttribute
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}:
    delete:
      description: Deletes a specific customer attribute specified by attributeFQN.
      operationId: deleteB2BAccountAttribute
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete B2B Account Attribute
      tags:
      - B2BAccount
      x-accepts: application/json
    get:
      description: Retrieves the contents of a particular attribute attached to a
        specified account.
      operationId: getB2BAccountAttribute
      parameters:
      - description: Unique identifier of the b2b account that contains the attribute
          to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Fully qualified name of the attribute that you want to retrieve.
        explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
          description: Success
      summary: Get B2B Account Attribute
      tags:
      - B2BAccount
      x-accepts: application/json
    put:
      description: Modifies an existing attribute for a b2b account.
      operationId: updateB2BAccountAttribute
      parameters:
      - description: Unique identifier of the account whose attribute you want to
          modify.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttribute'
        description: The new content to replace the existing attribute.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
          description: Success
      summary: Update B2B Account Attribute
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts:
    get:
      description: Retrieves a list of B2B accounts according to any filter criteria
        and sort options.
      operationId: getB2BAccounts
      parameters:
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional.\r\n            For example,\
          \ applications can filter on UserId to get the single record of the current\
          \ customer."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: a quick filter which will search a predefined set of fields for
          a match
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: qLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Used to refine the default information returned from a request.\
          \ To reduce amount of customer account information returned, use the valid\
          \ response groups: Contacts, CustomerAccountNotes, and OrderSummary. Optional."
        explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccountCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccountCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccountCollection'
          description: Success
      summary: Get B2B Accounts
      tags:
      - B2BAccount
      x-accepts: application/json
    post:
      description: Creates a new B2B account.
      operationId: addAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BAccount'
        description: Properties of the new B2B account to create.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Add Account
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}:
    get:
      description: Retrieves the details of a B2B account specified by its unique
        identifier.
      operationId: getB2BAccount
      parameters:
      - description: Unique identifier of the B2B account whose details you want to
          retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to refine the default information returned from a request.\
          \ To reduce amount of customer account information returned, use the valid\
          \ response groups: Contacts, CustomerAccountNotes, and OrderSummary. Optional."
        explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Get B2B Account
      tags:
      - B2BAccount
      x-accepts: application/json
    put:
      description: Modifies an existing B2B account.
      operationId: updateAccount
      parameters:
      - description: Unique identifier of the B2B account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BAccount'
        description: Properties of the B2B account to update.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Update Account
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/hierarchy:
    get:
      description: Retrieves the account hierarchy for a B2B account specified by
        its unique identifier.
      operationId: getB2BAccountHierarchy
      parameters:
      - description: Unique identifier of the B2B account whose account hierarchy
          you want to retrieve. This can be any account belonging to the same hierarchy.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to refine the default information returned from a request.\
          \ To reduce amount of customer account information returned, use the valid\
          \ response groups: Contacts, CustomerAccountNotes, and OrderSummary. Optional."
        explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccountHierarchyResult'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccountHierarchyResult'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccountHierarchyResult'
          description: Success
      summary: Get B2B Account Hierarchy
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/changeparent/{parentAccountId}:
    post:
      description: Change the B2B parent account for an existing B2B account that
        belongs to an account hierarchy.
      operationId: changeParentAccount
      parameters:
      - description: Unique identifier of the B2B account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: parentAccountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Change Parent Account
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/salesrep/{userId}:
    delete:
      description: Removes a specific sales rep from B2B account .
      operationId: removeSalesRepFromB2BAccount
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Remove Sales Rep From B2B Account
      tags:
      - B2BAccount
      x-accepts: application/json
    post:
      description: Add Sales Rep To B2B Account
      operationId: addSalesRepToB2BAccount
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Add Sales Rep To B2B Account
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/addsalesreps:
    post:
      description: Adds lists of sales reps to a B2B account.
      operationId: addSalesRepsToB2BAccount
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Add Sales Reps To B2B Account
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/salesrep:
    put:
      description: Updates list of  sales reps on a B2B account.
      operationId: updateSalesRepsOnB2BAccount
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Update Sales Reps On B2B Account
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/status/{actionName}:
    put:
      description: Updates the status on B2B account.
      operationId: updateB2BAccountStatus
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: actionName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BAccount'
          description: Success
      summary: Update B2B Account Status
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/salesrep/{userId}:
    get:
      description: Gets list of accounts for the B2B sales rep account.
      operationId: getAccountsForSalesRep
      parameters:
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
            text/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
            text/plain:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Get Accounts For Sales Rep
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/upgradeaccounts:
    put:
      description: Upgrades bulk B2C accounts to B2B
      operationId: upgradeAccountsToB2B
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: List of accountIds(integers)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpgradeToB2BAccountResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UpgradeToB2BAccountResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/UpgradeToB2BAccountResponse'
          description: Success
      summary: Upgrade B2C Accounts To B2B
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/user:
    post:
      description: Adds user to B2B account.
      operationId: addUser
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BUserAndAuthInfo'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BUser'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BUser'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BUser'
          description: Success
      summary: Add User
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/users:
    get:
      description: Retrieves a list of user for a B2B account according to any filter
        criteria and sort options.
      operationId: getUsersAsync
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional.\r\n            For example,\
          \ applications can filter on UserId to get the single record of the current\
          \ customer."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: a quick filter which will search a predefined set of fields for
          a match
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - description: limit on quick filter which will search a predefined set of fields
          for a match
        explode: true
        in: query
        name: qLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Used to refine the default information returned from a request.\
          \ To reduce amount of customer account information returned, use the valid\
          \ response groups: Contacts, CustomerAccountNotes, and OrderSummary. Optional."
        explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BUserCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BUserCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BUserCollection'
          description: Success
      summary: Get Users Async
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/user/{userId}:
    put:
      description: Updates a B2B user specified by user Id.
      operationId: updateUser
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/B2BUser'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/B2BUser'
            text/json:
              schema:
                $ref: '#/components/schemas/B2BUser'
            text/plain:
              schema:
                $ref: '#/components/schemas/B2BUser'
          description: Success
      summary: Update User
      tags:
      - B2BAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/user/{userId}/remove:
    put:
      description: Removes a B2B user from an account.
      operationId: removeUser
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Remove User
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/user/{userId}/roles:
    get:
      description: Retrieves all the roles for a specified user of a b2b account.
      operationId: getUserRolesAsync
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifier of the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerUserRoleCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerUserRoleCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerUserRoleCollection'
          description: Success
      summary: Get User Roles Async
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2baccounts/{accountId}/user/{userId}/roles/{roleId}:
    delete:
      description: Removes a role from the specified user.
      operationId: removeUserRoleAsync
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifier of the user with the role to delete.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifer of the role to delete.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Remove User Role Async
      tags:
      - B2BAccount
      x-accepts: application/json
    post:
      description: Add a role to B2B user.
      operationId: addUserRoleAsync
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifier of the user who receives the role.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      - description: Unique identifier of the role to add.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Add User Role Async
      tags:
      - B2BAccount
      x-accepts: application/json
  /commerce/customer/b2bcontacts:
    get:
      description: Retrieves a list of B2B contacts according to any specified filter
        criteria and sort options.
      operationId: getB2BContacts
      parameters:
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: qLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedCustomerContactCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtendedCustomerContactCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ExtendedCustomerContactCollection'
          description: Success
      summary: Get B2B Contacts
      tags:
      - B2BContact
      x-accepts: application/json
  /commerce/customer/credits/{code}/auditentries:
    get:
      description: Retrieves a list of audit entries according to any filter criteria
        and sort options.
      operationId: getAuditEntries
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditAuditEntryCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditAuditEntryCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditAuditEntryCollection'
          description: Success
      summary: Get Audit Entries
      tags:
      - Credit
      x-accepts: application/json
  /commerce/customer/credits:
    get:
      description: Retrieves a list of credit collection according to any filter criteria
        and sort options.
      operationId: getCredits
      parameters:
      - description: ""
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCollection'
          description: Success
      summary: Get Credits
      tags:
      - Credit
      x-accepts: application/json
    post:
      description: Adds credit to user account.
      operationId: addCredit
      parameters:
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCredit'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
          description: Success
      summary: Add Credit
      tags:
      - Credit
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/credits/{code}:
    delete:
      description: Deletes a credit.
      operationId: deleteCredit
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete credit
      tags:
      - Credit
      x-accepts: application/json
    get:
      description: Get credit specified by code.
      operationId: getCredit
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
          description: Success
      summary: Get credit
      tags:
      - Credit
      x-accepts: application/json
    put:
      description: Updates a credit specified by a credit code.
      operationId: updateCredit
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCredit'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
          description: Success
      summary: Update Credit
      tags:
      - Credit
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/credits/{code}/associate-to-shopper:
    put:
      description: Maps credit to the shopper.
      operationId: associateCreditToShopper
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerCredit'
          description: Success
      summary: Associate Credit To Shopper
      tags:
      - Credit
      x-accepts: application/json
  /commerce/customer/credits/{code}/Resend-Email:
    put:
      description: Resend email when credit is created.
      operationId: resendCreditCreatedEmail
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      summary: Resend Credit Created Email
      tags:
      - Credit
      x-accepts: application/json
  /commerce/customer/credits/{code}/transactions:
    get:
      description: Gets credit transactions according to any filter criteria and sort
        options.
      operationId: getTransactions
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransactionCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditTransactionCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditTransactionCollection'
          description: Success
      summary: Get Transactions
      tags:
      - Credit
      x-accepts: application/json
    post:
      description: Adds a credit transaction.
      operationId: addTransaction
      parameters:
      - description: ""
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditTransaction'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditTransaction'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditTransaction'
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditTransaction'
          description: Success
      summary: Add Transaction
      tags:
      - Credit
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/attributes:
    get:
      description: Retrieves a collection of account attributes according to any specified
        filter criteria and sort options.
      operationId: getAccountAttributes
      parameters:
      - description: Unique identifier of the customer account whose notes you want
          to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttributeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttributeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttributeCollection'
          description: Success
      summary: Get Account Attributes
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: Adds a new account attribute.
      operationId: addAccountAttribute
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttribute'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
          description: Success
      summary: Add Account Attribute
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/attributes/{attributeFQN}:
    delete:
      description: Deletes an account attribute specified by attributeFQN.
      operationId: deleteAccountAttribute
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      - description: ""
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Success
      summary: Delete Account Attribute
      tags:
      - CustomerAccount
      x-accepts: application/json
    get:
      description: Retrieves the contents of a particular attribute attached to a
        specified account.
      operationId: getAccountAttribute
      parameters:
      - description: Unique identifier of the account that contains the attribute
          to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Fully qualified name of the attribute that you want to retrieve.
        explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
          description: Success
      summary: Get Account Attribute
      tags:
      - CustomerAccount
      x-accepts: application/json
    put:
      description: Modifies an existing attribute for an account.
      operationId: updateAccountAttribute
      parameters:
      - description: Unique identifier of the account whose attribute you want to
          modify.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttribute'
        description: The new content to replace the existing attribute.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAttribute'
          description: Success
      summary: Update Account Attribute
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/cards:
    get:
      description: Retrieves a list of cards for the specified customer account.
      operationId: getAccountCards
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CardCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CardCollection'
          description: Success
      summary: Get Account Cards
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: Creates a card on the specific customer account.
      operationId: addAccountCard
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
            text/json:
              schema:
                $ref: '#/components/schemas/Card'
            text/plain:
              schema:
                $ref: '#/components/schemas/Card'
          description: Success
      summary: Add Account Card
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/cards/{cardId}:
    delete:
      description: Removes a card from the specified customer account.
      operationId: deleteAccountCard
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete Account Card
      tags:
      - CustomerAccount
      x-accepts: application/json
    get:
      description: Retrieves a card for the specified customer account and card ID.
      operationId: getAccountCard
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
            text/json:
              schema:
                $ref: '#/components/schemas/Card'
            text/plain:
              schema:
                $ref: '#/components/schemas/Card'
          description: Success
      summary: Get Account Card
      tags:
      - CustomerAccount
      x-accepts: application/json
    put:
      description: Updates a card on the specific customer account.
      operationId: updateAccountCard
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: cardId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Card'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Card'
            text/json:
              schema:
                $ref: '#/components/schemas/Card'
            text/plain:
              schema:
                $ref: '#/components/schemas/Card'
          description: Success
      summary: Update Account Card
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/contacts:
    get:
      description: Retrieves a list of contacts for a customer according to any specified
        filter criteria and sort options.
      operationId: getAccountContacts
      parameters:
      - description: Unique identifier of the customer account whose CustomerContact
          information you want to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: "If provided, the primary markings on the contacts will be based\
          \ on the user's preferred primary overrides"
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerContactCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerContactCollection'
          description: Success
      summary: Get Account Contacts
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: "Creates a new CustomerContact for a customer account, for example,\
        \ a new shipping address."
      operationId: addAccountContact
      parameters:
      - description: Unique identifier of the customer account to contain the new
          CustomerContact.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerContact'
        description: "Properties of the new CustomerContact. Required properties:\
          \ CustomerContact.Email, ContactType."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContact'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerContact'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerContact'
          description: Success
      summary: Add Account Contact
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Creates a new CustomerContacts for a customer account in bulk to
        support adding multiple contacts in a multi-ship scenario.
      operationId: addAccountContactList
      parameters:
      - description: Unique identifier of the customer account to contain the new
          CustomerContact.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CustomerContact'
              type: array
        description: "List of CustomerContact objects : Properties of each new CustomerContact.\
          \ Required properties: CustomerContact.Email, ContactType."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContactCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerContactCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerContactCollection'
          description: Success
      summary: Add Account Contact List
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/contacts/{contactId}:
    delete:
      description: Deletes a CustomerContact for the specified customer account.
      operationId: deleteAccountContact
      parameters:
      - description: Unique identifier of the customer account whose CustomerContact
          you want to delete.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete Account Contact
      tags:
      - CustomerAccount
      x-accepts: application/json
    get:
      description: "Retrieves the specified CustomerContact for a customer account,\
        \ for example, a billing or shipping CustomerContact."
      operationId: getAccountContact
      parameters:
      - description: Unique identifier of the customer account whose CustomerContact
          information you want to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifier of the CustomerContact whose details you want
          to retrieve.
        explode: false
        in: path
        name: contactId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "If provided, the primary markings on the contact will be based\
          \ on the user's preferred primary overrides"
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContact'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerContact'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerContact'
          description: Success
      summary: Get Account Contact
      tags:
      - CustomerAccount
      x-accepts: application/json
    put:
      description: "Updates a CustomerContact for a specified customer account, for\
        \ example to update addresses or change which CustomerContact is the primary\
        \ CustomerContact for billing."
      operationId: updateAccountContact
      parameters:
      - description: Unique identifier of the customer account whose CustomerContact
          information you want to update.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: false
        in: path
        name: contactId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "If provided, the primary markings on the contact will be stored\
          \ as the user's preferred primary override"
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerContact'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerContact'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerContact'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerContact'
          description: Success
      summary: Update Account Contact
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts:
    get:
      description: Retrieves a list of customer accounts according to any filter criteria
        and sort options.
      operationId: getAccounts
      parameters:
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional.\r\n            \r\n  \
          \          For example, applications can filter on UserId to get the single\
          \ record of the current customer."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: We added this test to demo new publishing @test@. Used to page
          results from a query. Indicates the maximum number of entities to return
          from a query. The default value is 20 and the maximum value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: a quick filter which will search a predefined set of fields for
          a match
        explode: true
        in: query
        name: q
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: qLimit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isAnonymous
        required: false
        schema:
          type: boolean
        style: form
      - description: "Used to refine the default information returned from a request.\
          \ To reduce amount of customer account information returned, use the valid\
          \ response groups: Contacts, CustomerAccountNotes, and OrderSummary. Optional."
        explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAccountCollection'
          description: Success
      summary: Get Accounts
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: Creates a new customer account.
      operationId: addAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccount'
        description: Properties of the new customer account to create.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
          description: Success
      summary: Add Account
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}:
    delete:
      description: "Deletes a customer account. A customer account cannot be deleted\
        \ if any orders exist, past or present."
      operationId: deleteAccount
      parameters:
      - description: Unique identifier of the customer account to delete.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete Account
      tags:
      - CustomerAccount
      x-accepts: application/json
    get:
      description: Retrieves the details of a customer account specified by its unique
        identifier.
      operationId: getAccount
      parameters:
      - description: Unique identifier of the customer account whose details you want
          to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
          description: Success
      summary: Get Account
      tags:
      - CustomerAccount
      x-accepts: application/json
    put:
      description: "Modifies an existing customer account, for example, to change\
        \ the primary billing contact or change whether to accept marketing material."
      operationId: updateAccount
      parameters:
      - description: Unique identifier of the customer account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccount'
        description: Properties of the customer account to update.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
          description: Success
      summary: Update Account
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/current:
    get:
      description: Retrieves the details of a the current logged in customer account
      operationId: getCurrentAccount
      parameters:
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAccount'
          description: Success
      summary: Retrieves the details of a the current logged in customer account
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/transactions:
    get:
      description: Gets the list of transactions on customer account.
      operationId: getTransactions
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
          description: Success
      summary: Get Transactions
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: Add a transaction on customer account.
      operationId: addTransaction
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
            text/json:
              schema:
                $ref: '#/components/schemas/Transaction'
            text/plain:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Success
      summary: Add Transaction
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/transactions/{transactionId}:
    delete:
      description: Removes a transaction on customer account.
      operationId: removeTransaction
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: false
        in: path
        name: transactionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
      summary: Remove Transaction
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/recomputelifetimevalue:
    post:
      description: "Triggers event to recompute customer lifetime value.  The lifetime\
        \ value may not immediately be recalculated, but enters a queue."
      operationId: recomputeCustomerLifetimeValue
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Recompute Customer Lifetime Value
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/notes:
    get:
      description: Retrieves a list of notes added to a customer account according
        to any specified filter criteria and sort options.
      operationId: getAccountNotes
      parameters:
      - description: Unique identifier of the customer account whose notes you want
          to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNoteCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerNoteCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerNoteCollection'
          description: Success
      summary: Get Account Notes
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: Adds a new note to the specified customer account.
      operationId: addAccountNote
      parameters:
      - description: Unique identifier of the customer account for which to create
          the note.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNote'
        description: Contents of the new note.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerNote'
          description: Success
      summary: Add Account Note
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/notes/{noteId}:
    delete:
      description: Removes a note from the specified customer account.
      operationId: deleteAccountNote
      parameters:
      - description: Unique identifier of the customer account that contains the note
          you want to delete.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifier of the note to delete.
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete Account Note
      tags:
      - CustomerAccount
      x-accepts: application/json
    get:
      description: Retrieves the contents of a particular note attached to a specified
        customer account.
      operationId: getAccountNote
      parameters:
      - description: Unique identifier of the customer account that contains the note
          to retrieve.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifier of a particular note that you want to retrieve.
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerNote'
          description: Success
      summary: Get Account Note
      tags:
      - CustomerAccount
      x-accepts: application/json
    put:
      description: Modifies an existing note for a customer account.
      operationId: updateAccountNote
      parameters:
      - description: Unique identifier of the customer account whose note you want
          to modify.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifier of the note to update.
        explode: false
        in: path
        name: noteId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNote'
        description: The new content to replace the existing note.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerNote'
          description: Success
      summary: Update Account Note
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/segments:
    get:
      description: Retrieves a list of segments for the specified account according
        to any specified filter criteria and sort options.
      operationId: getAccountSegments
      parameters:
      - description: Unique identifier of the account for which you want the list
          of groups.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. For\
          \ example, with a PageSize of 25, to get the 51st through the 75th items,\
          \ startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: Used to page results from a query. Indicates the maximum number
          of entities to return from a query. The default value is 20 and the maximum
          value is 200. Optional.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: "The element to sort the results by and the order in which the\
          \ results appear. Either ascending (a-z) or descending (z-a) order. \r\n\
          \            Optional."
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerSegmentCollection'
          description: Success
      summary: Get Account Segments
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/AuditLog/Entries:
    get:
      description: Get Account Audit Log
      operationId: getAccountAuditLog
      parameters:
      - description: ""
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ""
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAuditEntryCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAuditEntryCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAuditEntryCollection'
          description: Success
      summary: Get Account Audit Log
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/purchaseOrderAccount:
    get:
      description: Gets a customer's purchase order account.
      operationId: getCustomerPurchaseOrderAccount
      parameters:
      - description: Unique identifier of the account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
          description: Success
      summary: Gets a customer's purchase order account.
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: Creates a customer's purchase order account.
      operationId: createCustomerPurchaseOrderAccount
      parameters:
      - description: Unique identifier of the account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
          description: Success
      summary: Create Customer Purchase Order Account
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
    put:
      description: Updates a customer's purchase order account.
      operationId: updateCustomerPurchaseOrderAccount
      parameters:
      - description: Unique identifier of the account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
          description: Success
      summary: Update Customer Purchase Order Account
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/PurchaseOrderTransaction:
    get:
      description: Gets a collection of Purchase order transaction logs associated
        with a customer account id.
      operationId: getCustomerPurchaseOrderTransactions
      parameters:
      - description: Customer Account Id for which transaction logs need to be retreived
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. \r\
          \n            For example, with a PageSize of 25, to get the 51st through\
          \ the 75th items, startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: "Used to page results from a query. \r\n            Indicates\
          \ the maximum number of entities to return from a query. The default value\
          \ is 20 and the maximum value is 200. Optional."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTransactionCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTransactionCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTransactionCollection'
          description: Success
      summary: Get Customer Purchase Order Transactions
      tags:
      - CustomerAccount
      x-accepts: application/json
    post:
      description: Creates a purchase order transaction log (for public api use).
      operationId: createPurchaseOrderTransaction
      parameters:
      - description: Unique identifier of the customer account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderTransaction'
        description: transaction log that needs to be created
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTransaction'
            text/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTransaction'
            text/plain:
              schema:
                $ref: '#/components/schemas/PurchaseOrderTransaction'
          description: Success
      summary: Create Purchase Order Transaction
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/purchaseOrderAccounts:
    post:
      description: Gets a collection of customer purchase order accounts.
      operationId: getCustomersPurchaseOrderAccounts
      parameters:
      - description: ""
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: accountType
        required: false
        schema:
          default: B2C
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccountCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccountCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerPurchaseOrderAccountCollection'
          description: Success
      summary: Get Customers Purchase Order Accounts
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/loginstatebyusername:
    post:
      description: Retrieves the log-in status details of a shopper specified by userName.
      operationId: getLoginStateByUserName
      parameters:
      - description: Unique userName of the customer whose details you want to view.
        explode: true
        in: query
        name: userName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: customerSetCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginState'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginState'
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginState'
          description: Success
      summary: Get Login State By UserName
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/loginstatebyemailaddress:
    post:
      description: Retrieves the log-in status details of a shopper specified by emailAdress.
      operationId: getLoginStateByEmailAddress
      parameters:
      - explode: true
        in: query
        name: emailAddress
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: customerSetCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginState'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginState'
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginState'
          description: Success
      summary: Get Login State By Email Address
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/loginstate:
    get:
      description: Retrieves the log-in status details of a shopper specified by account
        Id and user Id.
      operationId: getLoginState
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: EmailAddress of the customer whose details you want to view.
        explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginState'
            text/json:
              schema:
                $ref: '#/components/schemas/LoginState'
            text/plain:
              schema:
                $ref: '#/components/schemas/LoginState'
          description: Success
      summary: Get Login State
      tags:
      - CustomerAccount
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/Change-Password:
    post:
      description: Changes a shopper's password.
      operationId: changePassword
      parameters:
      - description: Unique identifier of the shopper for whom to change the password.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: inidicates that the account should be unlocked on a successful
          password change.
        explode: true
        in: query
        name: unlockAccount
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPasswordInfo'
        description: Old password and new password.
      responses:
        "200":
          description: Success
      summary: Change Password
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/Change-Passwords:
    post:
      description: Changes a collection of shopper passwords
      operationId: changePasswords
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountPasswordInfoCollection'
        description: The collection of AccountPasswordInfo which are to be processed
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResultCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/ChangePasswordResultCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/ChangePasswordResultCollection'
          description: Success
      summary: Change Passwords
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/Reset-Password:
    post:
      description: Resets the password for a shopper specified by username or emailAddress.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerResetPasswordInfo'
        description: Username or EmailAddress of the shopper who has requested a password
          reset.
      responses:
        "200":
          description: Success
      summary: Reset Password
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/Update-Forgotten-Password:
    post:
      description: Updates the password for a shopper who has requested a password
        change and provided the new password and confirmation code.
      operationId: updateForgottenPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationInfo'
        description: "Properties of the confirmation code. Required properties: UserName,\
          \ NewPassword, and ConfirmationCode."
      responses:
        "200":
          description: Success
      summary: Update Forgotten Password
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/Create-Login:
    post:
      description: Creates a login for an existing customer and logs them in automatically.
      operationId: addLoginToExistingCustomer
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerLoginInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
          description: Success
      summary: Add Login To Existing Customer
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/Add-Account-And-Login:
    post:
      description: Adds a customer to the account.
      operationId: addAccountAndLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountAndAuthInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAuthTicket'
          description: Success
      summary: Add Account And Login
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/Set-Login-Locked:
    post:
      description: Sets a flag indicating whether the customers login is locked or
        unlocked.
      operationId: setLoginLocked
      parameters:
      - description: The customer account id to operate on.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
        description: True for locking the login. False for unlocking the login (default).
      responses:
        "200":
          description: Success
      summary: Set Login Locked
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/{accountId}/Set-Password-Change-Required:
    post:
      description: Sets a flag indicating whether the customers must change their
        password before logging in again.
      operationId: setPasswordChangeRequired
      parameters:
      - description: The customer account id to operate on.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
      responses:
        "200":
          description: Success
      summary: Set Password Change Required
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/accounts/Bulk:
    post:
      description: Creates multiple new shopper accounts for a specified site. Allows
        you to create a number of new shopper accounts at one time.
      operationId: addAccounts
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CustomerAccountAndAuthInfo'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerAccountCollection'
          description: Success
      summary: Add Accounts
      tags:
      - CustomerAccount
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/attributedefinition/attributes:
    get:
      description: Get Attributes
      operationId: getAttributes
      parameters:
      - explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttributeCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttributeCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttributeCollection'
          description: Success
      summary: Get Attributes
      tags:
      - CustomerAttributeDefinition
      x-accepts: application/json
    post:
      description: Create Attribute
      operationId: createAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommerceRuntimeAttribute'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
          description: Success
      summary: Create Attribute
      tags:
      - CustomerAttributeDefinition
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/attributedefinition/attributes/{attributeFQN}/VocabularyValues:
    get:
      description: Get Attribute Vocabulary Values
      operationId: getAttributeVocabularyValues
      parameters:
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommerceRuntimeAttributeVocabularyValue'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/CommerceRuntimeAttributeVocabularyValue'
                type: array
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/CommerceRuntimeAttributeVocabularyValue'
                type: array
          description: Success
      summary: Get Attribute Vocabulary Values
      tags:
      - CustomerAttributeDefinition
      x-accepts: application/json
  /commerce/customer/attributedefinition/attributes/{attributeFQN}:
    get:
      description: Get Attribute
      operationId: getAttribute
      parameters:
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
          description: Success
      summary: Get Attribute
      tags:
      - CustomerAttributeDefinition
      x-accepts: application/json
    put:
      description: Update Attribute
      operationId: updateAttribute
      parameters:
      - explode: false
        in: path
        name: attributeFQN
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommerceRuntimeAttribute'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
            text/plain:
              schema:
                $ref: '#/components/schemas/CommerceRuntimeAttribute'
          description: Success
      summary: Update Attribute
      tags:
      - CustomerAttributeDefinition
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/segments:
    get:
      description: Retrieves a list of all segments defined for the site according
        to any specified filter criteria and sort options.
      operationId: getSegments
      parameters:
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. \r\
          \n            For example, with a PageSize of 25, to get the 51st through\
          \ the 75th items, startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: "Used to page results from a query. \r\n            Indicates\
          \ the maximum number of entities to return from a query. The default value\
          \ is 20 and the maximum value is 200. Optional."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - description: "A set of filter expressions representing the search parameters\
          \ for a query: eq=equals, ne=not equals, gt=greater than, lt = less than\
          \ or equals, gt = greater than or equals, lt = less than or equals, sw =\
          \ starts with, or cont = contains. Optional."
        explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerSegmentCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerSegmentCollection'
          description: Success
      summary: Get Segments
      tags:
      - CustomerSegment
      x-accepts: application/json
    post:
      description: "Creates a new segment. Merchants create segments of customers,\
        \ for example, \r\nto offer discounts to particular groups or assign VIP status\
        \ to a set of customers."
      operationId: addSegment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCustomerSegment'
        description: Name of the customer segment to create.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
          description: Success
      summary: Adds Segment
      tags:
      - CustomerSegment
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/segments/{id}:
    delete:
      description: Deletes a segement specified by its unique code. Note that the
        group is deleted in all accounts that contain this segment.
      operationId: deleteSegment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete Segment
      tags:
      - CustomerSegment
      x-accepts: application/json
    get:
      description: Retrieves a segment specified the segment Id.
      operationId: getSegment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
          description: Success
      summary: Get Segment
      tags:
      - CustomerSegment
      x-accepts: application/json
    put:
      description: "Update the code, name, or description of an existing segment."
      operationId: updateSegment
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCustomerSegment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerCustomerSegment'
          description: Success
      summary: Update Segment
      tags:
      - CustomerSegment
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/segments/{id}/accounts:
    post:
      description: Adds segments to an account.
      operationId: addSegmentAccounts
      parameters:
      - description: Unique identifer of the segment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
        description: Unique identifiers of the accounts.
      responses:
        "200":
          description: Success
      summary: Add Segments Accounts
      tags:
      - CustomerSegment
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/segments/{id}/accounts/{accountId}:
    delete:
      description: Removes single account from a segment.
      operationId: removeSegmentAccount
      parameters:
      - description: Unique identifer of the segment.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Unique identifiers of the account.
        explode: false
        in: path
        name: accountId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Remove Segment Account
      tags:
      - CustomerSegment
      x-accepts: application/json
  /commerce/customer/customerSets:
    get:
      description: Retrieves a list of all customerSets defined for the site according
        to any specified filter criteria and sort options.
      operationId: getCustomerSets
      parameters:
      - description: "Used to page results from a query. Indicates the zero-based\
          \ offset in the complete result set where the returned entities begin. \r\
          \n            For example, with a PageSize of 25, to get the 51st through\
          \ the 75th items, startIndex=3. The default value is 0. Optional."
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: "Used to page results from a query. \r\n            Indicates\
          \ the maximum number of entities to return from a query. The default value\
          \ is 20 and the maximum value is 200. Optional."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 20
          format: int32
          type: integer
        style: form
      - description: The element to sort the results by and the order in which the
          results appear. Either ascending (a-z) or descending (z-a) order. Optional.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          default: ""
          type: string
        style: form
      - explode: true
        in: query
        name: responseGroups
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSetCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerSetCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerSetCollection'
          description: Success
      summary: Get Customer Sets
      tags:
      - CustomerSet
      x-accepts: application/json
  /commerce/customer/customerSets/{code}:
    get:
      description: Retrieves the name of a customer group specified the customer group
        ID.
      operationId: getCustomerSet
      parameters:
      - description: Unique identifier of a customer group.
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSet'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerSet'
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerSet'
          description: Success
      summary: Get Customer Set
      tags:
      - CustomerSet
      x-accepts: application/json
  /commerce/customer/visits:
    get:
      description: Gets a collection of visit info specified by filter and sort order.
      operationId: getVisits
      parameters:
      - description: ""
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/VisitCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/VisitCollection'
          description: Success
      summary: Get Visits
      tags:
      - CustomerVisit
      x-accepts: application/json
    post:
      description: Adds visit info on the customer.
      operationId: addVisit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
            text/json:
              schema:
                $ref: '#/components/schemas/Visit'
            text/plain:
              schema:
                $ref: '#/components/schemas/Visit'
          description: Success
      summary: Add Visit
      tags:
      - CustomerVisit
      x-content-type: application/json
      x-accepts: application/json
  /commerce/customer/visits/{visitId}:
    get:
      description: Gets visit info specified by visit Id.
      operationId: getVisit
      parameters:
      - description: ""
        explode: false
        in: path
        name: visitId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
            text/json:
              schema:
                $ref: '#/components/schemas/Visit'
            text/plain:
              schema:
                $ref: '#/components/schemas/Visit'
          description: Success
      summary: Get Visit
      tags:
      - CustomerVisit
      x-accepts: application/json
    put:
      description: Updates an existing visit on the customer.
      operationId: updateVisit
      parameters:
      - description: ""
        explode: false
        in: path
        name: visitId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
            text/json:
              schema:
                $ref: '#/components/schemas/Visit'
            text/plain:
              schema:
                $ref: '#/components/schemas/Visit'
          description: Success
      summary: Updates Visit
      tags:
      - CustomerVisit
      x-content-type: application/json
      x-accepts: application/json
  /commerce/instocknotifications:
    get:
      description: Retrieves a list of inventory back in stock notification subscriptions
        according to any filter criteria and sort options.
      operationId: getInStockNotificationSubscriptions
      parameters:
      - description: ""
        explode: true
        in: query
        name: startIndex
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - description: ""
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscriptionCollection'
            text/json:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscriptionCollection'
            text/plain:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscriptionCollection'
          description: Success
      summary: Get In Stock Notification Subscriptions
      tags:
      - InStockNotificationSubscription
      x-accepts: application/json
    post:
      description: Creates a new notification subscription.
      operationId: addInStockNotificationSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InStockNotificationSubscription'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscription'
            text/plain:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscription'
          description: Success
      summary: Add In Stock Notification Subscription
      tags:
      - InStockNotificationSubscription
      x-content-type: application/json
      x-accepts: application/json
  /commerce/instocknotifications/{id}:
    delete:
      description: Deletes an in stock notification subscription.
      operationId: deleteInStockNotificationSubscription
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Success
      summary: Delete In Stock Notification Subscription
      tags:
      - InStockNotificationSubscription
      x-accepts: application/json
    get:
      description: Retrieves the details of an inventory back in stock notification.
      operationId: getInStockNotificationSubscription
      parameters:
      - description: ""
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscription'
            text/json:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscription'
            text/plain:
              schema:
                $ref: '#/components/schemas/InStockNotificationSubscription'
          description: Success
      summary: Get In Stock Notification Subscription
      tags:
      - InStockNotificationSubscription
      x-accepts: application/json
components:
  schemas:
    AttributeValueLocalizedContent:
      additionalProperties: false
      example:
        localeCode: localeCode
        value: value
      properties:
        localeCode:
          type: string
        value:
          type: string
      required:
      - localeCode
      - value
      type: object
    AddressValidationRequest:
      additionalProperties: false
      description: Address Validation Request
      example:
        address:
          postalOrZipCode: postalOrZipCode
          isValidated: true
          address3: address3
          stateOrProvince: stateOrProvince
          address2: address2
          address1: address1
          countryCode: countryCode
          addressType: addressType
          address4: address4
          cityOrTown: cityOrTown
      properties:
        address:
          $ref: '#/components/schemas/CommerceRuntimeAddress'
      type: object
    AddressValidationResponse:
      additionalProperties: false
      description: Address Validation Response
      example:
        addressCandidates:
        - postalOrZipCode: postalOrZipCode
          isValidated: true
          address3: address3
          stateOrProvince: stateOrProvince
          address2: address2
          address1: address1
          countryCode: countryCode
          addressType: addressType
          address4: address4
          cityOrTown: cityOrTown
        - postalOrZipCode: postalOrZipCode
          isValidated: true
          address3: address3
          stateOrProvince: stateOrProvince
          address2: address2
          address1: address1
          countryCode: countryCode
          addressType: addressType
          address4: address4
          cityOrTown: cityOrTown
      properties:
        addressCandidates:
          description: Address Candidates
          items:
            $ref: '#/components/schemas/CommerceRuntimeAddress'
          nullable: true
          type: array
      type: object
    CustomerUserAuthInfo:
      additionalProperties: false
      example:
        password: password
        username: username
      properties:
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
      type: object
    CurrencyAmount:
      additionalProperties: false
      description: "The currency code and amount of an order listed in the order history\
        \ of a customer account. Currently, only USD is supported."
      properties:
        currencyCode:
          description: "Currency code for the amount of the order. Currently, only\
            \ \"USD\" is supported."
          nullable: true
          type: string
        amount:
          description: "Total amount of the order. Currently, only US dollar amounts\
            \ are supported."
          format: double
          type: number
      type: object
    CommerceSummary:
      additionalProperties: false
      description: "Commerce (orders and wishlists) on a customer account which lists\
        \ all the orders the customer has made with the order date, order amount,\
        \ and status. Includes cancellations and returns.  Also includes wishlist\
        \ information."
      properties:
        totalOrderAmount:
          $ref: '#/components/schemas/CurrencyAmount'
        orderCount:
          description: Number of orders listed in the order history of a customer
            account.
          format: int32
          type: integer
        lastOrderDate:
          description: When the last order was placed.
          format: date-time
          nullable: true
          type: string
        wishlistCount:
          description: Number of wishlists listed in the wishlist count of a customer
            account
          format: int32
          type: integer
        visitsCount:
          description: Number of visits for this customer across the entire tenant.
          format: int32
          type: integer
      type: object
    ContactType:
      additionalProperties: false
      example:
        isPrimary: true
        name: name
      properties:
        name:
          nullable: true
          type: string
        isPrimary:
          type: boolean
      type: object
    CustomerContact:
      additionalProperties: false
      description: "CustomerContact information for a customer account including the\
        \ name, company, phone numbers, email addresses, and billing and shipping\
        \ addresses (if supplied)."
      example:
        types:
        - isPrimary: true
          name: name
        - isPrimary: true
          name: name
        address:
          postalOrZipCode: postalOrZipCode
          isValidated: true
          address3: address3
          stateOrProvince: stateOrProvince
          address2: address2
          address1: address1
          countryCode: countryCode
          addressType: addressType
          address4: address4
          cityOrTown: cityOrTown
        lastNameOrSurname: lastNameOrSurname
        label: label
        phoneNumbers:
          work: work
          mobile: mobile
          home: home
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        accountId: 5
        firstName: firstName
        companyOrOrganization: companyOrOrganization
        faxNumber: faxNumber
        middleNameOrInitial: middleNameOrInitial
        id: 2
        email: email
      properties:
        accountId:
          format: int32
          type: integer
        types:
          items:
            $ref: '#/components/schemas/ContactType'
          nullable: true
          type: array
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        faxNumber:
          nullable: true
          type: string
        label:
          nullable: true
          type: string
        id:
          format: int32
          nullable: true
          type: integer
        email:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        middleNameOrInitial:
          nullable: true
          type: string
        lastNameOrSurname:
          nullable: true
          type: string
        companyOrOrganization:
          nullable: true
          type: string
        phoneNumbers:
          $ref: '#/components/schemas/CommerceRuntimePhone'
        address:
          $ref: '#/components/schemas/CommerceRuntimeAddress'
      type: object
    CustomerNote:
      additionalProperties: false
      description: "Note added to the customer account. Merchants can add internal\
        \ notes, for example, to keep track of a customer's interests or complaints."
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        id: 5
        content: content
      properties:
        id:
          description: Unique identifier of the note.
          format: int32
          type: integer
        content:
          description: Content of the note that the merchant added.
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      type: object
    CustomerAttribute:
      additionalProperties: false
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        attributeDefinitionId: 5
        values:
        - ""
        - ""
        fullyQualifiedName: fullyQualifiedName
      properties:
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        fullyQualifiedName:
          nullable: true
          type: string
        attributeDefinitionId:
          format: int32
          nullable: true
          type: integer
        values:
          items: {}
          nullable: true
          type: array
      type: object
    AccountBase:
      additionalProperties: false
      description: "Customer account. Customers provide contact information, view\
        \ order history, and set email preferences on their account. \r\nMerchants\
        \ can edit accounts to add internal notes or assign them to segments."
      properties:
        id:
          description: "Unique identifier of the account, also known as a customer\
            \ number."
          format: int32
          type: integer
        customerSet:
          nullable: true
          type: string
        commerceSummary:
          $ref: '#/components/schemas/CommerceSummary'
        contacts:
          description: List of contacts for this account. A customer account can have
            multiple contacts for billing and shipping addresses.
          items:
            $ref: '#/components/schemas/CustomerContact'
          nullable: true
          type: array
        companyOrOrganization:
          description: The company or organization name for an account.
          nullable: true
          type: string
        notes:
          description: "List of notes for the account. Merchants use these internal\
            \ notes, for example, to make a note of a customer's interests or complaints.\
            \ \r\nNotes are available only from the merchant's view, customers cannot\
            \ view these notes."
          items:
            $ref: '#/components/schemas/CustomerNote'
          nullable: true
          type: array
        attributes:
          description: List of attributes for the account.
          items:
            $ref: '#/components/schemas/CustomerAttribute'
          nullable: true
          type: array
        segments:
          description: "List of segments assigned to account. Merchants create segments,\
            \ for example, to manage discounts or assign VIP status. \r\nThen they\
            \ assign the account to the segment. An account can belong to several\
            \ segments or none at all."
          items:
            $ref: '#/components/schemas/CustomerCustomerSegment'
          nullable: true
          type: array
        taxExempt:
          type: boolean
        taxId:
          nullable: true
          type: string
        externalId:
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        customerSinceDate:
          description: Date when the customer account is created.
          format: date-time
          nullable: true
          type: string
        accountType:
          description: Type of account.
          nullable: true
          type: string
        migrationRequired:
          description: Indicates Subscription migration is required or not.
          type: boolean
      type: object
    CustomerAccount:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      description: "Customer account. Customers provide contact information, view\
        \ order history, and set email preferences on their account. \r\nMerchants\
        \ can edit accounts to add internal notes or assign them to segments."
      example:
        firstName: firstName
        lastName: lastName
        emailAddress: emailAddress
        isAnonymous: true
        localeCode: localeCode
        isLocked: true
        userName: userName
        isActive: true
        userId: userId
        acceptsMarketing: true
        hasExternalPassword: true
      properties:
        emailAddress:
          description: '"Email addresss of the customer.'
          nullable: true
          type: string
        userName:
          description: User name for the customer account.
          nullable: true
          type: string
        firstName:
          description: First name of the customer.
          nullable: true
          type: string
        lastName:
          description: Last name of the customer.
          nullable: true
          type: string
        localeCode:
          description: Locale Code.
          nullable: true
          type: string
        userId:
          description: Unique identifier of the user who is currently logged in. This
            is null if the user is anonymous (not logged in).  Unicode data with a
            maximum length of 55 characters.
          nullable: true
          type: string
        isAnonymous:
          description: Is the account Anonymous?
          type: boolean
        isLocked:
          description: Is the account locked?
          type: boolean
        isActive:
          description: Is the account active?
          type: boolean
        acceptsMarketing:
          description: "If true, the customer prefers to receive marketing material\
            \ such as newsletters or email offers."
          type: boolean
        hasExternalPassword:
          description: Indicates if an external password is set on this account
          type: boolean
      type: object
    CustomerAuthTicket:
      additionalProperties: false
      example:
        jwtAccessToken: jwtAccessToken
        refreshTokenExpiration: 2000-01-23T04:56:07.000+00:00
        accessTokenExpiration: 2000-01-23T04:56:07.000+00:00
        accessToken: accessToken
        customerAccount:
          firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isAnonymous: true
          localeCode: localeCode
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
        userId: userId
        refreshToken: refreshToken
      properties:
        customerAccount:
          $ref: '#/components/schemas/CustomerAccount'
        accessToken:
          nullable: true
          type: string
        accessTokenExpiration:
          format: date-time
          type: string
        refreshToken:
          nullable: true
          type: string
        refreshTokenExpiration:
          format: date-time
          type: string
        userId:
          nullable: true
          type: string
        jwtAccessToken:
          nullable: true
          type: string
      type: object
    CustomerAttributeCollection:
      additionalProperties: false
      description: Collection of notes added to a customer account returned as a whole.
        A collection is not paged.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          attributeDefinitionId: 5
          values:
          - ""
          - ""
          fullyQualifiedName: fullyQualifiedName
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          attributeDefinitionId: 5
          values:
          - ""
          - ""
          fullyQualifiedName: fullyQualifiedName
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerAttribute'
          nullable: true
          type: array
      type: object
    UserScope:
      additionalProperties: false
      example:
        name: name
        id: 5
        type: type
      properties:
        type:
          nullable: true
          type: string
        id:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
      type: object
    Resource:
      additionalProperties: false
      example:
        id: id
        type: type
      properties:
        type:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
      type: object
    UserRole:
      additionalProperties: false
      example:
        assignedInScope:
          name: name
          id: 5
          type: type
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        roleTags:
        - roleTags
        - roleTags
        roleId: 2
        roleName: roleName
        roleResources:
        - id: id
          type: type
        - id: id
          type: type
        userId: userId
      properties:
        userId:
          nullable: true
          type: string
        assignedInScope:
          $ref: '#/components/schemas/UserScope'
        roleId:
          format: int32
          type: integer
        roleName:
          nullable: true
          type: string
        roleResources:
          items:
            $ref: '#/components/schemas/Resource'
          nullable: true
          type: array
        roleTags:
          items:
            type: string
          nullable: true
          type: array
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      type: object
    B2BUser:
      additionalProperties: false
      description: "Customer account. Customers provide contact information, view\
        \ order history, and set email preferences on their account. \r\nMerchants\
        \ can edit accounts to add internal notes or assign them to segments."
      example:
        firstName: firstName
        lastName: lastName
        emailAddress: emailAddress
        isRemoved: true
        localeCode: localeCode
        roles:
        - assignedInScope:
            name: name
            id: 5
            type: type
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          roleTags:
          - roleTags
          - roleTags
          roleId: 2
          roleName: roleName
          roleResources:
          - id: id
            type: type
          - id: id
            type: type
          userId: userId
        - assignedInScope:
            name: name
            id: 5
            type: type
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          roleTags:
          - roleTags
          - roleTags
          roleId: 2
          roleName: roleName
          roleResources:
          - id: id
            type: type
          - id: id
            type: type
          userId: userId
        isLocked: true
        userName: userName
        isActive: true
        userId: userId
        acceptsMarketing: true
        hasExternalPassword: true
      properties:
        emailAddress:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        localeCode:
          nullable: true
          type: string
        userId:
          description: Unique identifier of the user who is currently logged in. This
            is null if the user is anonymous (not logged in).  Unicode data with a
            maximum length of 55 characters.
          nullable: true
          type: string
        roles:
          items:
            $ref: '#/components/schemas/UserRole'
          nullable: true
          type: array
        isLocked:
          type: boolean
        isActive:
          type: boolean
        isRemoved:
          type: boolean
        acceptsMarketing:
          description: "If true, the customer prefers to receive marketing material\
            \ such as newsletters or email offers."
          type: boolean
        hasExternalPassword:
          description: Indicates if an external password is set on this account
          type: boolean
      type: object
    AccountSalesRep:
      additionalProperties: false
      example:
        accountId: 7
        adminUserId: adminUserId
      properties:
        accountId:
          format: int32
          type: integer
        adminUserId:
          nullable: true
          type: string
      type: object
    B2BAccount:
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/AccountBase'
      description: "Customer account. Customers provide contact information, view\
        \ order history, and set email preferences on their account. \r\nMerchants\
        \ can edit accounts to add internal notes or assign them to segments."
      example:
        parentAccountId: 3
        approvalStatus: approvalStatus
        salesReps:
        - accountId: 7
          adminUserId: adminUserId
        - accountId: 7
          adminUserId: adminUserId
        rootAccountId: 9
        isActive: true
        users:
        - firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isRemoved: true
          localeCode: localeCode
          roles:
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
        - firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isRemoved: true
          localeCode: localeCode
          roles:
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
        priceList: priceList
      properties:
        users:
          description: List of B2B users on the account.
          items:
            $ref: '#/components/schemas/B2BUser'
          nullable: true
          type: array
        isActive:
          description: Is the B2B account active?
          nullable: true
          type: boolean
        priceList:
          description: Price list on B2B account.
          nullable: true
          type: string
        salesReps:
          description: List of sales rep on B2B account.
          items:
            $ref: '#/components/schemas/AccountSalesRep'
          nullable: true
          type: array
        rootAccountId:
          description: Root account Id in B2B hierarchy
          format: int32
          nullable: true
          type: integer
        parentAccountId:
          description: Parent account Id in B2B hierarchy
          format: int32
          nullable: true
          type: integer
        approvalStatus:
          description: Status on B2B account.
          nullable: true
          type: string
      type: object
    B2BAccountCollection:
      additionalProperties: false
      description: Collection of all the B2B Accounts returned as a whole. A collection
        is not paged.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - parentAccountId: 3
          approvalStatus: approvalStatus
          salesReps:
          - accountId: 7
            adminUserId: adminUserId
          - accountId: 7
            adminUserId: adminUserId
          rootAccountId: 9
          isActive: true
          users:
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          priceList: priceList
        - parentAccountId: 3
          approvalStatus: approvalStatus
          salesReps:
          - accountId: 7
            adminUserId: adminUserId
          - accountId: 7
            adminUserId: adminUserId
          rootAccountId: 9
          isActive: true
          users:
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          priceList: priceList
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/B2BAccount'
          nullable: true
          type: array
      type: object
    AccountHierarchyNode:
      additionalProperties: false
      example:
        children:
        - null
        - null
        id: 0
      properties:
        id:
          format: int32
          type: integer
        children:
          items:
            $ref: '#/components/schemas/AccountHierarchyNode'
          nullable: true
          type: array
      type: object
    B2BAccountHierarchyResult:
      additionalProperties: false
      example:
        hierarchy:
          children:
          - null
          - null
          id: 0
        accounts:
        - parentAccountId: 3
          approvalStatus: approvalStatus
          salesReps:
          - accountId: 7
            adminUserId: adminUserId
          - accountId: 7
            adminUserId: adminUserId
          rootAccountId: 9
          isActive: true
          users:
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          priceList: priceList
        - parentAccountId: 3
          approvalStatus: approvalStatus
          salesReps:
          - accountId: 7
            adminUserId: adminUserId
          - accountId: 7
            adminUserId: adminUserId
          rootAccountId: 9
          isActive: true
          users:
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          - firstName: firstName
            lastName: lastName
            emailAddress: emailAddress
            isRemoved: true
            localeCode: localeCode
            roles:
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            - assignedInScope:
                name: name
                id: 5
                type: type
              auditInfo:
                updateDate: 2000-01-23T04:56:07.000+00:00
                createBy: createBy
                updateBy: updateBy
                createDate: 2000-01-23T04:56:07.000+00:00
              roleTags:
              - roleTags
              - roleTags
              roleId: 2
              roleName: roleName
              roleResources:
              - id: id
                type: type
              - id: id
                type: type
              userId: userId
            isLocked: true
            userName: userName
            isActive: true
            userId: userId
            acceptsMarketing: true
            hasExternalPassword: true
          priceList: priceList
      properties:
        accounts:
          description: All accounts belonging to this account hierarchy.
          items:
            $ref: '#/components/schemas/B2BAccount'
          nullable: true
          type: array
        hierarchy:
          $ref: '#/components/schemas/AccountHierarchyNode'
      type: object
    UpgradeToB2BAccountError:
      additionalProperties: false
      description: This class is used for reporting errors while upgrading the B2C
        account to B2B.
      example:
        accountID: 1
        errorMessage: errorMessage
      properties:
        accountID:
          format: int32
          type: integer
        errorMessage:
          nullable: true
          type: string
      type: object
    UpgradeToB2BAccountResponse:
      additionalProperties: false
      description: "This class is used for sending custom response while upgrading\
        \ the B2C accounts to B2B.\r\nThe custom response returns a list of success,\
        \ skipped and error accountIDs while upgrade."
      example:
        skippedAccountIds:
        - 6
        - 6
        errorAccountIds:
        - accountID: 1
          errorMessage: errorMessage
        - accountID: 1
          errorMessage: errorMessage
        successAccountIds:
        - 0
        - 0
      properties:
        successAccountIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        skippedAccountIds:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        errorAccountIds:
          items:
            $ref: '#/components/schemas/UpgradeToB2BAccountError'
          nullable: true
          type: array
      type: object
    B2BUserAndAuthInfo:
      additionalProperties: false
      example:
        isImport: true
        b2BUser:
          firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isRemoved: true
          localeCode: localeCode
          roles:
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
        externalPassword: externalPassword
      properties:
        b2BUser:
          $ref: '#/components/schemas/B2BUser'
        externalPassword:
          nullable: true
          type: string
        isImport:
          type: boolean
      type: object
    B2BUserCollection:
      additionalProperties: false
      description: Collection of users in a B2B account.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isRemoved: true
          localeCode: localeCode
          roles:
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
        - firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isRemoved: true
          localeCode: localeCode
          roles:
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          - assignedInScope:
              name: name
              id: 5
              type: type
            auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            roleTags:
            - roleTags
            - roleTags
            roleId: 2
            roleName: roleName
            roleResources:
            - id: id
              type: type
            - id: id
              type: type
            userId: userId
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/B2BUser'
          nullable: true
          type: array
      type: object
    ExtendedCustomerContact:
      additionalProperties: false
      example:
        types:
        - isPrimary: true
          name: name
        - isPrimary: true
          name: name
        address:
          postalOrZipCode: postalOrZipCode
          isValidated: true
          address3: address3
          stateOrProvince: stateOrProvince
          address2: address2
          address1: address1
          countryCode: countryCode
          addressType: addressType
          address4: address4
          cityOrTown: cityOrTown
        accountName: accountName
        lastNameOrSurname: lastNameOrSurname
        label: label
        phoneNumbers:
          work: work
          mobile: mobile
          home: home
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        accountId: 5
        firstName: firstName
        companyOrOrganization: companyOrOrganization
        faxNumber: faxNumber
        middleNameOrInitial: middleNameOrInitial
        id: 2
        email: email
      properties:
        accountName:
          nullable: true
          type: string
        accountId:
          format: int32
          type: integer
        types:
          items:
            $ref: '#/components/schemas/ContactType'
          nullable: true
          type: array
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        faxNumber:
          nullable: true
          type: string
        label:
          nullable: true
          type: string
        id:
          format: int32
          nullable: true
          type: integer
        email:
          nullable: true
          type: string
        firstName:
          nullable: true
          type: string
        middleNameOrInitial:
          nullable: true
          type: string
        lastNameOrSurname:
          nullable: true
          type: string
        companyOrOrganization:
          nullable: true
          type: string
        phoneNumbers:
          $ref: '#/components/schemas/CommerceRuntimePhone'
        address:
          $ref: '#/components/schemas/CommerceRuntimeAddress'
      type: object
    ExtendedCustomerContactCollection:
      additionalProperties: false
      description: Collection of contacts returned as a whole.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - types:
          - isPrimary: true
            name: name
          - isPrimary: true
            name: name
          address:
            postalOrZipCode: postalOrZipCode
            isValidated: true
            address3: address3
            stateOrProvince: stateOrProvince
            address2: address2
            address1: address1
            countryCode: countryCode
            addressType: addressType
            address4: address4
            cityOrTown: cityOrTown
          accountName: accountName
          lastNameOrSurname: lastNameOrSurname
          label: label
          phoneNumbers:
            work: work
            mobile: mobile
            home: home
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          accountId: 5
          firstName: firstName
          companyOrOrganization: companyOrOrganization
          faxNumber: faxNumber
          middleNameOrInitial: middleNameOrInitial
          id: 2
          email: email
        - types:
          - isPrimary: true
            name: name
          - isPrimary: true
            name: name
          address:
            postalOrZipCode: postalOrZipCode
            isValidated: true
            address3: address3
            stateOrProvince: stateOrProvince
            address2: address2
            address1: address1
            countryCode: countryCode
            addressType: addressType
            address4: address4
            cityOrTown: cityOrTown
          accountName: accountName
          lastNameOrSurname: lastNameOrSurname
          label: label
          phoneNumbers:
            work: work
            mobile: mobile
            home: home
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          accountId: 5
          firstName: firstName
          companyOrOrganization: companyOrOrganization
          faxNumber: faxNumber
          middleNameOrInitial: middleNameOrInitial
          id: 2
          email: email
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/ExtendedCustomerContact'
          nullable: true
          type: array
      type: object
    CreditAuditEntry:
      additionalProperties: false
      description: "Log entry for any change made to a Credit.\r\n\r\nThe system will\
        \ generate all entries.  Contract is for display only.\r\nAll values are ReadOnly."
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        details: details
        activityType: activityType
        activityTypeId: 5
      properties:
        activityType:
          description: Mozu.Customer.Contracts.Credit.CreditAuditEntry.CreditAuditActivityType
          nullable: true
          type: string
        details:
          description: Detials of what was done
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        activityTypeId:
          format: int32
          type: integer
      type: object
    CreditAuditEntryCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          details: details
          activityType: activityType
          activityTypeId: 5
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          details: details
          activityType: activityType
          activityTypeId: 5
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CreditAuditEntry'
          nullable: true
          type: array
      type: object
    CreditCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          code: code
          customCreditType: customCreditType
          initialBalance: 5.637376656633329
          currentBalance: 2.3021358869347655
          customerId: 7
          activationDate: 2000-01-23T04:56:07.000+00:00
          creditTypeId: 9
          currencyCode: currencyCode
          creditType: creditType
          expirationDate: 2000-01-23T04:56:07.000+00:00
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          code: code
          customCreditType: customCreditType
          initialBalance: 5.637376656633329
          currentBalance: 2.3021358869347655
          customerId: 7
          activationDate: 2000-01-23T04:56:07.000+00:00
          creditTypeId: 9
          currencyCode: currencyCode
          creditType: creditType
          expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerCredit'
          nullable: true
          type: array
      type: object
    CreditTransaction:
      additionalProperties: false
      description: Credit Transactions are used to make adjustments to a Credit Balance
      example:
        transactionType: transactionType
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        comments: comments
        data: ""
        orderId: orderId
        id: 5
        impactAmount: 2.3021358869347655
      properties:
        id:
          description: "Id unique within the tenant\r\nReadOnly"
          format: int32
          nullable: true
          type: integer
        transactionType:
          description: "Mozu.Customer.Contracts.Credit.CreditTransaction.CreditTransactionType\r\
            \n            Requried"
          nullable: true
          type: string
        comments:
          description: "Comments about the transaction.  Depending on the user interface,\
            \ these comments may be readable by authorized users or customers."
          nullable: true
          type: string
        impactAmount:
          description: "Amount to apply to Credit Balance\r\nRequired"
          format: double
          nullable: true
          type: number
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        orderId:
          nullable: true
          type: string
        data:
          description: Custom data for credit transactions
          nullable: true
      type: object
    CreditTransactionCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - transactionType: transactionType
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          comments: comments
          data: ""
          orderId: orderId
          id: 5
          impactAmount: 2.3021358869347655
        - transactionType: transactionType
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          comments: comments
          data: ""
          orderId: orderId
          id: 5
          impactAmount: 2.3021358869347655
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CreditTransaction'
          nullable: true
          type: array
      type: object
    Card:
      additionalProperties: false
      example:
        nameOnCard: nameOnCard
        expireMonth: 6
        contactId: 5
        cardNumberPart: cardNumberPart
        cardType: cardType
        id: id
        expireYear: 1
        isDefaultPayMethod: true
      properties:
        id:
          description: Card ID from Payment Service
          nullable: true
          type: string
        nameOnCard:
          nullable: true
          type: string
        cardType:
          nullable: true
          type: string
        expireMonth:
          format: int32
          nullable: true
          type: integer
        expireYear:
          format: int32
          nullable: true
          type: integer
        cardNumberPart:
          nullable: true
          type: string
        contactId:
          format: int32
          type: integer
        isDefaultPayMethod:
          type: boolean
      type: object
    CardCollection:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - nameOnCard: nameOnCard
          expireMonth: 6
          contactId: 5
          cardNumberPart: cardNumberPart
          cardType: cardType
          id: id
          expireYear: 1
          isDefaultPayMethod: true
        - nameOnCard: nameOnCard
          expireMonth: 6
          contactId: 5
          cardNumberPart: cardNumberPart
          cardType: cardType
          id: id
          expireYear: 1
          isDefaultPayMethod: true
      properties:
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Card'
          nullable: true
          type: array
      type: object
    CustomerContactCollection:
      additionalProperties: false
      description: Collection of contacts returned as a whole.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - types:
          - isPrimary: true
            name: name
          - isPrimary: true
            name: name
          address:
            postalOrZipCode: postalOrZipCode
            isValidated: true
            address3: address3
            stateOrProvince: stateOrProvince
            address2: address2
            address1: address1
            countryCode: countryCode
            addressType: addressType
            address4: address4
            cityOrTown: cityOrTown
          lastNameOrSurname: lastNameOrSurname
          label: label
          phoneNumbers:
            work: work
            mobile: mobile
            home: home
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          accountId: 5
          firstName: firstName
          companyOrOrganization: companyOrOrganization
          faxNumber: faxNumber
          middleNameOrInitial: middleNameOrInitial
          id: 2
          email: email
        - types:
          - isPrimary: true
            name: name
          - isPrimary: true
            name: name
          address:
            postalOrZipCode: postalOrZipCode
            isValidated: true
            address3: address3
            stateOrProvince: stateOrProvince
            address2: address2
            address1: address1
            countryCode: countryCode
            addressType: addressType
            address4: address4
            cityOrTown: cityOrTown
          lastNameOrSurname: lastNameOrSurname
          label: label
          phoneNumbers:
            work: work
            mobile: mobile
            home: home
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          accountId: 5
          firstName: firstName
          companyOrOrganization: companyOrOrganization
          faxNumber: faxNumber
          middleNameOrInitial: middleNameOrInitial
          id: 2
          email: email
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerContact'
          nullable: true
          type: array
      type: object
    CustomerAccountCollection:
      additionalProperties: false
      description: Collection of all the merchant's customers returned as a whole.
        A collection is not paged.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isAnonymous: true
          localeCode: localeCode
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
        - firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isAnonymous: true
          localeCode: localeCode
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerAccount'
          nullable: true
          type: array
      type: object
    Transaction:
      additionalProperties: false
      example:
        transactionType: transactionType
        date: 2000-01-23T04:56:07.000+00:00
        amount: 0.8008281904610115
        visitId: visitId
        interactionType: interactionType
        currencyCode: currencyCode
        transactionId: transactionId
      properties:
        transactionId:
          nullable: true
          type: string
        visitId:
          nullable: true
          type: string
        transactionType:
          nullable: true
          type: string
        interactionType:
          nullable: true
          type: string
        amount:
          format: double
          type: number
        date:
          format: date-time
          type: string
        currencyCode:
          nullable: true
          type: string
      type: object
    CustomerNoteCollection:
      additionalProperties: false
      description: Collection of notes added to a customer account returned as a whole.
        A collection is not paged.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          id: 5
          content: content
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          id: 5
          content: content
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerNote'
          nullable: true
          type: array
      type: object
    CustomerSegmentCollection:
      additionalProperties: false
      description: Collection of customer segements returned as a whole. A collection
        is not paged.
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          code: code
          name: name
          description: description
          id: 5
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          code: code
          name: name
          description: description
          id: 5
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerCustomerSegment'
          nullable: true
          type: array
      type: object
    CustomerAuditEntry:
      additionalProperties: false
      example:
        customerAuditEntryId: 2
        entryUser: entryUser
        newValue: newValue
        site: site
        customerAccountId: 5
        application: application
        entryDate: 2000-01-23T04:56:07.000+00:00
        fieldPath: fieldPath
        description: description
        oldValue: oldValue
      properties:
        customerAccountId:
          description: Customer associated with this entry
          format: int32
          type: integer
        customerAuditEntryId:
          description: Id of this entry
          format: int32
          type: integer
        entryDate:
          description: Date of the Entry
          format: date-time
          type: string
        entryUser:
          description: User ID associated with this Entry
          nullable: true
          type: string
        application:
          description: Applicattion associated with this entry
          nullable: true
          type: string
        site:
          description: Site associated wit this entry
          nullable: true
          type: string
        description:
          description: Description of the change (UI Displayable)
          nullable: true
          type: string
        fieldPath:
          description: Path of the field value being changed (e.g. /Customer/Contacts/1/FirstName)
          nullable: true
          type: string
        oldValue:
          description: Original value before this event
          nullable: true
          type: string
        newValue:
          description: New Value after this event
          nullable: true
          type: string
      type: object
    CustomerAuditEntryCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - customerAuditEntryId: 2
          entryUser: entryUser
          newValue: newValue
          site: site
          customerAccountId: 5
          application: application
          entryDate: 2000-01-23T04:56:07.000+00:00
          fieldPath: fieldPath
          description: description
          oldValue: oldValue
        - customerAuditEntryId: 2
          entryUser: entryUser
          newValue: newValue
          site: site
          customerAccountId: 5
          application: application
          entryDate: 2000-01-23T04:56:07.000+00:00
          fieldPath: fieldPath
          description: description
          oldValue: oldValue
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerAuditEntry'
          nullable: true
          type: array
      type: object
    CustomerPurchaseOrderPaymentTerm:
      additionalProperties: false
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        code: code
        siteId: 7
        description: description
      properties:
        siteId:
          format: int32
          type: integer
        code:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      type: object
    CustomerPurchaseOrderAccount:
      additionalProperties: false
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        accountId: 6
        customerPurchaseOrderPaymentTerms:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          code: code
          siteId: 7
          description: description
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          code: code
          siteId: 7
          description: description
        isEnabled: true
        totalAvailableBalance: 5.637376656633329
        creditLimit: 1.4658129805029452
        id: 0
        overdraftAllowanceType: overdraftAllowanceType
        overdraftAllowance: 2.3021358869347655
        availableBalance: 5.962133916683182
      properties:
        id:
          format: int32
          type: integer
        accountId:
          format: int32
          type: integer
        isEnabled:
          type: boolean
        creditLimit:
          format: double
          type: number
        availableBalance:
          format: double
          type: number
        totalAvailableBalance:
          format: double
          type: number
        overdraftAllowance:
          format: double
          nullable: true
          type: number
        overdraftAllowanceType:
          description: Indicates type of overdraft. Possible values are "Percent"
            and "Amount"
          nullable: true
          type: string
        customerPurchaseOrderPaymentTerms:
          items:
            $ref: '#/components/schemas/CustomerPurchaseOrderPaymentTerm'
          nullable: true
          type: array
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      type: object
    PurchaseOrderTransaction:
      additionalProperties: false
      description: Customer purchase order transaction log
      example:
        transactionTypeId: 4
        orderId: orderId
        author: author
        externalId: externalId
        transactionDescription: transactionDescription
        transactionDate: 2000-01-23T04:56:07.000+00:00
        customerPurchaseOrderAccountId: 5
        availableBalance: 2.027123023002322
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        additionalTransactionDetail: additionalTransactionDetail
        purchaseOrderNumber: purchaseOrderNumber
        transactionAmount: 9.301444243932576
        tenantId: 7
        siteId: 2
        creditLimit: 3.616076749251911
      properties:
        customerPurchaseOrderAccountId:
          description: Unique identifier for Customer purchase order account
          format: int32
          type: integer
        externalId:
          nullable: true
          type: string
        siteId:
          description: Site Id associated with transaction log
          format: int32
          type: integer
        tenantId:
          description: Tenant Id associated with transaction log
          format: int32
          type: integer
        transactionDate:
          description: Date when the transaction was made on a purchase order account
          format: date-time
          type: string
        orderId:
          description: Unique identifier for an order
          nullable: true
          type: string
        purchaseOrderNumber:
          description: Purchase order number
          nullable: true
          type: string
        transactionAmount:
          description: Transaction amount in transaction log for a purchase order
            account
          format: double
          type: number
        creditLimit:
          description: Maximum credit available on a purchase order account
          format: double
          type: number
        additionalTransactionDetail:
          description: Any additional transaction detail other than transaction description
          nullable: true
          type: string
        availableBalance:
          description: Current available balance on Purchase Order account
          format: double
          type: number
        transactionTypeId:
          description: " Purchase Order transaction type\r\n1 - Line of Credit Change\r\
            \n2 - Order Submitted\r\n3 - Payment Collected\r\n4 - Payment Voided\r\
            \n5 - Payment Refund\r\n6 - Manual Adjustment"
          format: int32
          type: integer
        transactionDescription:
          description: "Purchase Order transaction description\r\nLine of Credit Change\r\
            \nOrder Submitted\r\nPayment Collected\r\nPayment Voided\r\nPayment Refund\r\
            \nManual Adjustment"
          nullable: true
          type: string
        author:
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      type: object
    PurchaseOrderTransactionCollection:
      additionalProperties: false
      description: "Collection of purchase order transactions returned as a whole.\
        \ \r\nA collection is not paged."
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - transactionTypeId: 4
          orderId: orderId
          author: author
          externalId: externalId
          transactionDescription: transactionDescription
          transactionDate: 2000-01-23T04:56:07.000+00:00
          customerPurchaseOrderAccountId: 5
          availableBalance: 2.027123023002322
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          additionalTransactionDetail: additionalTransactionDetail
          purchaseOrderNumber: purchaseOrderNumber
          transactionAmount: 9.301444243932576
          tenantId: 7
          siteId: 2
          creditLimit: 3.616076749251911
        - transactionTypeId: 4
          orderId: orderId
          author: author
          externalId: externalId
          transactionDescription: transactionDescription
          transactionDate: 2000-01-23T04:56:07.000+00:00
          customerPurchaseOrderAccountId: 5
          availableBalance: 2.027123023002322
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          additionalTransactionDetail: additionalTransactionDetail
          purchaseOrderNumber: purchaseOrderNumber
          transactionAmount: 9.301444243932576
          tenantId: 7
          siteId: 2
          creditLimit: 3.616076749251911
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/PurchaseOrderTransaction'
          nullable: true
          type: array
      type: object
    CustomerPurchaseOrderAccountCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          accountId: 6
          customerPurchaseOrderPaymentTerms:
          - auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            code: code
            siteId: 7
            description: description
          - auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            code: code
            siteId: 7
            description: description
          isEnabled: true
          totalAvailableBalance: 5.637376656633329
          creditLimit: 1.4658129805029452
          id: 0
          overdraftAllowanceType: overdraftAllowanceType
          overdraftAllowance: 2.3021358869347655
          availableBalance: 5.962133916683182
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          accountId: 6
          customerPurchaseOrderPaymentTerms:
          - auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            code: code
            siteId: 7
            description: description
          - auditInfo:
              updateDate: 2000-01-23T04:56:07.000+00:00
              createBy: createBy
              updateBy: updateBy
              createDate: 2000-01-23T04:56:07.000+00:00
            code: code
            siteId: 7
            description: description
          isEnabled: true
          totalAvailableBalance: 5.637376656633329
          creditLimit: 1.4658129805029452
          id: 0
          overdraftAllowanceType: overdraftAllowanceType
          overdraftAllowance: 2.3021358869347655
          availableBalance: 5.962133916683182
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerPurchaseOrderAccount'
          nullable: true
          type: array
      type: object
    LoginState:
      additionalProperties: false
      example:
        firstFailedLoginAttemptOn: 2000-01-23T04:56:07.000+00:00
        lastPasswordChangeOn: 2000-01-23T04:56:07.000+00:00
        lastLockedOn: 2000-01-23T04:56:07.000+00:00
        isLocked: true
        lastLoginOn: 2000-01-23T04:56:07.000+00:00
        isPasswordChangeRequired: true
        remainingLoginAttempts: 6
        updatedOn: 2000-01-23T04:56:07.000+00:00
        failedLoginAttemptCount: 0
        createdOn: 2000-01-23T04:56:07.000+00:00
      properties:
        isPasswordChangeRequired:
          type: boolean
        lastPasswordChangeOn:
          format: date-time
          nullable: true
          type: string
        isLocked:
          type: boolean
        lastLockedOn:
          format: date-time
          nullable: true
          type: string
        failedLoginAttemptCount:
          format: int32
          type: integer
        remainingLoginAttempts:
          format: int32
          type: integer
        firstFailedLoginAttemptOn:
          format: date-time
          nullable: true
          type: string
        lastLoginOn:
          format: date-time
          nullable: true
          type: string
        createdOn:
          format: date-time
          nullable: true
          type: string
        updatedOn:
          format: date-time
          nullable: true
          type: string
      type: object
    AccountPasswordInfo:
      additionalProperties: false
      description: Password information for an Account
      example:
        accountId: 6
        unlockAccount: true
        userId: userId
        passwordInfo:
          oldPassword: oldPassword
          externalPassword: externalPassword
          newPassword: newPassword
      properties:
        accountId:
          description: The Id of the Account which this password info applies
          format: int32
          type: integer
        userId:
          description: "If the account has multiple users, provide the Id of a specific\
            \ user"
          nullable: true
          type: string
        unlockAccount:
          description: Indicates to unlock the Account
          nullable: true
          type: boolean
        passwordInfo:
          $ref: '#/components/schemas/CustomerPasswordInfo'
      type: object
    AccountPasswordInfoCollection:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - accountId: 6
          unlockAccount: true
          userId: userId
          passwordInfo:
            oldPassword: oldPassword
            externalPassword: externalPassword
            newPassword: newPassword
        - accountId: 6
          unlockAccount: true
          userId: userId
          passwordInfo:
            oldPassword: oldPassword
            externalPassword: externalPassword
            newPassword: newPassword
      properties:
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/AccountPasswordInfo'
          nullable: true
          type: array
      type: object
    ChangePasswordResult:
      additionalProperties: false
      example:
        accountId: 6
        errorMessage: errorMessage
        succeeded: true
      properties:
        accountId:
          format: int32
          type: integer
        succeeded:
          type: boolean
        errorMessage:
          nullable: true
          type: string
      type: object
    ChangePasswordResultCollection:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - accountId: 6
          errorMessage: errorMessage
          succeeded: true
        - accountId: 6
          errorMessage: errorMessage
          succeeded: true
      properties:
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/ChangePasswordResult'
          nullable: true
          type: array
      type: object
    ConfirmationInfo:
      additionalProperties: false
      description: "Used to update a user's forgotten password. Contains the user's\
        \ email address, new password, and the confirmation code \r\nthat is required\
        \ to update the password."
      example:
        confirmationCode: confirmationCode
        newPassword: newPassword
        userName: userName
      properties:
        userName:
          description: UserName of the user who has requested a new password.
          nullable: true
          type: string
        confirmationCode:
          description: Confirmation code that a user supplies when requesting a new
            password.
          nullable: true
          type: string
        newPassword:
          description: The user's new password.
          nullable: true
          type: string
      type: object
    CustomerLoginInfo:
      additionalProperties: false
      example:
        isImport: true
        emailAddress: emailAddress
        password: password
        externalPassword: externalPassword
        username: username
      properties:
        emailAddress:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        externalPassword:
          nullable: true
          type: string
        isImport:
          nullable: true
          type: boolean
      type: object
    CustomerAccountAndAuthInfo:
      additionalProperties: false
      example:
        isImport: true
        password: password
        externalPassword: externalPassword
        account:
          firstName: firstName
          lastName: lastName
          emailAddress: emailAddress
          isAnonymous: true
          localeCode: localeCode
          isLocked: true
          userName: userName
          isActive: true
          userId: userId
          acceptsMarketing: true
          hasExternalPassword: true
      properties:
        account:
          $ref: '#/components/schemas/CustomerAccount'
        password:
          nullable: true
          type: string
        externalPassword:
          nullable: true
          type: string
        isImport:
          type: boolean
      type: object
    CustomerSetSite:
      additionalProperties: false
      example:
        customerSetCode: customerSetCode
        name: name
        siteId: 5
      properties:
        siteId:
          format: int32
          type: integer
        customerSetCode:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    CustomerSetAggregateInfo:
      additionalProperties: false
      example:
        customerCount: 2
      properties:
        customerCount:
          format: int32
          type: integer
      type: object
    CustomerSet:
      additionalProperties: false
      description: A customer segment.
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        isDefault: true
        code: code
        name: name
        description: description
        sites:
        - customerSetCode: customerSetCode
          name: name
          siteId: 5
        - customerSetCode: customerSetCode
          name: name
          siteId: 5
        aggregateInfo:
          customerCount: 2
      properties:
        code:
          description: Unique identifier of the customer segment.
          nullable: true
          type: string
        name:
          description: Name of the customer segment.
          nullable: true
          type: string
        description:
          description: Description of the customer segment.
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        sites:
          items:
            $ref: '#/components/schemas/CustomerSetSite'
          nullable: true
          type: array
        isDefault:
          type: boolean
        aggregateInfo:
          $ref: '#/components/schemas/CustomerSetAggregateInfo'
      type: object
    CustomerSetCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          isDefault: true
          code: code
          name: name
          description: description
          sites:
          - customerSetCode: customerSetCode
            name: name
            siteId: 5
          - customerSetCode: customerSetCode
            name: name
            siteId: 5
          aggregateInfo:
            customerCount: 2
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          isDefault: true
          code: code
          name: name
          description: description
          sites:
          - customerSetCode: customerSetCode
            name: name
            siteId: 5
          - customerSetCode: customerSetCode
            name: name
            siteId: 5
          aggregateInfo:
            customerCount: 2
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CustomerSet'
          nullable: true
          type: array
      type: object
    Visit:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        accountId: 5
        browserLocationCode: browserLocationCode
        webSessionId: webSessionId
        webReferrer: webReferrer
        id: id
        webUserAgent: webUserAgent
        type: type
        transactions:
        - transactionType: transactionType
          date: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          visitId: visitId
          interactionType: interactionType
          currencyCode: currencyCode
          transactionId: transactionId
        - transactionType: transactionType
          date: 2000-01-23T04:56:07.000+00:00
          amount: 0.8008281904610115
          visitId: visitId
          interactionType: interactionType
          currencyCode: currencyCode
          transactionId: transactionId
        locationCode: locationCode
        userId: userId
        webSiteId: 2
      properties:
        id:
          nullable: true
          type: string
        accountId:
          format: int32
          nullable: true
          type: integer
        type:
          nullable: true
          type: string
        date:
          format: date-time
          type: string
        transactions:
          items:
            $ref: '#/components/schemas/Transaction'
          nullable: true
          type: array
        userId:
          nullable: true
          type: string
        webSiteId:
          format: int32
          nullable: true
          type: integer
        webReferrer:
          nullable: true
          type: string
        webSessionId:
          nullable: true
          type: string
        webUserAgent:
          nullable: true
          type: string
        browserLocationCode:
          nullable: true
          type: string
        locationCode:
          nullable: true
          type: string
      type: object
    VisitCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - date: 2000-01-23T04:56:07.000+00:00
          accountId: 5
          browserLocationCode: browserLocationCode
          webSessionId: webSessionId
          webReferrer: webReferrer
          id: id
          webUserAgent: webUserAgent
          type: type
          transactions:
          - transactionType: transactionType
            date: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            visitId: visitId
            interactionType: interactionType
            currencyCode: currencyCode
            transactionId: transactionId
          - transactionType: transactionType
            date: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            visitId: visitId
            interactionType: interactionType
            currencyCode: currencyCode
            transactionId: transactionId
          locationCode: locationCode
          userId: userId
          webSiteId: 2
        - date: 2000-01-23T04:56:07.000+00:00
          accountId: 5
          browserLocationCode: browserLocationCode
          webSessionId: webSessionId
          webReferrer: webReferrer
          id: id
          webUserAgent: webUserAgent
          type: type
          transactions:
          - transactionType: transactionType
            date: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            visitId: visitId
            interactionType: interactionType
            currencyCode: currencyCode
            transactionId: transactionId
          - transactionType: transactionType
            date: 2000-01-23T04:56:07.000+00:00
            amount: 0.8008281904610115
            visitId: visitId
            interactionType: interactionType
            currencyCode: currencyCode
            transactionId: transactionId
          locationCode: locationCode
          userId: userId
          webSiteId: 2
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Visit'
          nullable: true
          type: array
      type: object
    InStockNotificationSubscription:
      additionalProperties: false
      description: Inventory in-stock notification subscription.  Notification sender/processor
        view.  Generally for internal consumption only.
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        productCode: productCode
        customerId: 2
        id: 5
        locationCode: locationCode
        userId: userId
        email: email
      properties:
        id:
          description: Unique identifier
          format: int32
          nullable: true
          type: integer
        email:
          description: Email.  E-mail or CustomerId are required.
          nullable: true
          type: string
        customerId:
          description: "Id of the N:Mozu.Customer\r\nthat this subscription is assigned\
            \ to.\r\nOptional.  E-mail or CustomerId are required."
          format: int32
          nullable: true
          type: integer
        productCode:
          description: Product Code
          nullable: true
          type: string
        locationCode:
          description: Location Code
          nullable: true
          type: string
        userId:
          description: User Id for multi-user b2b accounts
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      type: object
    InStockNotificationSubscriptionCollection:
      additionalProperties: false
      description: Collection of InStockNotificationSubscriptions
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          productCode: productCode
          customerId: 2
          id: 5
          locationCode: locationCode
          userId: userId
          email: email
        - auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          productCode: productCode
          customerId: 2
          id: 5
          locationCode: locationCode
          userId: userId
          email: email
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/InStockNotificationSubscription'
          nullable: true
          type: array
      type: object
    AdminUserAuditInfo:
      additionalProperties: false
      example:
        updateDate: 2000-01-23T04:56:07.000+00:00
        createBy: createBy
        updateBy: updateBy
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        updateDate:
          format: date-time
          nullable: true
          type: string
        createDate:
          format: date-time
          nullable: true
          type: string
        updateBy:
          nullable: true
          type: string
        createBy:
          nullable: true
          type: string
      type: object
    CustomerUserRoleCollection:
      additionalProperties: false
      example:
        totalCount: 0
        items:
        - assignedInScope:
            name: name
            id: 5
            type: type
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          roleTags:
          - roleTags
          - roleTags
          roleId: 2
          roleName: roleName
          roleResources:
          - id: id
            type: type
          - id: id
            type: type
          userId: userId
        - assignedInScope:
            name: name
            id: 5
            type: type
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          roleTags:
          - roleTags
          - roleTags
          roleId: 2
          roleName: roleName
          roleResources:
          - id: id
            type: type
          - id: id
            type: type
          userId: userId
      properties:
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/UserRole'
          nullable: true
          type: array
      type: object
    CustomerPasswordInfo:
      additionalProperties: false
      description: Old password and new password.
      example:
        oldPassword: oldPassword
        externalPassword: externalPassword
        newPassword: newPassword
      properties:
        oldPassword:
          description: Old password.
          nullable: true
          type: string
        newPassword:
          description: New password.
          nullable: true
          type: string
        externalPassword:
          description: "The External Password, typically used for imports in conjunction\
            \ with a custom action"
          nullable: true
          type: string
      type: object
    CustomerResetPasswordInfo:
      additionalProperties: false
      example:
        emailAddress: emailAddress
        customerSetCode: customerSetCode
        userName: userName
      properties:
        emailAddress:
          nullable: true
          type: string
        userName:
          nullable: true
          type: string
        customerSetCode:
          nullable: true
          type: string
      type: object
    CommerceRuntimeAttribute:
      additionalProperties: false
      example:
        isRequired: true
        dataType: dataType
        isMultiValued: true
        displayGroup: displayGroup
        availableForOrderRouting: true
        isVisible: true
        isActive: true
        content:
          localeCode: localeCode
          value: value
        attributeFQN: attributeFQN
        adminName: adminName
        attributeCode: attributeCode
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        attributeMetadata:
        - value: value
          key: key
        - value: value
          key: key
        isReadOnly: true
        vocabularyValues:
        - sequence: 2
          value: value
          content:
            localeCode: localeCode
            value: value
          isHidden: true
        - sequence: 2
          value: value
          content:
            localeCode: localeCode
            value: value
          isHidden: true
        valueType: valueType
        namespace: namespace
        inputType: inputType
        id: 5
        validation:
          maxNumericValue: 3.616076749251911
          minDateTime: 2000-01-23T04:56:07.000+00:00
          maxDateTime: 2000-01-23T04:56:07.000+00:00
          regularExpression: regularExpression
          maxStringLength: 7
          minStringLength: 2
          minNumericValue: 9.301444243932576
        order: 4
      properties:
        id:
          format: int32
          nullable: true
          type: integer
        adminName:
          maxLength: 50
          nullable: true
          type: string
        namespace:
          maxLength: 200
          nullable: true
          type: string
        attributeCode:
          maxLength: 50
          type: string
        inputType:
          nullable: true
          type: string
        valueType:
          type: string
        dataType:
          nullable: true
          type: string
        attributeMetadata:
          items:
            $ref: '#/components/schemas/CommerceRuntimeAttributeMetadataItem'
          nullable: true
          type: array
        attributeFQN:
          nullable: true
          type: string
        content:
          $ref: '#/components/schemas/CommerceRuntimeAttributeLocalizedContent'
        validation:
          $ref: '#/components/schemas/CommerceRuntimeAttributeValidation'
        vocabularyValues:
          items:
            $ref: '#/components/schemas/CommerceRuntimeAttributeVocabularyValue'
          nullable: true
          type: array
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        isActive:
          nullable: true
          type: boolean
        isRequired:
          nullable: true
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          nullable: true
          type: boolean
        isVisible:
          nullable: true
          type: boolean
        order:
          format: int32
          nullable: true
          type: integer
        displayGroup:
          type: string
        availableForOrderRouting:
          type: boolean
      required:
      - attributeCode
      - displayGroup
      - valueType
      type: object
    CommerceRuntimePhone:
      additionalProperties: false
      example:
        work: work
        mobile: mobile
        home: home
      properties:
        home:
          nullable: true
          type: string
        mobile:
          nullable: true
          type: string
        work:
          nullable: true
          type: string
      type: object
    CommerceRuntimeAddress:
      additionalProperties: false
      example:
        postalOrZipCode: postalOrZipCode
        isValidated: true
        address3: address3
        stateOrProvince: stateOrProvince
        address2: address2
        address1: address1
        countryCode: countryCode
        addressType: addressType
        address4: address4
        cityOrTown: cityOrTown
      properties:
        address1:
          nullable: true
          type: string
        address2:
          nullable: true
          type: string
        address3:
          nullable: true
          type: string
        address4:
          nullable: true
          type: string
        cityOrTown:
          nullable: true
          type: string
        stateOrProvince:
          nullable: true
          type: string
        postalOrZipCode:
          nullable: true
          type: string
        countryCode:
          nullable: true
          type: string
        addressType:
          nullable: true
          type: string
        isValidated:
          nullable: true
          type: boolean
      type: object
    CustomerCredit:
      additionalProperties: false
      description: Represetation of a store credit or gift card.
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        code: code
        customCreditType: customCreditType
        initialBalance: 5.637376656633329
        currentBalance: 2.3021358869347655
        customerId: 7
        activationDate: 2000-01-23T04:56:07.000+00:00
        creditTypeId: 9
        currencyCode: currencyCode
        creditType: creditType
        expirationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        code:
          description: "Unique number identifier representing this credit.\r\nNumber\
            \ may be generated or set by the Tenant\r\nNumber is unique within the\
            \ Tenant context.\r\nReadOnly after credit creation"
          nullable: true
          type: string
        activationDate:
          description: "Date the credit was activated.  Null if card is not active.\r\
            \nCredits must be activated before they can be used.\r\nReadOnly after\
            \ activation"
          format: date-time
          nullable: true
          type: string
        creditType:
          description: "Type of Credit.\r\nMozu.Customer.Contracts.Credit.Credit.CreditTypeConst\r\
            \nRequired.\r\nReadOnly after credit creation"
          nullable: true
          type: string
        customCreditType:
          description: "Name of custom credit type\r\nOptional."
          nullable: true
          type: string
        currencyCode:
          description: Currency Code
          nullable: true
          type: string
        initialBalance:
          description: "Balance assigned when credit was initially created.\r\nMay\
            \ be zero and updated later.\r\nReadOnly after intial credit creation"
          format: double
          nullable: true
          type: number
        currentBalance:
          description: "Do we want to track this here?\r\nCurrent Balance\r\nReadOnly"
          format: double
          nullable: true
          type: number
        expirationDate:
          description: "Date after which this credit is no longer valid\r\nOptional\r\
            \nDefaults to 365 days"
          format: date-time
          nullable: true
          type: string
        customerId:
          description: "Id of the N:Mozu.Customer\r\nthat this credit is assigned\
            \ to.\r\nOptional."
          format: int32
          nullable: true
          type: integer
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
        creditTypeId:
          format: int32
          type: integer
      type: object
    CommerceRuntimeAttributeMetadataItem:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          maxLength: 50
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    CommerceRuntimeAttributeLocalizedContent:
      additionalProperties: false
      example:
        localeCode: localeCode
        value: value
      properties:
        localeCode:
          maxLength: 8
          nullable: true
          type: string
        value:
          maxLength: 100
          nullable: true
          type: string
      type: object
    CommerceRuntimeAttributeValidation:
      additionalProperties: false
      example:
        maxNumericValue: 3.616076749251911
        minDateTime: 2000-01-23T04:56:07.000+00:00
        maxDateTime: 2000-01-23T04:56:07.000+00:00
        regularExpression: regularExpression
        maxStringLength: 7
        minStringLength: 2
        minNumericValue: 9.301444243932576
      properties:
        regularExpression:
          maxLength: 200
          nullable: true
          type: string
        minStringLength:
          format: int32
          nullable: true
          type: integer
        maxStringLength:
          format: int32
          nullable: true
          type: integer
        minNumericValue:
          format: double
          nullable: true
          type: number
        maxNumericValue:
          format: double
          nullable: true
          type: number
        minDateTime:
          format: date-time
          nullable: true
          type: string
        maxDateTime:
          format: date-time
          nullable: true
          type: string
      type: object
    CommerceRuntimeAttributeVocabularyValue:
      additionalProperties: false
      example:
        sequence: 2
        value: value
        content:
          localeCode: localeCode
          value: value
        isHidden: true
      properties:
        value:
          maxLength: 50
          type: string
        sequence:
          format: int32
          nullable: true
          type: integer
        isHidden:
          nullable: true
          type: boolean
        content:
          $ref: '#/components/schemas/AttributeValueLocalizedContent'
      required:
      - value
      type: object
    CommerceRuntimeAttributeCollection:
      additionalProperties: false
      example:
        startIndex: 0
        pageCount: 1
        pageSize: 6
        totalCount: 5
        items:
        - isRequired: true
          dataType: dataType
          isMultiValued: true
          displayGroup: displayGroup
          availableForOrderRouting: true
          isVisible: true
          isActive: true
          content:
            localeCode: localeCode
            value: value
          attributeFQN: attributeFQN
          adminName: adminName
          attributeCode: attributeCode
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          attributeMetadata:
          - value: value
            key: key
          - value: value
            key: key
          isReadOnly: true
          vocabularyValues:
          - sequence: 2
            value: value
            content:
              localeCode: localeCode
              value: value
            isHidden: true
          - sequence: 2
            value: value
            content:
              localeCode: localeCode
              value: value
            isHidden: true
          valueType: valueType
          namespace: namespace
          inputType: inputType
          id: 5
          validation:
            maxNumericValue: 3.616076749251911
            minDateTime: 2000-01-23T04:56:07.000+00:00
            maxDateTime: 2000-01-23T04:56:07.000+00:00
            regularExpression: regularExpression
            maxStringLength: 7
            minStringLength: 2
            minNumericValue: 9.301444243932576
          order: 4
        - isRequired: true
          dataType: dataType
          isMultiValued: true
          displayGroup: displayGroup
          availableForOrderRouting: true
          isVisible: true
          isActive: true
          content:
            localeCode: localeCode
            value: value
          attributeFQN: attributeFQN
          adminName: adminName
          attributeCode: attributeCode
          auditInfo:
            updateDate: 2000-01-23T04:56:07.000+00:00
            createBy: createBy
            updateBy: updateBy
            createDate: 2000-01-23T04:56:07.000+00:00
          attributeMetadata:
          - value: value
            key: key
          - value: value
            key: key
          isReadOnly: true
          vocabularyValues:
          - sequence: 2
            value: value
            content:
              localeCode: localeCode
              value: value
            isHidden: true
          - sequence: 2
            value: value
            content:
              localeCode: localeCode
              value: value
            isHidden: true
          valueType: valueType
          namespace: namespace
          inputType: inputType
          id: 5
          validation:
            maxNumericValue: 3.616076749251911
            minDateTime: 2000-01-23T04:56:07.000+00:00
            maxDateTime: 2000-01-23T04:56:07.000+00:00
            regularExpression: regularExpression
            maxStringLength: 7
            minStringLength: 2
            minNumericValue: 9.301444243932576
          order: 4
      properties:
        startIndex:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        pageCount:
          format: int32
          type: integer
        totalCount:
          format: int32
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CommerceRuntimeAttribute'
          nullable: true
          type: array
      type: object
    CustomerCustomerSegment:
      additionalProperties: false
      description: A customer segment.
      example:
        auditInfo:
          updateDate: 2000-01-23T04:56:07.000+00:00
          createBy: createBy
          updateBy: updateBy
          createDate: 2000-01-23T04:56:07.000+00:00
        code: code
        name: name
        description: description
        id: 5
      properties:
        id:
          description: Unique identifier of the customer segment.
          format: int32
          type: integer
        code:
          description: Unique identifier of the customer segment.
          nullable: true
          type: string
        name:
          description: Name of the customer segment.
          nullable: true
          type: string
        description:
          description: Description of the customer segment.
          nullable: true
          type: string
        auditInfo:
          $ref: '#/components/schemas/AdminUserAuditInfo'
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      description: JWT Authorization header using the Bearer scheme.
      scheme: bearer
      type: http
    clientOauth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /api/platform/applications/authtickets/oauth
      type: oauth2

