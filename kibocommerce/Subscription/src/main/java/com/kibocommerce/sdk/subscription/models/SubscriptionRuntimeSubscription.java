/*
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.subscription.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.subscription.models.Adjustment;
import com.kibocommerce.sdk.subscription.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimeAppliedDiscount;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimeChangeMessage;
import com.kibocommerce.sdk.subscription.models.Frequency;
import com.kibocommerce.sdk.subscription.models.FulfillmentInfo;
import com.kibocommerce.sdk.subscription.models.InvalidCoupon;
import com.kibocommerce.sdk.subscription.models.OnetimeProduct;
import com.kibocommerce.sdk.subscription.models.OnetimeShippingMethod;
import com.kibocommerce.sdk.subscription.models.OrderNote;
import com.kibocommerce.sdk.subscription.models.Payment;
import com.kibocommerce.sdk.subscription.models.ShippingDiscount;
import com.kibocommerce.sdk.subscription.models.SubscriptionItem;
import com.kibocommerce.sdk.subscription.models.SubscriptionReason;
import com.kibocommerce.sdk.subscription.models.Trial;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * SubscriptionRuntimeSubscription
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SubscriptionRuntimeSubscription implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private Integer siteId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Integer tenantId;

  public static final String SERIALIZED_NAME_NUMBER = "number";
  @SerializedName(SERIALIZED_NAME_NUMBER)
  private Integer number;

  public static final String SERIALIZED_NAME_PARENT_ORDER_ID = "parentOrderId";
  @SerializedName(SERIALIZED_NAME_PARENT_ORDER_ID)
  private String parentOrderId;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<SubscriptionItem> items = null;

  public static final String SERIALIZED_NAME_PAYMENT = "payment";
  @SerializedName(SERIALIZED_NAME_PAYMENT)
  private Payment payment;

  public static final String SERIALIZED_NAME_PRICE_LIST_CODE = "priceListCode";
  @SerializedName(SERIALIZED_NAME_PRICE_LIST_CODE)
  private String priceListCode;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private List<OrderNote> notes = null;

  public static final String SERIALIZED_NAME_ONE_TIME_COUPON_CODES = "oneTimeCouponCodes";
  @SerializedName(SERIALIZED_NAME_ONE_TIME_COUPON_CODES)
  private List<String> oneTimeCouponCodes = null;

  public static final String SERIALIZED_NAME_CHANGE_MESSAGES = "changeMessages";
  @SerializedName(SERIALIZED_NAME_CHANGE_MESSAGES)
  private List<CommerceRuntimeChangeMessage> changeMessages = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_FULFILLMENT_INFO = "fulfillmentInfo";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_INFO)
  private FulfillmentInfo fulfillmentInfo;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_ID = "customerAccountId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_ID)
  private Integer customerAccountId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_CUSTOMER_TAX_ID = "customerTaxId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_TAX_ID)
  private String customerTaxId;

  public static final String SERIALIZED_NAME_IS_TAX_EXEMPT = "isTaxExempt";
  @SerializedName(SERIALIZED_NAME_IS_TAX_EXEMPT)
  private Boolean isTaxExempt;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data;

  public static final String SERIALIZED_NAME_TAX_DATA = "taxData";
  @SerializedName(SERIALIZED_NAME_TAX_DATA)
  private Object taxData;

  public static final String SERIALIZED_NAME_CHANNEL_CODE = "channelCode";
  @SerializedName(SERIALIZED_NAME_CHANNEL_CODE)
  private String channelCode;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "ipAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_SOURCE_DEVICE = "sourceDevice";
  @SerializedName(SERIALIZED_NAME_SOURCE_DEVICE)
  private String sourceDevice;

  public static final String SERIALIZED_NAME_VISIT_ID = "visitId";
  @SerializedName(SERIALIZED_NAME_VISIT_ID)
  private String visitId;

  public static final String SERIALIZED_NAME_WEB_SESSION_ID = "webSessionId";
  @SerializedName(SERIALIZED_NAME_WEB_SESSION_ID)
  private String webSessionId;

  public static final String SERIALIZED_NAME_CUSTOMER_INTERACTION_TYPE = "customerInteractionType";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_INTERACTION_TYPE)
  private String customerInteractionType;

  public static final String SERIALIZED_NAME_FREQUENCY = "frequency";
  @SerializedName(SERIALIZED_NAME_FREQUENCY)
  private Frequency frequency;

  public static final String SERIALIZED_NAME_PREVIOUS_FREQUENCY = "previousFrequency";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_FREQUENCY)
  private Frequency previousFrequency;

  public static final String SERIALIZED_NAME_FREQUENCY_AUDIT_INFO = "frequencyAuditInfo";
  @SerializedName(SERIALIZED_NAME_FREQUENCY_AUDIT_INFO)
  private AdminUserAuditInfo frequencyAuditInfo;

  public static final String SERIALIZED_NAME_NEXT_ORDER_DATE = "nextOrderDate";
  @SerializedName(SERIALIZED_NAME_NEXT_ORDER_DATE)
  private OffsetDateTime nextOrderDate;

  public static final String SERIALIZED_NAME_PREVIOUS_NEXT_ORDER_DATE = "previousNextOrderDate";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_NEXT_ORDER_DATE)
  private OffsetDateTime previousNextOrderDate;

  public static final String SERIALIZED_NAME_NEXT_ORDER_DATE_AUDIT_INFO = "nextOrderDateAuditInfo";
  @SerializedName(SERIALIZED_NAME_NEXT_ORDER_DATE_AUDIT_INFO)
  private AdminUserAuditInfo nextOrderDateAuditInfo;

  public static final String SERIALIZED_NAME_LAST_CONTINUITY_ORDER_DATE_ON_SUB_PAUSED = "lastContinuityOrderDateOnSubPaused";
  @SerializedName(SERIALIZED_NAME_LAST_CONTINUITY_ORDER_DATE_ON_SUB_PAUSED)
  private OffsetDateTime lastContinuityOrderDateOnSubPaused;

  public static final String SERIALIZED_NAME_ORDINAL = "ordinal";
  @SerializedName(SERIALIZED_NAME_ORDINAL)
  private Integer ordinal;

  public static final String SERIALIZED_NAME_PAYMENT_ERROR_CODE = "paymentErrorCode";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ERROR_CODE)
  private String paymentErrorCode;

  public static final String SERIALIZED_NAME_TRIAL = "trial";
  @SerializedName(SERIALIZED_NAME_TRIAL)
  private Trial trial;

  public static final String SERIALIZED_NAME_ORDER_DISCOUNTS = "orderDiscounts";
  @SerializedName(SERIALIZED_NAME_ORDER_DISCOUNTS)
  private List<CommerceRuntimeAppliedDiscount> orderDiscounts = null;

  public static final String SERIALIZED_NAME_SUB_TOTAL = "subTotal";
  @SerializedName(SERIALIZED_NAME_SUB_TOTAL)
  private Double subTotal;

  public static final String SERIALIZED_NAME_ITEM_LEVEL_PRODUCT_DISCOUNT_TOTAL = "itemLevelProductDiscountTotal";
  @SerializedName(SERIALIZED_NAME_ITEM_LEVEL_PRODUCT_DISCOUNT_TOTAL)
  private Double itemLevelProductDiscountTotal;

  public static final String SERIALIZED_NAME_ITEM_LEVEL_ADJUSTMENTS_TOTAL = "itemLevelAdjustmentsTotal";
  @SerializedName(SERIALIZED_NAME_ITEM_LEVEL_ADJUSTMENTS_TOTAL)
  private Double itemLevelAdjustmentsTotal;

  public static final String SERIALIZED_NAME_ORDER_LEVEL_PRODUCT_DISCOUNT_TOTAL = "orderLevelProductDiscountTotal";
  @SerializedName(SERIALIZED_NAME_ORDER_LEVEL_PRODUCT_DISCOUNT_TOTAL)
  private Double orderLevelProductDiscountTotal;

  public static final String SERIALIZED_NAME_ITEM_TAX_TOTAL = "itemTaxTotal";
  @SerializedName(SERIALIZED_NAME_ITEM_TAX_TOTAL)
  private Double itemTaxTotal;

  public static final String SERIALIZED_NAME_ADJUSTMENT = "adjustment";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT)
  private Adjustment adjustment;

  public static final String SERIALIZED_NAME_ITEM_TOTAL = "itemTotal";
  @SerializedName(SERIALIZED_NAME_ITEM_TOTAL)
  private Double itemTotal;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNTS = "shippingDiscounts";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNTS)
  private List<ShippingDiscount> shippingDiscounts = null;

  public static final String SERIALIZED_NAME_ITEM_LEVEL_SHIPPING_DISCOUNT_TOTAL = "itemLevelShippingDiscountTotal";
  @SerializedName(SERIALIZED_NAME_ITEM_LEVEL_SHIPPING_DISCOUNT_TOTAL)
  private Double itemLevelShippingDiscountTotal;

  public static final String SERIALIZED_NAME_ORDER_LEVEL_SHIPPING_DISCOUNT_TOTAL = "orderLevelShippingDiscountTotal";
  @SerializedName(SERIALIZED_NAME_ORDER_LEVEL_SHIPPING_DISCOUNT_TOTAL)
  private Double orderLevelShippingDiscountTotal;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shippingAmount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private Double shippingAmount;

  public static final String SERIALIZED_NAME_SHIPPING_ADJUSTMENT = "shippingAdjustment";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADJUSTMENT)
  private Adjustment shippingAdjustment;

  public static final String SERIALIZED_NAME_SHIPPING_SUB_TOTAL = "shippingSubTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_SUB_TOTAL)
  private Double shippingSubTotal;

  public static final String SERIALIZED_NAME_SHIPPING_TAX = "shippingTax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX)
  private Double shippingTax;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_TOTAL = "shippingTaxTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_TOTAL)
  private Double shippingTaxTotal;

  public static final String SERIALIZED_NAME_SHIPPING_TOTAL = "shippingTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TOTAL)
  private Double shippingTotal;

  public static final String SERIALIZED_NAME_HANDLING_DISCOUNTS = "handlingDiscounts";
  @SerializedName(SERIALIZED_NAME_HANDLING_DISCOUNTS)
  private List<CommerceRuntimeAppliedDiscount> handlingDiscounts = null;

  public static final String SERIALIZED_NAME_ITEM_LEVEL_HANDLING_DISCOUNT_TOTAL = "itemLevelHandlingDiscountTotal";
  @SerializedName(SERIALIZED_NAME_ITEM_LEVEL_HANDLING_DISCOUNT_TOTAL)
  private Double itemLevelHandlingDiscountTotal;

  public static final String SERIALIZED_NAME_ORDER_LEVEL_HANDLING_DISCOUNT_TOTAL = "orderLevelHandlingDiscountTotal";
  @SerializedName(SERIALIZED_NAME_ORDER_LEVEL_HANDLING_DISCOUNT_TOTAL)
  private Double orderLevelHandlingDiscountTotal;

  public static final String SERIALIZED_NAME_HANDLING_AMOUNT = "handlingAmount";
  @SerializedName(SERIALIZED_NAME_HANDLING_AMOUNT)
  private Double handlingAmount;

  public static final String SERIALIZED_NAME_HANDLING_ADJUSTMENT = "handlingAdjustment";
  @SerializedName(SERIALIZED_NAME_HANDLING_ADJUSTMENT)
  private Adjustment handlingAdjustment;

  public static final String SERIALIZED_NAME_HANDLING_SUB_TOTAL = "handlingSubTotal";
  @SerializedName(SERIALIZED_NAME_HANDLING_SUB_TOTAL)
  private Double handlingSubTotal;

  public static final String SERIALIZED_NAME_HANDLING_TAX = "handlingTax";
  @SerializedName(SERIALIZED_NAME_HANDLING_TAX)
  private Double handlingTax;

  public static final String SERIALIZED_NAME_HANDLING_TAX_TOTAL = "handlingTaxTotal";
  @SerializedName(SERIALIZED_NAME_HANDLING_TAX_TOTAL)
  private Double handlingTaxTotal;

  public static final String SERIALIZED_NAME_HANDLING_TOTAL = "handlingTotal";
  @SerializedName(SERIALIZED_NAME_HANDLING_TOTAL)
  private Double handlingTotal;

  public static final String SERIALIZED_NAME_DUTY_AMOUNT = "dutyAmount";
  @SerializedName(SERIALIZED_NAME_DUTY_AMOUNT)
  private Double dutyAmount;

  public static final String SERIALIZED_NAME_DUTY_TOTAL = "dutyTotal";
  @SerializedName(SERIALIZED_NAME_DUTY_TOTAL)
  private Double dutyTotal;

  public static final String SERIALIZED_NAME_FEE_TOTAL = "feeTotal";
  @SerializedName(SERIALIZED_NAME_FEE_TOTAL)
  private Double feeTotal;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_REASONS = "reasons";
  @SerializedName(SERIALIZED_NAME_REASONS)
  private List<SubscriptionReason> reasons = null;

  public static final String SERIALIZED_NAME_COUPON_CODES = "couponCodes";
  @SerializedName(SERIALIZED_NAME_COUPON_CODES)
  private List<String> couponCodes = null;

  public static final String SERIALIZED_NAME_INVALID_COUPONS = "invalidCoupons";
  @SerializedName(SERIALIZED_NAME_INVALID_COUPONS)
  private List<InvalidCoupon> invalidCoupons = null;

  public static final String SERIALIZED_NAME_IS_IMPORT = "isImport";
  @SerializedName(SERIALIZED_NAME_IS_IMPORT)
  private Boolean isImport;

  public static final String SERIALIZED_NAME_EXTERNAL_ID = "externalId";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_ID)
  private String externalId;

  public static final String SERIALIZED_NAME_LINE_ITEM_SUBTOTAL_WITH_ORDER_ADJUSTMENTS = "lineItemSubtotalWithOrderAdjustments";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_SUBTOTAL_WITH_ORDER_ADJUSTMENTS)
  private Double lineItemSubtotalWithOrderAdjustments;

  public static final String SERIALIZED_NAME_DISCOUNTED_SUBTOTAL = "discountedSubtotal";
  @SerializedName(SERIALIZED_NAME_DISCOUNTED_SUBTOTAL)
  private Double discountedSubtotal;

  public static final String SERIALIZED_NAME_ONETIME_PRODUCTS = "onetimeProducts";
  @SerializedName(SERIALIZED_NAME_ONETIME_PRODUCTS)
  private List<OnetimeProduct> onetimeProducts = null;

  public static final String SERIALIZED_NAME_ONETIME_SHIPPING_METHOD = "onetimeShippingMethod";
  @SerializedName(SERIALIZED_NAME_ONETIME_SHIPPING_METHOD)
  private OnetimeShippingMethod onetimeShippingMethod;

  public static final String SERIALIZED_NAME_NEXT_ORDER_DATE_OFFSET_COUNTER = "nextOrderDateOffsetCounter";
  @SerializedName(SERIALIZED_NAME_NEXT_ORDER_DATE_OFFSET_COUNTER)
  private Integer nextOrderDateOffsetCounter;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_SKIP_COUNTER = "subscriptionSkipCounter";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_SKIP_COUNTER)
  private Integer subscriptionSkipCounter;

  public static final String SERIALIZED_NAME_IS_DRAFT = "isDraft";
  @SerializedName(SERIALIZED_NAME_IS_DRAFT)
  private Boolean isDraft;

  public static final String SERIALIZED_NAME_HAS_DRAFT = "hasDraft";
  @SerializedName(SERIALIZED_NAME_HAS_DRAFT)
  private Boolean hasDraft;

  public static final String SERIALIZED_NAME_IS_PARTIAL_DRAFT = "isPartialDraft";
  @SerializedName(SERIALIZED_NAME_IS_PARTIAL_DRAFT)
  private Boolean isPartialDraft;

  public static final String SERIALIZED_NAME_IS_ORDER_REMINDER_EMAIL_SENT = "isOrderReminderEmailSent";
  @SerializedName(SERIALIZED_NAME_IS_ORDER_REMINDER_EMAIL_SENT)
  private Boolean isOrderReminderEmailSent;

  public static final String SERIALIZED_NAME_IS_REACTIVATION_REMINDER_EMAIL_SENT = "isReactivationReminderEmailSent";
  @SerializedName(SERIALIZED_NAME_IS_REACTIVATION_REMINDER_EMAIL_SENT)
  private Boolean isReactivationReminderEmailSent;

  public static final String SERIALIZED_NAME_REACTIVATION_DATE = "reactivationDate";
  @SerializedName(SERIALIZED_NAME_REACTIVATION_DATE)
  private OffsetDateTime reactivationDate;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_PAUSE_DATE = "subscriptionPauseDate";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_PAUSE_DATE)
  private OffsetDateTime subscriptionPauseDate;

  public SubscriptionRuntimeSubscription() {
  }

  
  public SubscriptionRuntimeSubscription(
     String customerTaxId, 
     Boolean isTaxExempt
  ) {
    this();
    this.customerTaxId = customerTaxId;
    this.isTaxExempt = isTaxExempt;
  }

  public SubscriptionRuntimeSubscription id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public SubscriptionRuntimeSubscription siteId(Integer siteId) {
    
    this.siteId = siteId;
    return this;
  }

   /**
   * Unique identifier of the Site.
   * @return siteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the Site.")

  public Integer getSiteId() {
    return siteId;
  }


  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }


  public SubscriptionRuntimeSubscription tenantId(Integer tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Unique identifier of the Tenant.
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the Tenant.")

  public Integer getTenantId() {
    return tenantId;
  }


  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }


  public SubscriptionRuntimeSubscription number(Integer number) {
    
    this.number = number;
    return this;
  }

   /**
   * Subscription number.
   * @return number
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subscription number.")

  public Integer getNumber() {
    return number;
  }


  public void setNumber(Integer number) {
    this.number = number;
  }


  public SubscriptionRuntimeSubscription parentOrderId(String parentOrderId) {
    
    this.parentOrderId = parentOrderId;
    return this;
  }

   /**
   * The parent order id from which the subscription was created.
   * @return parentOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The parent order id from which the subscription was created.")

  public String getParentOrderId() {
    return parentOrderId;
  }


  public void setParentOrderId(String parentOrderId) {
    this.parentOrderId = parentOrderId;
  }


  public SubscriptionRuntimeSubscription items(List<SubscriptionItem> items) {
    
    this.items = items;
    return this;
  }

  public SubscriptionRuntimeSubscription addItemsItem(SubscriptionItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * List of items in the Subscription.
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of items in the Subscription.")

  public List<SubscriptionItem> getItems() {
    return items;
  }


  public void setItems(List<SubscriptionItem> items) {
    this.items = items;
  }


  public SubscriptionRuntimeSubscription payment(Payment payment) {
    
    this.payment = payment;
    return this;
  }

   /**
   * Get payment
   * @return payment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Payment getPayment() {
    return payment;
  }


  public void setPayment(Payment payment) {
    this.payment = payment;
  }


  public SubscriptionRuntimeSubscription priceListCode(String priceListCode) {
    
    this.priceListCode = priceListCode;
    return this;
  }

   /**
   * Price-list code for the Subscription
   * @return priceListCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Price-list code for the Subscription")

  public String getPriceListCode() {
    return priceListCode;
  }


  public void setPriceListCode(String priceListCode) {
    this.priceListCode = priceListCode;
  }


  public SubscriptionRuntimeSubscription notes(List<OrderNote> notes) {
    
    this.notes = notes;
    return this;
  }

  public SubscriptionRuntimeSubscription addNotesItem(OrderNote notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Notes")

  public List<OrderNote> getNotes() {
    return notes;
  }


  public void setNotes(List<OrderNote> notes) {
    this.notes = notes;
  }


  public SubscriptionRuntimeSubscription oneTimeCouponCodes(List<String> oneTimeCouponCodes) {
    
    this.oneTimeCouponCodes = oneTimeCouponCodes;
    return this;
  }

  public SubscriptionRuntimeSubscription addOneTimeCouponCodesItem(String oneTimeCouponCodesItem) {
    if (this.oneTimeCouponCodes == null) {
      this.oneTimeCouponCodes = new ArrayList<>();
    }
    this.oneTimeCouponCodes.add(oneTimeCouponCodesItem);
    return this;
  }

   /**
   * One-time coupon to the subscription. This coupon will fall off after the next continuity order is created.
   * @return oneTimeCouponCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "One-time coupon to the subscription. This coupon will fall off after the next continuity order is created.")

  public List<String> getOneTimeCouponCodes() {
    return oneTimeCouponCodes;
  }


  public void setOneTimeCouponCodes(List<String> oneTimeCouponCodes) {
    this.oneTimeCouponCodes = oneTimeCouponCodes;
  }


  public SubscriptionRuntimeSubscription changeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    
    this.changeMessages = changeMessages;
    return this;
  }

  public SubscriptionRuntimeSubscription addChangeMessagesItem(CommerceRuntimeChangeMessage changeMessagesItem) {
    if (this.changeMessages == null) {
      this.changeMessages = new ArrayList<>();
    }
    this.changeMessages.add(changeMessagesItem);
    return this;
  }

   /**
   * Change Messages
   * @return changeMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Change Messages")

  public List<CommerceRuntimeChangeMessage> getChangeMessages() {
    return changeMessages;
  }


  public void setChangeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    this.changeMessages = changeMessages;
  }


  public SubscriptionRuntimeSubscription auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public SubscriptionRuntimeSubscription fulfillmentInfo(FulfillmentInfo fulfillmentInfo) {
    
    this.fulfillmentInfo = fulfillmentInfo;
    return this;
  }

   /**
   * Get fulfillmentInfo
   * @return fulfillmentInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public FulfillmentInfo getFulfillmentInfo() {
    return fulfillmentInfo;
  }


  public void setFulfillmentInfo(FulfillmentInfo fulfillmentInfo) {
    this.fulfillmentInfo = fulfillmentInfo;
  }


  public SubscriptionRuntimeSubscription userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public SubscriptionRuntimeSubscription customerAccountId(Integer customerAccountId) {
    
    this.customerAccountId = customerAccountId;
    return this;
  }

   /**
   * Unique identifier of the customer account.
   * @return customerAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the customer account.")

  public Integer getCustomerAccountId() {
    return customerAccountId;
  }


  public void setCustomerAccountId(Integer customerAccountId) {
    this.customerAccountId = customerAccountId;
  }


  public SubscriptionRuntimeSubscription email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Email address for checkout
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Email address for checkout")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


   /**
   * The customers tax ID. If Customer Account ID exists in the system, will set this.
   * @return customerTaxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The customers tax ID. If Customer Account ID exists in the system, will set this.")

  public String getCustomerTaxId() {
    return customerTaxId;
  }




   /**
   * Unique identifier of the customer account.
   * @return isTaxExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the customer account.")

  public Boolean getIsTaxExempt() {
    return isTaxExempt;
  }




  public SubscriptionRuntimeSubscription currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * ISO Currency Code.
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO Currency Code.")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public SubscriptionRuntimeSubscription data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Custom data for a given vendor set within the commerce process.
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom data for a given vendor set within the commerce process.")

  public Object getData() {
    return data;
  }


  public void setData(Object data) {
    this.data = data;
  }


  public SubscriptionRuntimeSubscription taxData(Object taxData) {
    
    this.taxData = taxData;
    return this;
  }

   /**
   * Storage for any additional/custom tax data.
   * @return taxData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Storage for any additional/custom tax data.")

  public Object getTaxData() {
    return taxData;
  }


  public void setTaxData(Object taxData) {
    this.taxData = taxData;
  }


  public SubscriptionRuntimeSubscription channelCode(String channelCode) {
    
    this.channelCode = channelCode;
    return this;
  }

   /**
   * Unique identifier of the channel for this item.
   * @return channelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the channel for this item.")

  public String getChannelCode() {
    return channelCode;
  }


  public void setChannelCode(String channelCode) {
    this.channelCode = channelCode;
  }


  public SubscriptionRuntimeSubscription locationCode(String locationCode) {
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Identifies the location at which the order was placed if the order was placed externally.
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the location at which the order was placed if the order was placed externally.")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    this.locationCode = locationCode;
  }


  public SubscriptionRuntimeSubscription ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * IP address of the user placing the order. (User or customer?)
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP address of the user placing the order. (User or customer?)")

  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public SubscriptionRuntimeSubscription sourceDevice(String sourceDevice) {
    
    this.sourceDevice = sourceDevice;
    return this;
  }

   /**
   * Source device of the user placing the order. (User or customer?)
   * @return sourceDevice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Source device of the user placing the order. (User or customer?)")

  public String getSourceDevice() {
    return sourceDevice;
  }


  public void setSourceDevice(String sourceDevice) {
    this.sourceDevice = sourceDevice;
  }


  public SubscriptionRuntimeSubscription visitId(String visitId) {
    
    this.visitId = visitId;
    return this;
  }

   /**
   * Identifies the Visit ID that was current when the order was placed or when the cart was last updated.
   * @return visitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the Visit ID that was current when the order was placed or when the cart was last updated.")

  public String getVisitId() {
    return visitId;
  }


  public void setVisitId(String visitId) {
    this.visitId = visitId;
  }


  public SubscriptionRuntimeSubscription webSessionId(String webSessionId) {
    
    this.webSessionId = webSessionId;
    return this;
  }

   /**
   * Identifies the web session used to place the order or last update the cart.
   * @return webSessionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the web session used to place the order or last update the cart.")

  public String getWebSessionId() {
    return webSessionId;
  }


  public void setWebSessionId(String webSessionId) {
    this.webSessionId = webSessionId;
  }


  public SubscriptionRuntimeSubscription customerInteractionType(String customerInteractionType) {
    
    this.customerInteractionType = customerInteractionType;
    return this;
  }

   /**
   * Determines the interaction type that a customer will use to create this object.  Valid values are: Website, Store, Call, Unknown
   * @return customerInteractionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines the interaction type that a customer will use to create this object.  Valid values are: Website, Store, Call, Unknown")

  public String getCustomerInteractionType() {
    return customerInteractionType;
  }


  public void setCustomerInteractionType(String customerInteractionType) {
    this.customerInteractionType = customerInteractionType;
  }


  public SubscriptionRuntimeSubscription frequency(Frequency frequency) {
    
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Frequency getFrequency() {
    return frequency;
  }


  public void setFrequency(Frequency frequency) {
    this.frequency = frequency;
  }


  public SubscriptionRuntimeSubscription previousFrequency(Frequency previousFrequency) {
    
    this.previousFrequency = previousFrequency;
    return this;
  }

   /**
   * Get previousFrequency
   * @return previousFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Frequency getPreviousFrequency() {
    return previousFrequency;
  }


  public void setPreviousFrequency(Frequency previousFrequency) {
    this.previousFrequency = previousFrequency;
  }


  public SubscriptionRuntimeSubscription frequencyAuditInfo(AdminUserAuditInfo frequencyAuditInfo) {
    
    this.frequencyAuditInfo = frequencyAuditInfo;
    return this;
  }

   /**
   * Get frequencyAuditInfo
   * @return frequencyAuditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getFrequencyAuditInfo() {
    return frequencyAuditInfo;
  }


  public void setFrequencyAuditInfo(AdminUserAuditInfo frequencyAuditInfo) {
    this.frequencyAuditInfo = frequencyAuditInfo;
  }


  public SubscriptionRuntimeSubscription nextOrderDate(OffsetDateTime nextOrderDate) {
    
    this.nextOrderDate = nextOrderDate;
    return this;
  }

   /**
   * Get nextOrderDate
   * @return nextOrderDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getNextOrderDate() {
    return nextOrderDate;
  }


  public void setNextOrderDate(OffsetDateTime nextOrderDate) {
    this.nextOrderDate = nextOrderDate;
  }


  public SubscriptionRuntimeSubscription previousNextOrderDate(OffsetDateTime previousNextOrderDate) {
    
    this.previousNextOrderDate = previousNextOrderDate;
    return this;
  }

   /**
   * Get previousNextOrderDate
   * @return previousNextOrderDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPreviousNextOrderDate() {
    return previousNextOrderDate;
  }


  public void setPreviousNextOrderDate(OffsetDateTime previousNextOrderDate) {
    this.previousNextOrderDate = previousNextOrderDate;
  }


  public SubscriptionRuntimeSubscription nextOrderDateAuditInfo(AdminUserAuditInfo nextOrderDateAuditInfo) {
    
    this.nextOrderDateAuditInfo = nextOrderDateAuditInfo;
    return this;
  }

   /**
   * Get nextOrderDateAuditInfo
   * @return nextOrderDateAuditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getNextOrderDateAuditInfo() {
    return nextOrderDateAuditInfo;
  }


  public void setNextOrderDateAuditInfo(AdminUserAuditInfo nextOrderDateAuditInfo) {
    this.nextOrderDateAuditInfo = nextOrderDateAuditInfo;
  }


  public SubscriptionRuntimeSubscription lastContinuityOrderDateOnSubPaused(OffsetDateTime lastContinuityOrderDateOnSubPaused) {
    
    this.lastContinuityOrderDateOnSubPaused = lastContinuityOrderDateOnSubPaused;
    return this;
  }

   /**
   * Get lastContinuityOrderDateOnSubPaused
   * @return lastContinuityOrderDateOnSubPaused
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastContinuityOrderDateOnSubPaused() {
    return lastContinuityOrderDateOnSubPaused;
  }


  public void setLastContinuityOrderDateOnSubPaused(OffsetDateTime lastContinuityOrderDateOnSubPaused) {
    this.lastContinuityOrderDateOnSubPaused = lastContinuityOrderDateOnSubPaused;
  }


  public SubscriptionRuntimeSubscription ordinal(Integer ordinal) {
    
    this.ordinal = ordinal;
    return this;
  }

   /**
   * Get ordinal
   * @return ordinal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getOrdinal() {
    return ordinal;
  }


  public void setOrdinal(Integer ordinal) {
    this.ordinal = ordinal;
  }


  public SubscriptionRuntimeSubscription paymentErrorCode(String paymentErrorCode) {
    
    this.paymentErrorCode = paymentErrorCode;
    return this;
  }

   /**
   * Get paymentErrorCode
   * @return paymentErrorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentErrorCode() {
    return paymentErrorCode;
  }


  public void setPaymentErrorCode(String paymentErrorCode) {
    this.paymentErrorCode = paymentErrorCode;
  }


  public SubscriptionRuntimeSubscription trial(Trial trial) {
    
    this.trial = trial;
    return this;
  }

   /**
   * Get trial
   * @return trial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Trial getTrial() {
    return trial;
  }


  public void setTrial(Trial trial) {
    this.trial = trial;
  }


  public SubscriptionRuntimeSubscription orderDiscounts(List<CommerceRuntimeAppliedDiscount> orderDiscounts) {
    
    this.orderDiscounts = orderDiscounts;
    return this;
  }

  public SubscriptionRuntimeSubscription addOrderDiscountsItem(CommerceRuntimeAppliedDiscount orderDiscountsItem) {
    if (this.orderDiscounts == null) {
      this.orderDiscounts = new ArrayList<>();
    }
    this.orderDiscounts.add(orderDiscountsItem);
    return this;
  }

   /**
   * Get orderDiscounts
   * @return orderDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CommerceRuntimeAppliedDiscount> getOrderDiscounts() {
    return orderDiscounts;
  }


  public void setOrderDiscounts(List<CommerceRuntimeAppliedDiscount> orderDiscounts) {
    this.orderDiscounts = orderDiscounts;
  }


  public SubscriptionRuntimeSubscription subTotal(Double subTotal) {
    
    this.subTotal = subTotal;
    return this;
  }

   /**
   * Subtotal before any coupon codes, taxes, fees, etc.
   * @return subTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subtotal before any coupon codes, taxes, fees, etc.")

  public Double getSubTotal() {
    return subTotal;
  }


  public void setSubTotal(Double subTotal) {
    this.subTotal = subTotal;
  }


  public SubscriptionRuntimeSubscription itemLevelProductDiscountTotal(Double itemLevelProductDiscountTotal) {
    
    this.itemLevelProductDiscountTotal = itemLevelProductDiscountTotal;
    return this;
  }

   /**
   * The total value of item-level product discounts.
   * @return itemLevelProductDiscountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total value of item-level product discounts.")

  public Double getItemLevelProductDiscountTotal() {
    return itemLevelProductDiscountTotal;
  }


  public void setItemLevelProductDiscountTotal(Double itemLevelProductDiscountTotal) {
    this.itemLevelProductDiscountTotal = itemLevelProductDiscountTotal;
  }


  public SubscriptionRuntimeSubscription itemLevelAdjustmentsTotal(Double itemLevelAdjustmentsTotal) {
    
    this.itemLevelAdjustmentsTotal = itemLevelAdjustmentsTotal;
    return this;
  }

   /**
   * The total value of all line item adjustments
   * @return itemLevelAdjustmentsTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total value of all line item adjustments")

  public Double getItemLevelAdjustmentsTotal() {
    return itemLevelAdjustmentsTotal;
  }


  public void setItemLevelAdjustmentsTotal(Double itemLevelAdjustmentsTotal) {
    this.itemLevelAdjustmentsTotal = itemLevelAdjustmentsTotal;
  }


  public SubscriptionRuntimeSubscription orderLevelProductDiscountTotal(Double orderLevelProductDiscountTotal) {
    
    this.orderLevelProductDiscountTotal = orderLevelProductDiscountTotal;
    return this;
  }

   /**
   * The total value of order-level (group-level) product discounts.
   * @return orderLevelProductDiscountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total value of order-level (group-level) product discounts.")

  public Double getOrderLevelProductDiscountTotal() {
    return orderLevelProductDiscountTotal;
  }


  public void setOrderLevelProductDiscountTotal(Double orderLevelProductDiscountTotal) {
    this.orderLevelProductDiscountTotal = orderLevelProductDiscountTotal;
  }


  public SubscriptionRuntimeSubscription itemTaxTotal(Double itemTaxTotal) {
    
    this.itemTaxTotal = itemTaxTotal;
    return this;
  }

   /**
   * Total tax on products.
   * @return itemTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total tax on products.")

  public Double getItemTaxTotal() {
    return itemTaxTotal;
  }


  public void setItemTaxTotal(Double itemTaxTotal) {
    this.itemTaxTotal = itemTaxTotal;
  }


  public SubscriptionRuntimeSubscription adjustment(Adjustment adjustment) {
    
    this.adjustment = adjustment;
    return this;
  }

   /**
   * Get adjustment
   * @return adjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Adjustment getAdjustment() {
    return adjustment;
  }


  public void setAdjustment(Adjustment adjustment) {
    this.adjustment = adjustment;
  }


  public SubscriptionRuntimeSubscription itemTotal(Double itemTotal) {
    
    this.itemTotal = itemTotal;
    return this;
  }

   /**
   * The total product cost, accounting for discounts and tax.
   * @return itemTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The total product cost, accounting for discounts and tax.")

  public Double getItemTotal() {
    return itemTotal;
  }


  public void setItemTotal(Double itemTotal) {
    this.itemTotal = itemTotal;
  }


  public SubscriptionRuntimeSubscription total(Double total) {
    
    this.total = total;
    return this;
  }

   /**
   * Final total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Final total")

  public Double getTotal() {
    return total;
  }


  public void setTotal(Double total) {
    this.total = total;
  }


  public SubscriptionRuntimeSubscription shippingDiscounts(List<ShippingDiscount> shippingDiscounts) {
    
    this.shippingDiscounts = shippingDiscounts;
    return this;
  }

  public SubscriptionRuntimeSubscription addShippingDiscountsItem(ShippingDiscount shippingDiscountsItem) {
    if (this.shippingDiscounts == null) {
      this.shippingDiscounts = new ArrayList<>();
    }
    this.shippingDiscounts.add(shippingDiscountsItem);
    return this;
  }

   /**
   * Get shippingDiscounts
   * @return shippingDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ShippingDiscount> getShippingDiscounts() {
    return shippingDiscounts;
  }


  public void setShippingDiscounts(List<ShippingDiscount> shippingDiscounts) {
    this.shippingDiscounts = shippingDiscounts;
  }


  public SubscriptionRuntimeSubscription itemLevelShippingDiscountTotal(Double itemLevelShippingDiscountTotal) {
    
    this.itemLevelShippingDiscountTotal = itemLevelShippingDiscountTotal;
    return this;
  }

   /**
   * Get itemLevelShippingDiscountTotal
   * @return itemLevelShippingDiscountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getItemLevelShippingDiscountTotal() {
    return itemLevelShippingDiscountTotal;
  }


  public void setItemLevelShippingDiscountTotal(Double itemLevelShippingDiscountTotal) {
    this.itemLevelShippingDiscountTotal = itemLevelShippingDiscountTotal;
  }


  public SubscriptionRuntimeSubscription orderLevelShippingDiscountTotal(Double orderLevelShippingDiscountTotal) {
    
    this.orderLevelShippingDiscountTotal = orderLevelShippingDiscountTotal;
    return this;
  }

   /**
   * Get orderLevelShippingDiscountTotal
   * @return orderLevelShippingDiscountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOrderLevelShippingDiscountTotal() {
    return orderLevelShippingDiscountTotal;
  }


  public void setOrderLevelShippingDiscountTotal(Double orderLevelShippingDiscountTotal) {
    this.orderLevelShippingDiscountTotal = orderLevelShippingDiscountTotal;
  }


  public SubscriptionRuntimeSubscription shippingAmount(Double shippingAmount) {
    
    this.shippingAmount = shippingAmount;
    return this;
  }

   /**
   * Get shippingAmount
   * @return shippingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingAmount() {
    return shippingAmount;
  }


  public void setShippingAmount(Double shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public SubscriptionRuntimeSubscription shippingAdjustment(Adjustment shippingAdjustment) {
    
    this.shippingAdjustment = shippingAdjustment;
    return this;
  }

   /**
   * Get shippingAdjustment
   * @return shippingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Adjustment getShippingAdjustment() {
    return shippingAdjustment;
  }


  public void setShippingAdjustment(Adjustment shippingAdjustment) {
    this.shippingAdjustment = shippingAdjustment;
  }


  public SubscriptionRuntimeSubscription shippingSubTotal(Double shippingSubTotal) {
    
    this.shippingSubTotal = shippingSubTotal;
    return this;
  }

   /**
   * Get shippingSubTotal
   * @return shippingSubTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingSubTotal() {
    return shippingSubTotal;
  }


  public void setShippingSubTotal(Double shippingSubTotal) {
    this.shippingSubTotal = shippingSubTotal;
  }


  public SubscriptionRuntimeSubscription shippingTax(Double shippingTax) {
    
    this.shippingTax = shippingTax;
    return this;
  }

   /**
   * Get shippingTax
   * @return shippingTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTax() {
    return shippingTax;
  }


  public void setShippingTax(Double shippingTax) {
    this.shippingTax = shippingTax;
  }


  public SubscriptionRuntimeSubscription shippingTaxTotal(Double shippingTaxTotal) {
    
    this.shippingTaxTotal = shippingTaxTotal;
    return this;
  }

   /**
   * Get shippingTaxTotal
   * @return shippingTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTaxTotal() {
    return shippingTaxTotal;
  }


  public void setShippingTaxTotal(Double shippingTaxTotal) {
    this.shippingTaxTotal = shippingTaxTotal;
  }


  public SubscriptionRuntimeSubscription shippingTotal(Double shippingTotal) {
    
    this.shippingTotal = shippingTotal;
    return this;
  }

   /**
   * Get shippingTotal
   * @return shippingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTotal() {
    return shippingTotal;
  }


  public void setShippingTotal(Double shippingTotal) {
    this.shippingTotal = shippingTotal;
  }


  public SubscriptionRuntimeSubscription handlingDiscounts(List<CommerceRuntimeAppliedDiscount> handlingDiscounts) {
    
    this.handlingDiscounts = handlingDiscounts;
    return this;
  }

  public SubscriptionRuntimeSubscription addHandlingDiscountsItem(CommerceRuntimeAppliedDiscount handlingDiscountsItem) {
    if (this.handlingDiscounts == null) {
      this.handlingDiscounts = new ArrayList<>();
    }
    this.handlingDiscounts.add(handlingDiscountsItem);
    return this;
  }

   /**
   * Get handlingDiscounts
   * @return handlingDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CommerceRuntimeAppliedDiscount> getHandlingDiscounts() {
    return handlingDiscounts;
  }


  public void setHandlingDiscounts(List<CommerceRuntimeAppliedDiscount> handlingDiscounts) {
    this.handlingDiscounts = handlingDiscounts;
  }


  public SubscriptionRuntimeSubscription itemLevelHandlingDiscountTotal(Double itemLevelHandlingDiscountTotal) {
    
    this.itemLevelHandlingDiscountTotal = itemLevelHandlingDiscountTotal;
    return this;
  }

   /**
   * Get itemLevelHandlingDiscountTotal
   * @return itemLevelHandlingDiscountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getItemLevelHandlingDiscountTotal() {
    return itemLevelHandlingDiscountTotal;
  }


  public void setItemLevelHandlingDiscountTotal(Double itemLevelHandlingDiscountTotal) {
    this.itemLevelHandlingDiscountTotal = itemLevelHandlingDiscountTotal;
  }


  public SubscriptionRuntimeSubscription orderLevelHandlingDiscountTotal(Double orderLevelHandlingDiscountTotal) {
    
    this.orderLevelHandlingDiscountTotal = orderLevelHandlingDiscountTotal;
    return this;
  }

   /**
   * Get orderLevelHandlingDiscountTotal
   * @return orderLevelHandlingDiscountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOrderLevelHandlingDiscountTotal() {
    return orderLevelHandlingDiscountTotal;
  }


  public void setOrderLevelHandlingDiscountTotal(Double orderLevelHandlingDiscountTotal) {
    this.orderLevelHandlingDiscountTotal = orderLevelHandlingDiscountTotal;
  }


  public SubscriptionRuntimeSubscription handlingAmount(Double handlingAmount) {
    
    this.handlingAmount = handlingAmount;
    return this;
  }

   /**
   * Get handlingAmount
   * @return handlingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingAmount() {
    return handlingAmount;
  }


  public void setHandlingAmount(Double handlingAmount) {
    this.handlingAmount = handlingAmount;
  }


  public SubscriptionRuntimeSubscription handlingAdjustment(Adjustment handlingAdjustment) {
    
    this.handlingAdjustment = handlingAdjustment;
    return this;
  }

   /**
   * Get handlingAdjustment
   * @return handlingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Adjustment getHandlingAdjustment() {
    return handlingAdjustment;
  }


  public void setHandlingAdjustment(Adjustment handlingAdjustment) {
    this.handlingAdjustment = handlingAdjustment;
  }


  public SubscriptionRuntimeSubscription handlingSubTotal(Double handlingSubTotal) {
    
    this.handlingSubTotal = handlingSubTotal;
    return this;
  }

   /**
   * Get handlingSubTotal
   * @return handlingSubTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingSubTotal() {
    return handlingSubTotal;
  }


  public void setHandlingSubTotal(Double handlingSubTotal) {
    this.handlingSubTotal = handlingSubTotal;
  }


  public SubscriptionRuntimeSubscription handlingTax(Double handlingTax) {
    
    this.handlingTax = handlingTax;
    return this;
  }

   /**
   * Get handlingTax
   * @return handlingTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTax() {
    return handlingTax;
  }


  public void setHandlingTax(Double handlingTax) {
    this.handlingTax = handlingTax;
  }


  public SubscriptionRuntimeSubscription handlingTaxTotal(Double handlingTaxTotal) {
    
    this.handlingTaxTotal = handlingTaxTotal;
    return this;
  }

   /**
   * Get handlingTaxTotal
   * @return handlingTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTaxTotal() {
    return handlingTaxTotal;
  }


  public void setHandlingTaxTotal(Double handlingTaxTotal) {
    this.handlingTaxTotal = handlingTaxTotal;
  }


  public SubscriptionRuntimeSubscription handlingTotal(Double handlingTotal) {
    
    this.handlingTotal = handlingTotal;
    return this;
  }

   /**
   * Get handlingTotal
   * @return handlingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTotal() {
    return handlingTotal;
  }


  public void setHandlingTotal(Double handlingTotal) {
    this.handlingTotal = handlingTotal;
  }


  public SubscriptionRuntimeSubscription dutyAmount(Double dutyAmount) {
    
    this.dutyAmount = dutyAmount;
    return this;
  }

   /**
   * Get dutyAmount
   * @return dutyAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDutyAmount() {
    return dutyAmount;
  }


  public void setDutyAmount(Double dutyAmount) {
    this.dutyAmount = dutyAmount;
  }


  public SubscriptionRuntimeSubscription dutyTotal(Double dutyTotal) {
    
    this.dutyTotal = dutyTotal;
    return this;
  }

   /**
   * Get dutyTotal
   * @return dutyTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDutyTotal() {
    return dutyTotal;
  }


  public void setDutyTotal(Double dutyTotal) {
    this.dutyTotal = dutyTotal;
  }


  public SubscriptionRuntimeSubscription feeTotal(Double feeTotal) {
    
    this.feeTotal = feeTotal;
    return this;
  }

   /**
   * Get feeTotal
   * @return feeTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getFeeTotal() {
    return feeTotal;
  }


  public void setFeeTotal(Double feeTotal) {
    this.feeTotal = feeTotal;
  }


  public SubscriptionRuntimeSubscription status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public SubscriptionRuntimeSubscription reasons(List<SubscriptionReason> reasons) {
    
    this.reasons = reasons;
    return this;
  }

  public SubscriptionRuntimeSubscription addReasonsItem(SubscriptionReason reasonsItem) {
    if (this.reasons == null) {
      this.reasons = new ArrayList<>();
    }
    this.reasons.add(reasonsItem);
    return this;
  }

   /**
   * Get reasons
   * @return reasons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SubscriptionReason> getReasons() {
    return reasons;
  }


  public void setReasons(List<SubscriptionReason> reasons) {
    this.reasons = reasons;
  }


  public SubscriptionRuntimeSubscription couponCodes(List<String> couponCodes) {
    
    this.couponCodes = couponCodes;
    return this;
  }

  public SubscriptionRuntimeSubscription addCouponCodesItem(String couponCodesItem) {
    if (this.couponCodes == null) {
      this.couponCodes = new ArrayList<>();
    }
    this.couponCodes.add(couponCodesItem);
    return this;
  }

   /**
   * Coupon codes associated with this Subscription.
   * @return couponCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Coupon codes associated with this Subscription.")

  public List<String> getCouponCodes() {
    return couponCodes;
  }


  public void setCouponCodes(List<String> couponCodes) {
    this.couponCodes = couponCodes;
  }


  public SubscriptionRuntimeSubscription invalidCoupons(List<InvalidCoupon> invalidCoupons) {
    
    this.invalidCoupons = invalidCoupons;
    return this;
  }

  public SubscriptionRuntimeSubscription addInvalidCouponsItem(InvalidCoupon invalidCouponsItem) {
    if (this.invalidCoupons == null) {
      this.invalidCoupons = new ArrayList<>();
    }
    this.invalidCoupons.add(invalidCouponsItem);
    return this;
  }

   /**
   * A list of invalid coupons that were attempted on the Subscription
   * @return invalidCoupons
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of invalid coupons that were attempted on the Subscription")

  public List<InvalidCoupon> getInvalidCoupons() {
    return invalidCoupons;
  }


  public void setInvalidCoupons(List<InvalidCoupon> invalidCoupons) {
    this.invalidCoupons = invalidCoupons;
  }


  public SubscriptionRuntimeSubscription isImport(Boolean isImport) {
    
    this.isImport = isImport;
    return this;
  }

   /**
   * Get isImport
   * @return isImport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsImport() {
    return isImport;
  }


  public void setIsImport(Boolean isImport) {
    this.isImport = isImport;
  }


  public SubscriptionRuntimeSubscription externalId(String externalId) {
    
    this.externalId = externalId;
    return this;
  }

   /**
   * Get externalId
   * @return externalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExternalId() {
    return externalId;
  }


  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public SubscriptionRuntimeSubscription lineItemSubtotalWithOrderAdjustments(Double lineItemSubtotalWithOrderAdjustments) {
    
    this.lineItemSubtotalWithOrderAdjustments = lineItemSubtotalWithOrderAdjustments;
    return this;
  }

   /**
   * Line Item Subtotals with Order Adjustments
   * @return lineItemSubtotalWithOrderAdjustments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line Item Subtotals with Order Adjustments")

  public Double getLineItemSubtotalWithOrderAdjustments() {
    return lineItemSubtotalWithOrderAdjustments;
  }


  public void setLineItemSubtotalWithOrderAdjustments(Double lineItemSubtotalWithOrderAdjustments) {
    this.lineItemSubtotalWithOrderAdjustments = lineItemSubtotalWithOrderAdjustments;
  }


  public SubscriptionRuntimeSubscription discountedSubtotal(Double discountedSubtotal) {
    
    this.discountedSubtotal = discountedSubtotal;
    return this;
  }

   /**
   * Discounted Subtotal
   * @return discountedSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Discounted Subtotal")

  public Double getDiscountedSubtotal() {
    return discountedSubtotal;
  }


  public void setDiscountedSubtotal(Double discountedSubtotal) {
    this.discountedSubtotal = discountedSubtotal;
  }


  public SubscriptionRuntimeSubscription onetimeProducts(List<OnetimeProduct> onetimeProducts) {
    
    this.onetimeProducts = onetimeProducts;
    return this;
  }

  public SubscriptionRuntimeSubscription addOnetimeProductsItem(OnetimeProduct onetimeProductsItem) {
    if (this.onetimeProducts == null) {
      this.onetimeProducts = new ArrayList<>();
    }
    this.onetimeProducts.add(onetimeProductsItem);
    return this;
  }

   /**
   * Get onetimeProducts
   * @return onetimeProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OnetimeProduct> getOnetimeProducts() {
    return onetimeProducts;
  }


  public void setOnetimeProducts(List<OnetimeProduct> onetimeProducts) {
    this.onetimeProducts = onetimeProducts;
  }


  public SubscriptionRuntimeSubscription onetimeShippingMethod(OnetimeShippingMethod onetimeShippingMethod) {
    
    this.onetimeShippingMethod = onetimeShippingMethod;
    return this;
  }

   /**
   * Get onetimeShippingMethod
   * @return onetimeShippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OnetimeShippingMethod getOnetimeShippingMethod() {
    return onetimeShippingMethod;
  }


  public void setOnetimeShippingMethod(OnetimeShippingMethod onetimeShippingMethod) {
    this.onetimeShippingMethod = onetimeShippingMethod;
  }


  public SubscriptionRuntimeSubscription nextOrderDateOffsetCounter(Integer nextOrderDateOffsetCounter) {
    
    this.nextOrderDateOffsetCounter = nextOrderDateOffsetCounter;
    return this;
  }

   /**
   * counter to keep track of nextOrderDate limit.
   * @return nextOrderDateOffsetCounter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "counter to keep track of nextOrderDate limit.")

  public Integer getNextOrderDateOffsetCounter() {
    return nextOrderDateOffsetCounter;
  }


  public void setNextOrderDateOffsetCounter(Integer nextOrderDateOffsetCounter) {
    this.nextOrderDateOffsetCounter = nextOrderDateOffsetCounter;
  }


  public SubscriptionRuntimeSubscription subscriptionSkipCounter(Integer subscriptionSkipCounter) {
    
    this.subscriptionSkipCounter = subscriptionSkipCounter;
    return this;
  }

   /**
   * counter to keep track of skip limit
   * @return subscriptionSkipCounter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "counter to keep track of skip limit")

  public Integer getSubscriptionSkipCounter() {
    return subscriptionSkipCounter;
  }


  public void setSubscriptionSkipCounter(Integer subscriptionSkipCounter) {
    this.subscriptionSkipCounter = subscriptionSkipCounter;
  }


  public SubscriptionRuntimeSubscription isDraft(Boolean isDraft) {
    
    this.isDraft = isDraft;
    return this;
  }

   /**
   * Is this subscription a draft version
   * @return isDraft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is this subscription a draft version")

  public Boolean getIsDraft() {
    return isDraft;
  }


  public void setIsDraft(Boolean isDraft) {
    this.isDraft = isDraft;
  }


  public SubscriptionRuntimeSubscription hasDraft(Boolean hasDraft) {
    
    this.hasDraft = hasDraft;
    return this;
  }

   /**
   * Does this subscription have a draft version.
   * @return hasDraft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Does this subscription have a draft version.")

  public Boolean getHasDraft() {
    return hasDraft;
  }


  public void setHasDraft(Boolean hasDraft) {
    this.hasDraft = hasDraft;
  }


  public SubscriptionRuntimeSubscription isPartialDraft(Boolean isPartialDraft) {
    
    this.isPartialDraft = isPartialDraft;
    return this;
  }

   /**
   * Is this subscription draft is a partial draft.
   * @return isPartialDraft
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is this subscription draft is a partial draft.")

  public Boolean getIsPartialDraft() {
    return isPartialDraft;
  }


  public void setIsPartialDraft(Boolean isPartialDraft) {
    this.isPartialDraft = isPartialDraft;
  }


  public SubscriptionRuntimeSubscription isOrderReminderEmailSent(Boolean isOrderReminderEmailSent) {
    
    this.isOrderReminderEmailSent = isOrderReminderEmailSent;
    return this;
  }

   /**
   * Has order reminder email sent.
   * @return isOrderReminderEmailSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Has order reminder email sent.")

  public Boolean getIsOrderReminderEmailSent() {
    return isOrderReminderEmailSent;
  }


  public void setIsOrderReminderEmailSent(Boolean isOrderReminderEmailSent) {
    this.isOrderReminderEmailSent = isOrderReminderEmailSent;
  }


  public SubscriptionRuntimeSubscription isReactivationReminderEmailSent(Boolean isReactivationReminderEmailSent) {
    
    this.isReactivationReminderEmailSent = isReactivationReminderEmailSent;
    return this;
  }

   /**
   * Has reactivation reminder email sent.
   * @return isReactivationReminderEmailSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Has reactivation reminder email sent.")

  public Boolean getIsReactivationReminderEmailSent() {
    return isReactivationReminderEmailSent;
  }


  public void setIsReactivationReminderEmailSent(Boolean isReactivationReminderEmailSent) {
    this.isReactivationReminderEmailSent = isReactivationReminderEmailSent;
  }


  public SubscriptionRuntimeSubscription reactivationDate(OffsetDateTime reactivationDate) {
    
    this.reactivationDate = reactivationDate;
    return this;
  }

   /**
   * This property is being used for reactivation email templete
   * @return reactivationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "This property is being used for reactivation email templete")

  public OffsetDateTime getReactivationDate() {
    return reactivationDate;
  }


  public void setReactivationDate(OffsetDateTime reactivationDate) {
    this.reactivationDate = reactivationDate;
  }


  public SubscriptionRuntimeSubscription subscriptionPauseDate(OffsetDateTime subscriptionPauseDate) {
    
    this.subscriptionPauseDate = subscriptionPauseDate;
    return this;
  }

   /**
   * Get subscriptionPauseDate
   * @return subscriptionPauseDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getSubscriptionPauseDate() {
    return subscriptionPauseDate;
  }


  public void setSubscriptionPauseDate(OffsetDateTime subscriptionPauseDate) {
    this.subscriptionPauseDate = subscriptionPauseDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubscriptionRuntimeSubscription subscriptionRuntimeSubscription = (SubscriptionRuntimeSubscription) o;
    return Objects.equals(this.id, subscriptionRuntimeSubscription.id) &&
        Objects.equals(this.siteId, subscriptionRuntimeSubscription.siteId) &&
        Objects.equals(this.tenantId, subscriptionRuntimeSubscription.tenantId) &&
        Objects.equals(this.number, subscriptionRuntimeSubscription.number) &&
        Objects.equals(this.parentOrderId, subscriptionRuntimeSubscription.parentOrderId) &&
        Objects.equals(this.items, subscriptionRuntimeSubscription.items) &&
        Objects.equals(this.payment, subscriptionRuntimeSubscription.payment) &&
        Objects.equals(this.priceListCode, subscriptionRuntimeSubscription.priceListCode) &&
        Objects.equals(this.notes, subscriptionRuntimeSubscription.notes) &&
        Objects.equals(this.oneTimeCouponCodes, subscriptionRuntimeSubscription.oneTimeCouponCodes) &&
        Objects.equals(this.changeMessages, subscriptionRuntimeSubscription.changeMessages) &&
        Objects.equals(this.auditInfo, subscriptionRuntimeSubscription.auditInfo) &&
        Objects.equals(this.fulfillmentInfo, subscriptionRuntimeSubscription.fulfillmentInfo) &&
        Objects.equals(this.userId, subscriptionRuntimeSubscription.userId) &&
        Objects.equals(this.customerAccountId, subscriptionRuntimeSubscription.customerAccountId) &&
        Objects.equals(this.email, subscriptionRuntimeSubscription.email) &&
        Objects.equals(this.customerTaxId, subscriptionRuntimeSubscription.customerTaxId) &&
        Objects.equals(this.isTaxExempt, subscriptionRuntimeSubscription.isTaxExempt) &&
        Objects.equals(this.currencyCode, subscriptionRuntimeSubscription.currencyCode) &&
        Objects.equals(this.data, subscriptionRuntimeSubscription.data) &&
        Objects.equals(this.taxData, subscriptionRuntimeSubscription.taxData) &&
        Objects.equals(this.channelCode, subscriptionRuntimeSubscription.channelCode) &&
        Objects.equals(this.locationCode, subscriptionRuntimeSubscription.locationCode) &&
        Objects.equals(this.ipAddress, subscriptionRuntimeSubscription.ipAddress) &&
        Objects.equals(this.sourceDevice, subscriptionRuntimeSubscription.sourceDevice) &&
        Objects.equals(this.visitId, subscriptionRuntimeSubscription.visitId) &&
        Objects.equals(this.webSessionId, subscriptionRuntimeSubscription.webSessionId) &&
        Objects.equals(this.customerInteractionType, subscriptionRuntimeSubscription.customerInteractionType) &&
        Objects.equals(this.frequency, subscriptionRuntimeSubscription.frequency) &&
        Objects.equals(this.previousFrequency, subscriptionRuntimeSubscription.previousFrequency) &&
        Objects.equals(this.frequencyAuditInfo, subscriptionRuntimeSubscription.frequencyAuditInfo) &&
        Objects.equals(this.nextOrderDate, subscriptionRuntimeSubscription.nextOrderDate) &&
        Objects.equals(this.previousNextOrderDate, subscriptionRuntimeSubscription.previousNextOrderDate) &&
        Objects.equals(this.nextOrderDateAuditInfo, subscriptionRuntimeSubscription.nextOrderDateAuditInfo) &&
        Objects.equals(this.lastContinuityOrderDateOnSubPaused, subscriptionRuntimeSubscription.lastContinuityOrderDateOnSubPaused) &&
        Objects.equals(this.ordinal, subscriptionRuntimeSubscription.ordinal) &&
        Objects.equals(this.paymentErrorCode, subscriptionRuntimeSubscription.paymentErrorCode) &&
        Objects.equals(this.trial, subscriptionRuntimeSubscription.trial) &&
        Objects.equals(this.orderDiscounts, subscriptionRuntimeSubscription.orderDiscounts) &&
        Objects.equals(this.subTotal, subscriptionRuntimeSubscription.subTotal) &&
        Objects.equals(this.itemLevelProductDiscountTotal, subscriptionRuntimeSubscription.itemLevelProductDiscountTotal) &&
        Objects.equals(this.itemLevelAdjustmentsTotal, subscriptionRuntimeSubscription.itemLevelAdjustmentsTotal) &&
        Objects.equals(this.orderLevelProductDiscountTotal, subscriptionRuntimeSubscription.orderLevelProductDiscountTotal) &&
        Objects.equals(this.itemTaxTotal, subscriptionRuntimeSubscription.itemTaxTotal) &&
        Objects.equals(this.adjustment, subscriptionRuntimeSubscription.adjustment) &&
        Objects.equals(this.itemTotal, subscriptionRuntimeSubscription.itemTotal) &&
        Objects.equals(this.total, subscriptionRuntimeSubscription.total) &&
        Objects.equals(this.shippingDiscounts, subscriptionRuntimeSubscription.shippingDiscounts) &&
        Objects.equals(this.itemLevelShippingDiscountTotal, subscriptionRuntimeSubscription.itemLevelShippingDiscountTotal) &&
        Objects.equals(this.orderLevelShippingDiscountTotal, subscriptionRuntimeSubscription.orderLevelShippingDiscountTotal) &&
        Objects.equals(this.shippingAmount, subscriptionRuntimeSubscription.shippingAmount) &&
        Objects.equals(this.shippingAdjustment, subscriptionRuntimeSubscription.shippingAdjustment) &&
        Objects.equals(this.shippingSubTotal, subscriptionRuntimeSubscription.shippingSubTotal) &&
        Objects.equals(this.shippingTax, subscriptionRuntimeSubscription.shippingTax) &&
        Objects.equals(this.shippingTaxTotal, subscriptionRuntimeSubscription.shippingTaxTotal) &&
        Objects.equals(this.shippingTotal, subscriptionRuntimeSubscription.shippingTotal) &&
        Objects.equals(this.handlingDiscounts, subscriptionRuntimeSubscription.handlingDiscounts) &&
        Objects.equals(this.itemLevelHandlingDiscountTotal, subscriptionRuntimeSubscription.itemLevelHandlingDiscountTotal) &&
        Objects.equals(this.orderLevelHandlingDiscountTotal, subscriptionRuntimeSubscription.orderLevelHandlingDiscountTotal) &&
        Objects.equals(this.handlingAmount, subscriptionRuntimeSubscription.handlingAmount) &&
        Objects.equals(this.handlingAdjustment, subscriptionRuntimeSubscription.handlingAdjustment) &&
        Objects.equals(this.handlingSubTotal, subscriptionRuntimeSubscription.handlingSubTotal) &&
        Objects.equals(this.handlingTax, subscriptionRuntimeSubscription.handlingTax) &&
        Objects.equals(this.handlingTaxTotal, subscriptionRuntimeSubscription.handlingTaxTotal) &&
        Objects.equals(this.handlingTotal, subscriptionRuntimeSubscription.handlingTotal) &&
        Objects.equals(this.dutyAmount, subscriptionRuntimeSubscription.dutyAmount) &&
        Objects.equals(this.dutyTotal, subscriptionRuntimeSubscription.dutyTotal) &&
        Objects.equals(this.feeTotal, subscriptionRuntimeSubscription.feeTotal) &&
        Objects.equals(this.status, subscriptionRuntimeSubscription.status) &&
        Objects.equals(this.reasons, subscriptionRuntimeSubscription.reasons) &&
        Objects.equals(this.couponCodes, subscriptionRuntimeSubscription.couponCodes) &&
        Objects.equals(this.invalidCoupons, subscriptionRuntimeSubscription.invalidCoupons) &&
        Objects.equals(this.isImport, subscriptionRuntimeSubscription.isImport) &&
        Objects.equals(this.externalId, subscriptionRuntimeSubscription.externalId) &&
        Objects.equals(this.lineItemSubtotalWithOrderAdjustments, subscriptionRuntimeSubscription.lineItemSubtotalWithOrderAdjustments) &&
        Objects.equals(this.discountedSubtotal, subscriptionRuntimeSubscription.discountedSubtotal) &&
        Objects.equals(this.onetimeProducts, subscriptionRuntimeSubscription.onetimeProducts) &&
        Objects.equals(this.onetimeShippingMethod, subscriptionRuntimeSubscription.onetimeShippingMethod) &&
        Objects.equals(this.nextOrderDateOffsetCounter, subscriptionRuntimeSubscription.nextOrderDateOffsetCounter) &&
        Objects.equals(this.subscriptionSkipCounter, subscriptionRuntimeSubscription.subscriptionSkipCounter) &&
        Objects.equals(this.isDraft, subscriptionRuntimeSubscription.isDraft) &&
        Objects.equals(this.hasDraft, subscriptionRuntimeSubscription.hasDraft) &&
        Objects.equals(this.isPartialDraft, subscriptionRuntimeSubscription.isPartialDraft) &&
        Objects.equals(this.isOrderReminderEmailSent, subscriptionRuntimeSubscription.isOrderReminderEmailSent) &&
        Objects.equals(this.isReactivationReminderEmailSent, subscriptionRuntimeSubscription.isReactivationReminderEmailSent) &&
        Objects.equals(this.reactivationDate, subscriptionRuntimeSubscription.reactivationDate) &&
        Objects.equals(this.subscriptionPauseDate, subscriptionRuntimeSubscription.subscriptionPauseDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, siteId, tenantId, number, parentOrderId, items, payment, priceListCode, notes, oneTimeCouponCodes, changeMessages, auditInfo, fulfillmentInfo, userId, customerAccountId, email, customerTaxId, isTaxExempt, currencyCode, data, taxData, channelCode, locationCode, ipAddress, sourceDevice, visitId, webSessionId, customerInteractionType, frequency, previousFrequency, frequencyAuditInfo, nextOrderDate, previousNextOrderDate, nextOrderDateAuditInfo, lastContinuityOrderDateOnSubPaused, ordinal, paymentErrorCode, trial, orderDiscounts, subTotal, itemLevelProductDiscountTotal, itemLevelAdjustmentsTotal, orderLevelProductDiscountTotal, itemTaxTotal, adjustment, itemTotal, total, shippingDiscounts, itemLevelShippingDiscountTotal, orderLevelShippingDiscountTotal, shippingAmount, shippingAdjustment, shippingSubTotal, shippingTax, shippingTaxTotal, shippingTotal, handlingDiscounts, itemLevelHandlingDiscountTotal, orderLevelHandlingDiscountTotal, handlingAmount, handlingAdjustment, handlingSubTotal, handlingTax, handlingTaxTotal, handlingTotal, dutyAmount, dutyTotal, feeTotal, status, reasons, couponCodes, invalidCoupons, isImport, externalId, lineItemSubtotalWithOrderAdjustments, discountedSubtotal, onetimeProducts, onetimeShippingMethod, nextOrderDateOffsetCounter, subscriptionSkipCounter, isDraft, hasDraft, isPartialDraft, isOrderReminderEmailSent, isReactivationReminderEmailSent, reactivationDate, subscriptionPauseDate);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubscriptionRuntimeSubscription {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    parentOrderId: ").append(toIndentedString(parentOrderId)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    payment: ").append(toIndentedString(payment)).append("\n");
    sb.append("    priceListCode: ").append(toIndentedString(priceListCode)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    oneTimeCouponCodes: ").append(toIndentedString(oneTimeCouponCodes)).append("\n");
    sb.append("    changeMessages: ").append(toIndentedString(changeMessages)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    fulfillmentInfo: ").append(toIndentedString(fulfillmentInfo)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    customerAccountId: ").append(toIndentedString(customerAccountId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    customerTaxId: ").append(toIndentedString(customerTaxId)).append("\n");
    sb.append("    isTaxExempt: ").append(toIndentedString(isTaxExempt)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    taxData: ").append(toIndentedString(taxData)).append("\n");
    sb.append("    channelCode: ").append(toIndentedString(channelCode)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    sourceDevice: ").append(toIndentedString(sourceDevice)).append("\n");
    sb.append("    visitId: ").append(toIndentedString(visitId)).append("\n");
    sb.append("    webSessionId: ").append(toIndentedString(webSessionId)).append("\n");
    sb.append("    customerInteractionType: ").append(toIndentedString(customerInteractionType)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    previousFrequency: ").append(toIndentedString(previousFrequency)).append("\n");
    sb.append("    frequencyAuditInfo: ").append(toIndentedString(frequencyAuditInfo)).append("\n");
    sb.append("    nextOrderDate: ").append(toIndentedString(nextOrderDate)).append("\n");
    sb.append("    previousNextOrderDate: ").append(toIndentedString(previousNextOrderDate)).append("\n");
    sb.append("    nextOrderDateAuditInfo: ").append(toIndentedString(nextOrderDateAuditInfo)).append("\n");
    sb.append("    lastContinuityOrderDateOnSubPaused: ").append(toIndentedString(lastContinuityOrderDateOnSubPaused)).append("\n");
    sb.append("    ordinal: ").append(toIndentedString(ordinal)).append("\n");
    sb.append("    paymentErrorCode: ").append(toIndentedString(paymentErrorCode)).append("\n");
    sb.append("    trial: ").append(toIndentedString(trial)).append("\n");
    sb.append("    orderDiscounts: ").append(toIndentedString(orderDiscounts)).append("\n");
    sb.append("    subTotal: ").append(toIndentedString(subTotal)).append("\n");
    sb.append("    itemLevelProductDiscountTotal: ").append(toIndentedString(itemLevelProductDiscountTotal)).append("\n");
    sb.append("    itemLevelAdjustmentsTotal: ").append(toIndentedString(itemLevelAdjustmentsTotal)).append("\n");
    sb.append("    orderLevelProductDiscountTotal: ").append(toIndentedString(orderLevelProductDiscountTotal)).append("\n");
    sb.append("    itemTaxTotal: ").append(toIndentedString(itemTaxTotal)).append("\n");
    sb.append("    adjustment: ").append(toIndentedString(adjustment)).append("\n");
    sb.append("    itemTotal: ").append(toIndentedString(itemTotal)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    shippingDiscounts: ").append(toIndentedString(shippingDiscounts)).append("\n");
    sb.append("    itemLevelShippingDiscountTotal: ").append(toIndentedString(itemLevelShippingDiscountTotal)).append("\n");
    sb.append("    orderLevelShippingDiscountTotal: ").append(toIndentedString(orderLevelShippingDiscountTotal)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    shippingAdjustment: ").append(toIndentedString(shippingAdjustment)).append("\n");
    sb.append("    shippingSubTotal: ").append(toIndentedString(shippingSubTotal)).append("\n");
    sb.append("    shippingTax: ").append(toIndentedString(shippingTax)).append("\n");
    sb.append("    shippingTaxTotal: ").append(toIndentedString(shippingTaxTotal)).append("\n");
    sb.append("    shippingTotal: ").append(toIndentedString(shippingTotal)).append("\n");
    sb.append("    handlingDiscounts: ").append(toIndentedString(handlingDiscounts)).append("\n");
    sb.append("    itemLevelHandlingDiscountTotal: ").append(toIndentedString(itemLevelHandlingDiscountTotal)).append("\n");
    sb.append("    orderLevelHandlingDiscountTotal: ").append(toIndentedString(orderLevelHandlingDiscountTotal)).append("\n");
    sb.append("    handlingAmount: ").append(toIndentedString(handlingAmount)).append("\n");
    sb.append("    handlingAdjustment: ").append(toIndentedString(handlingAdjustment)).append("\n");
    sb.append("    handlingSubTotal: ").append(toIndentedString(handlingSubTotal)).append("\n");
    sb.append("    handlingTax: ").append(toIndentedString(handlingTax)).append("\n");
    sb.append("    handlingTaxTotal: ").append(toIndentedString(handlingTaxTotal)).append("\n");
    sb.append("    handlingTotal: ").append(toIndentedString(handlingTotal)).append("\n");
    sb.append("    dutyAmount: ").append(toIndentedString(dutyAmount)).append("\n");
    sb.append("    dutyTotal: ").append(toIndentedString(dutyTotal)).append("\n");
    sb.append("    feeTotal: ").append(toIndentedString(feeTotal)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    reasons: ").append(toIndentedString(reasons)).append("\n");
    sb.append("    couponCodes: ").append(toIndentedString(couponCodes)).append("\n");
    sb.append("    invalidCoupons: ").append(toIndentedString(invalidCoupons)).append("\n");
    sb.append("    isImport: ").append(toIndentedString(isImport)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    lineItemSubtotalWithOrderAdjustments: ").append(toIndentedString(lineItemSubtotalWithOrderAdjustments)).append("\n");
    sb.append("    discountedSubtotal: ").append(toIndentedString(discountedSubtotal)).append("\n");
    sb.append("    onetimeProducts: ").append(toIndentedString(onetimeProducts)).append("\n");
    sb.append("    onetimeShippingMethod: ").append(toIndentedString(onetimeShippingMethod)).append("\n");
    sb.append("    nextOrderDateOffsetCounter: ").append(toIndentedString(nextOrderDateOffsetCounter)).append("\n");
    sb.append("    subscriptionSkipCounter: ").append(toIndentedString(subscriptionSkipCounter)).append("\n");
    sb.append("    isDraft: ").append(toIndentedString(isDraft)).append("\n");
    sb.append("    hasDraft: ").append(toIndentedString(hasDraft)).append("\n");
    sb.append("    isPartialDraft: ").append(toIndentedString(isPartialDraft)).append("\n");
    sb.append("    isOrderReminderEmailSent: ").append(toIndentedString(isOrderReminderEmailSent)).append("\n");
    sb.append("    isReactivationReminderEmailSent: ").append(toIndentedString(isReactivationReminderEmailSent)).append("\n");
    sb.append("    reactivationDate: ").append(toIndentedString(reactivationDate)).append("\n");
    sb.append("    subscriptionPauseDate: ").append(toIndentedString(subscriptionPauseDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("siteId");
    openapiFields.add("tenantId");
    openapiFields.add("number");
    openapiFields.add("parentOrderId");
    openapiFields.add("items");
    openapiFields.add("payment");
    openapiFields.add("priceListCode");
    openapiFields.add("notes");
    openapiFields.add("oneTimeCouponCodes");
    openapiFields.add("changeMessages");
    openapiFields.add("auditInfo");
    openapiFields.add("fulfillmentInfo");
    openapiFields.add("userId");
    openapiFields.add("customerAccountId");
    openapiFields.add("email");
    openapiFields.add("customerTaxId");
    openapiFields.add("isTaxExempt");
    openapiFields.add("currencyCode");
    openapiFields.add("data");
    openapiFields.add("taxData");
    openapiFields.add("channelCode");
    openapiFields.add("locationCode");
    openapiFields.add("ipAddress");
    openapiFields.add("sourceDevice");
    openapiFields.add("visitId");
    openapiFields.add("webSessionId");
    openapiFields.add("customerInteractionType");
    openapiFields.add("frequency");
    openapiFields.add("previousFrequency");
    openapiFields.add("frequencyAuditInfo");
    openapiFields.add("nextOrderDate");
    openapiFields.add("previousNextOrderDate");
    openapiFields.add("nextOrderDateAuditInfo");
    openapiFields.add("lastContinuityOrderDateOnSubPaused");
    openapiFields.add("ordinal");
    openapiFields.add("paymentErrorCode");
    openapiFields.add("trial");
    openapiFields.add("orderDiscounts");
    openapiFields.add("subTotal");
    openapiFields.add("itemLevelProductDiscountTotal");
    openapiFields.add("itemLevelAdjustmentsTotal");
    openapiFields.add("orderLevelProductDiscountTotal");
    openapiFields.add("itemTaxTotal");
    openapiFields.add("adjustment");
    openapiFields.add("itemTotal");
    openapiFields.add("total");
    openapiFields.add("shippingDiscounts");
    openapiFields.add("itemLevelShippingDiscountTotal");
    openapiFields.add("orderLevelShippingDiscountTotal");
    openapiFields.add("shippingAmount");
    openapiFields.add("shippingAdjustment");
    openapiFields.add("shippingSubTotal");
    openapiFields.add("shippingTax");
    openapiFields.add("shippingTaxTotal");
    openapiFields.add("shippingTotal");
    openapiFields.add("handlingDiscounts");
    openapiFields.add("itemLevelHandlingDiscountTotal");
    openapiFields.add("orderLevelHandlingDiscountTotal");
    openapiFields.add("handlingAmount");
    openapiFields.add("handlingAdjustment");
    openapiFields.add("handlingSubTotal");
    openapiFields.add("handlingTax");
    openapiFields.add("handlingTaxTotal");
    openapiFields.add("handlingTotal");
    openapiFields.add("dutyAmount");
    openapiFields.add("dutyTotal");
    openapiFields.add("feeTotal");
    openapiFields.add("status");
    openapiFields.add("reasons");
    openapiFields.add("couponCodes");
    openapiFields.add("invalidCoupons");
    openapiFields.add("isImport");
    openapiFields.add("externalId");
    openapiFields.add("lineItemSubtotalWithOrderAdjustments");
    openapiFields.add("discountedSubtotal");
    openapiFields.add("onetimeProducts");
    openapiFields.add("onetimeShippingMethod");
    openapiFields.add("nextOrderDateOffsetCounter");
    openapiFields.add("subscriptionSkipCounter");
    openapiFields.add("isDraft");
    openapiFields.add("hasDraft");
    openapiFields.add("isPartialDraft");
    openapiFields.add("isOrderReminderEmailSent");
    openapiFields.add("isReactivationReminderEmailSent");
    openapiFields.add("reactivationDate");
    openapiFields.add("subscriptionPauseDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SubscriptionRuntimeSubscription
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SubscriptionRuntimeSubscription.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubscriptionRuntimeSubscription is not found in the empty JSON string", SubscriptionRuntimeSubscription.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!SubscriptionRuntimeSubscription.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SubscriptionRuntimeSubscription` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("parentOrderId") != null && !jsonObj.get("parentOrderId").isJsonNull()) && !jsonObj.get("parentOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentOrderId").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            SubscriptionItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `payment`
      if (jsonObj.get("payment") != null && !jsonObj.get("payment").isJsonNull()) {
        Payment.validateJsonObject(jsonObj.getAsJsonObject("payment"));
      }
      if ((jsonObj.get("priceListCode") != null && !jsonObj.get("priceListCode").isJsonNull()) && !jsonObj.get("priceListCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceListCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceListCode").toString()));
      }
      if (jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) {
        JsonArray jsonArraynotes = jsonObj.getAsJsonArray("notes");
        if (jsonArraynotes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("notes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `notes` to be an array in the JSON string but got `%s`", jsonObj.get("notes").toString()));
          }

          // validate the optional field `notes` (array)
          for (int i = 0; i < jsonArraynotes.size(); i++) {
            OrderNote.validateJsonObject(jsonArraynotes.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("oneTimeCouponCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `oneTimeCouponCodes` to be an array in the JSON string but got `%s`", jsonObj.get("oneTimeCouponCodes").toString()));
      }
      if (jsonObj.get("changeMessages") != null && !jsonObj.get("changeMessages").isJsonNull()) {
        JsonArray jsonArraychangeMessages = jsonObj.getAsJsonArray("changeMessages");
        if (jsonArraychangeMessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("changeMessages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `changeMessages` to be an array in the JSON string but got `%s`", jsonObj.get("changeMessages").toString()));
          }

          // validate the optional field `changeMessages` (array)
          for (int i = 0; i < jsonArraychangeMessages.size(); i++) {
            CommerceRuntimeChangeMessage.validateJsonObject(jsonArraychangeMessages.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      // validate the optional field `fulfillmentInfo`
      if (jsonObj.get("fulfillmentInfo") != null && !jsonObj.get("fulfillmentInfo").isJsonNull()) {
        FulfillmentInfo.validateJsonObject(jsonObj.getAsJsonObject("fulfillmentInfo"));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("customerTaxId") != null && !jsonObj.get("customerTaxId").isJsonNull()) && !jsonObj.get("customerTaxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerTaxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerTaxId").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("channelCode") != null && !jsonObj.get("channelCode").isJsonNull()) && !jsonObj.get("channelCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channelCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channelCode").toString()));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if ((jsonObj.get("ipAddress") != null && !jsonObj.get("ipAddress").isJsonNull()) && !jsonObj.get("ipAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ipAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ipAddress").toString()));
      }
      if ((jsonObj.get("sourceDevice") != null && !jsonObj.get("sourceDevice").isJsonNull()) && !jsonObj.get("sourceDevice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceDevice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceDevice").toString()));
      }
      if ((jsonObj.get("visitId") != null && !jsonObj.get("visitId").isJsonNull()) && !jsonObj.get("visitId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitId").toString()));
      }
      if ((jsonObj.get("webSessionId") != null && !jsonObj.get("webSessionId").isJsonNull()) && !jsonObj.get("webSessionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webSessionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webSessionId").toString()));
      }
      if ((jsonObj.get("customerInteractionType") != null && !jsonObj.get("customerInteractionType").isJsonNull()) && !jsonObj.get("customerInteractionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerInteractionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerInteractionType").toString()));
      }
      // validate the optional field `frequency`
      if (jsonObj.get("frequency") != null && !jsonObj.get("frequency").isJsonNull()) {
        Frequency.validateJsonObject(jsonObj.getAsJsonObject("frequency"));
      }
      // validate the optional field `previousFrequency`
      if (jsonObj.get("previousFrequency") != null && !jsonObj.get("previousFrequency").isJsonNull()) {
        Frequency.validateJsonObject(jsonObj.getAsJsonObject("previousFrequency"));
      }
      // validate the optional field `frequencyAuditInfo`
      if (jsonObj.get("frequencyAuditInfo") != null && !jsonObj.get("frequencyAuditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("frequencyAuditInfo"));
      }
      // validate the optional field `nextOrderDateAuditInfo`
      if (jsonObj.get("nextOrderDateAuditInfo") != null && !jsonObj.get("nextOrderDateAuditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("nextOrderDateAuditInfo"));
      }
      if ((jsonObj.get("paymentErrorCode") != null && !jsonObj.get("paymentErrorCode").isJsonNull()) && !jsonObj.get("paymentErrorCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentErrorCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentErrorCode").toString()));
      }
      // validate the optional field `trial`
      if (jsonObj.get("trial") != null && !jsonObj.get("trial").isJsonNull()) {
        Trial.validateJsonObject(jsonObj.getAsJsonObject("trial"));
      }
      if (jsonObj.get("orderDiscounts") != null && !jsonObj.get("orderDiscounts").isJsonNull()) {
        JsonArray jsonArrayorderDiscounts = jsonObj.getAsJsonArray("orderDiscounts");
        if (jsonArrayorderDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("orderDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `orderDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("orderDiscounts").toString()));
          }

          // validate the optional field `orderDiscounts` (array)
          for (int i = 0; i < jsonArrayorderDiscounts.size(); i++) {
            CommerceRuntimeAppliedDiscount.validateJsonObject(jsonArrayorderDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `adjustment`
      if (jsonObj.get("adjustment") != null && !jsonObj.get("adjustment").isJsonNull()) {
        Adjustment.validateJsonObject(jsonObj.getAsJsonObject("adjustment"));
      }
      if (jsonObj.get("shippingDiscounts") != null && !jsonObj.get("shippingDiscounts").isJsonNull()) {
        JsonArray jsonArrayshippingDiscounts = jsonObj.getAsJsonArray("shippingDiscounts");
        if (jsonArrayshippingDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shippingDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shippingDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("shippingDiscounts").toString()));
          }

          // validate the optional field `shippingDiscounts` (array)
          for (int i = 0; i < jsonArrayshippingDiscounts.size(); i++) {
            ShippingDiscount.validateJsonObject(jsonArrayshippingDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `shippingAdjustment`
      if (jsonObj.get("shippingAdjustment") != null && !jsonObj.get("shippingAdjustment").isJsonNull()) {
        Adjustment.validateJsonObject(jsonObj.getAsJsonObject("shippingAdjustment"));
      }
      if (jsonObj.get("handlingDiscounts") != null && !jsonObj.get("handlingDiscounts").isJsonNull()) {
        JsonArray jsonArrayhandlingDiscounts = jsonObj.getAsJsonArray("handlingDiscounts");
        if (jsonArrayhandlingDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("handlingDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `handlingDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("handlingDiscounts").toString()));
          }

          // validate the optional field `handlingDiscounts` (array)
          for (int i = 0; i < jsonArrayhandlingDiscounts.size(); i++) {
            CommerceRuntimeAppliedDiscount.validateJsonObject(jsonArrayhandlingDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `handlingAdjustment`
      if (jsonObj.get("handlingAdjustment") != null && !jsonObj.get("handlingAdjustment").isJsonNull()) {
        Adjustment.validateJsonObject(jsonObj.getAsJsonObject("handlingAdjustment"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (jsonObj.get("reasons") != null && !jsonObj.get("reasons").isJsonNull()) {
        JsonArray jsonArrayreasons = jsonObj.getAsJsonArray("reasons");
        if (jsonArrayreasons != null) {
          // ensure the json data is an array
          if (!jsonObj.get("reasons").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `reasons` to be an array in the JSON string but got `%s`", jsonObj.get("reasons").toString()));
          }

          // validate the optional field `reasons` (array)
          for (int i = 0; i < jsonArrayreasons.size(); i++) {
            SubscriptionReason.validateJsonObject(jsonArrayreasons.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the json data is an array
      if (!jsonObj.get("couponCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `couponCodes` to be an array in the JSON string but got `%s`", jsonObj.get("couponCodes").toString()));
      }
      if (jsonObj.get("invalidCoupons") != null && !jsonObj.get("invalidCoupons").isJsonNull()) {
        JsonArray jsonArrayinvalidCoupons = jsonObj.getAsJsonArray("invalidCoupons");
        if (jsonArrayinvalidCoupons != null) {
          // ensure the json data is an array
          if (!jsonObj.get("invalidCoupons").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `invalidCoupons` to be an array in the JSON string but got `%s`", jsonObj.get("invalidCoupons").toString()));
          }

          // validate the optional field `invalidCoupons` (array)
          for (int i = 0; i < jsonArrayinvalidCoupons.size(); i++) {
            InvalidCoupon.validateJsonObject(jsonArrayinvalidCoupons.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("externalId") != null && !jsonObj.get("externalId").isJsonNull()) && !jsonObj.get("externalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalId").toString()));
      }
      if (jsonObj.get("onetimeProducts") != null && !jsonObj.get("onetimeProducts").isJsonNull()) {
        JsonArray jsonArrayonetimeProducts = jsonObj.getAsJsonArray("onetimeProducts");
        if (jsonArrayonetimeProducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("onetimeProducts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `onetimeProducts` to be an array in the JSON string but got `%s`", jsonObj.get("onetimeProducts").toString()));
          }

          // validate the optional field `onetimeProducts` (array)
          for (int i = 0; i < jsonArrayonetimeProducts.size(); i++) {
            OnetimeProduct.validateJsonObject(jsonArrayonetimeProducts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `onetimeShippingMethod`
      if (jsonObj.get("onetimeShippingMethod") != null && !jsonObj.get("onetimeShippingMethod").isJsonNull()) {
        OnetimeShippingMethod.validateJsonObject(jsonObj.getAsJsonObject("onetimeShippingMethod"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubscriptionRuntimeSubscription.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubscriptionRuntimeSubscription' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubscriptionRuntimeSubscription> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubscriptionRuntimeSubscription.class));

       return (TypeAdapter<T>) new TypeAdapter<SubscriptionRuntimeSubscription>() {
           @Override
           public void write(JsonWriter out, SubscriptionRuntimeSubscription value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SubscriptionRuntimeSubscription read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SubscriptionRuntimeSubscription given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SubscriptionRuntimeSubscription
  * @throws IOException if the JSON string is invalid with respect to SubscriptionRuntimeSubscription
  */
  public static SubscriptionRuntimeSubscription fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubscriptionRuntimeSubscription.class);
  }

 /**
  * Convert an instance of SubscriptionRuntimeSubscription to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

