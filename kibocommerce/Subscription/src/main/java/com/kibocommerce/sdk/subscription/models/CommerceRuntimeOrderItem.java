/*
 * Kibo SubscriptionRuntime Service
 * OpenAPI Spec for Kibo SubscriptionRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.subscription.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.subscription.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimeAppliedLineItemProductDiscount;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimeAppliedLineItemShippingDiscount;
import com.kibocommerce.sdk.subscription.models.CommerceRuntimeProduct;
import com.kibocommerce.sdk.subscription.models.CommerceUnitPrice;
import com.kibocommerce.sdk.subscription.models.InventoryTags;
import com.kibocommerce.sdk.subscription.models.SubscriptionInfo;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * A single line item of an order.
 */
@ApiModel(description = "A single line item of an order.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimeOrderItem implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DESTINATION_ID = "destinationId";
  @SerializedName(SERIALIZED_NAME_DESTINATION_ID)
  private String destinationId;

  public static final String SERIALIZED_NAME_ORIGINAL_CART_ITEM_ID = "originalCartItemId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_CART_ITEM_ID)
  private String originalCartItemId;

  public static final String SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE = "fulfillmentLocationCode";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_LOCATION_CODE)
  private String fulfillmentLocationCode;

  public static final String SERIALIZED_NAME_FULFILLMENT_METHOD = "fulfillmentMethod";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_METHOD)
  private String fulfillmentMethod;

  public static final String SERIALIZED_NAME_DUTY_AMOUNT = "dutyAmount";
  @SerializedName(SERIALIZED_NAME_DUTY_AMOUNT)
  private Double dutyAmount;

  public static final String SERIALIZED_NAME_EXPECTED_DELIVERY_DATE = "expectedDeliveryDate";
  @SerializedName(SERIALIZED_NAME_EXPECTED_DELIVERY_DATE)
  private OffsetDateTime expectedDeliveryDate;

  public static final String SERIALIZED_NAME_SUBSCRIPTION = "subscription";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION)
  private SubscriptionInfo subscription;

  public static final String SERIALIZED_NAME_IS_RESERVATION_ENABLED = "isReservationEnabled";
  @SerializedName(SERIALIZED_NAME_IS_RESERVATION_ENABLED)
  private Boolean isReservationEnabled;

  public static final String SERIALIZED_NAME_LOCALE_CODE = "localeCode";
  @SerializedName(SERIALIZED_NAME_LOCALE_CODE)
  private String localeCode;

  public static final String SERIALIZED_NAME_PURCHASE_LOCATION = "purchaseLocation";
  @SerializedName(SERIALIZED_NAME_PURCHASE_LOCATION)
  private String purchaseLocation;

  public static final String SERIALIZED_NAME_LINE_ID = "lineId";
  @SerializedName(SERIALIZED_NAME_LINE_ID)
  private Integer lineId;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private CommerceRuntimeProduct product;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_IS_RECURRING = "isRecurring";
  @SerializedName(SERIALIZED_NAME_IS_RECURRING)
  private Boolean isRecurring;

  public static final String SERIALIZED_NAME_IS_TAXABLE = "isTaxable";
  @SerializedName(SERIALIZED_NAME_IS_TAXABLE)
  private Boolean isTaxable;

  public static final String SERIALIZED_NAME_SUBTOTAL = "subtotal";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL)
  private Double subtotal;

  public static final String SERIALIZED_NAME_EXTENDED_TOTAL = "extendedTotal";
  @SerializedName(SERIALIZED_NAME_EXTENDED_TOTAL)
  private Double extendedTotal;

  public static final String SERIALIZED_NAME_TAXABLE_TOTAL = "taxableTotal";
  @SerializedName(SERIALIZED_NAME_TAXABLE_TOTAL)
  private Double taxableTotal;

  public static final String SERIALIZED_NAME_DISCOUNT_TOTAL = "discountTotal";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TOTAL)
  private Double discountTotal;

  public static final String SERIALIZED_NAME_DISCOUNTED_TOTAL = "discountedTotal";
  @SerializedName(SERIALIZED_NAME_DISCOUNTED_TOTAL)
  private Double discountedTotal;

  public static final String SERIALIZED_NAME_ITEM_TAX_TOTAL = "itemTaxTotal";
  @SerializedName(SERIALIZED_NAME_ITEM_TAX_TOTAL)
  private Double itemTaxTotal;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_TOTAL = "shippingTaxTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_TOTAL)
  private Double shippingTaxTotal;

  public static final String SERIALIZED_NAME_SHIPPING_TOTAL = "shippingTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TOTAL)
  private Double shippingTotal;

  public static final String SERIALIZED_NAME_HANDLING_AMOUNT = "handlingAmount";
  @SerializedName(SERIALIZED_NAME_HANDLING_AMOUNT)
  private Double handlingAmount;

  public static final String SERIALIZED_NAME_FEE_TOTAL = "feeTotal";
  @SerializedName(SERIALIZED_NAME_FEE_TOTAL)
  private Double feeTotal;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Double total;

  public static final String SERIALIZED_NAME_UNIT_PRICE = "unitPrice";
  @SerializedName(SERIALIZED_NAME_UNIT_PRICE)
  private CommerceUnitPrice unitPrice;

  public static final String SERIALIZED_NAME_PRODUCT_DISCOUNT = "productDiscount";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DISCOUNT)
  private CommerceRuntimeAppliedLineItemProductDiscount productDiscount;

  public static final String SERIALIZED_NAME_PRODUCT_DISCOUNTS = "productDiscounts";
  @SerializedName(SERIALIZED_NAME_PRODUCT_DISCOUNTS)
  private List<CommerceRuntimeAppliedLineItemProductDiscount> productDiscounts = null;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNTS = "shippingDiscounts";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNTS)
  private List<CommerceRuntimeAppliedLineItemShippingDiscount> shippingDiscounts = null;

  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private Object data;

  public static final String SERIALIZED_NAME_TAX_DATA = "taxData";
  @SerializedName(SERIALIZED_NAME_TAX_DATA)
  private Object taxData;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT_BEFORE_DISCOUNTS_AND_ADJUSTMENTS = "shippingAmountBeforeDiscountsAndAdjustments";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT_BEFORE_DISCOUNTS_AND_ADJUSTMENTS)
  private Double shippingAmountBeforeDiscountsAndAdjustments;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_ADJUSTMENT = "weightedOrderAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_ADJUSTMENT)
  private Double weightedOrderAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_DISCOUNT = "weightedOrderDiscount";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_DISCOUNT)
  private Double weightedOrderDiscount;

  public static final String SERIALIZED_NAME_ADJUSTED_LINE_ITEM_SUBTOTAL = "adjustedLineItemSubtotal";
  @SerializedName(SERIALIZED_NAME_ADJUSTED_LINE_ITEM_SUBTOTAL)
  private Double adjustedLineItemSubtotal;

  public static final String SERIALIZED_NAME_TOTAL_WITHOUT_WEIGHTED_SHIPPING_AND_HANDLING = "totalWithoutWeightedShippingAndHandling";
  @SerializedName(SERIALIZED_NAME_TOTAL_WITHOUT_WEIGHTED_SHIPPING_AND_HANDLING)
  private Double totalWithoutWeightedShippingAndHandling;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_TAX = "weightedOrderTax";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_TAX)
  private Double weightedOrderTax;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING = "weightedOrderShipping";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING)
  private Double weightedOrderShipping;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING_DISCOUNT = "weightedOrderShippingDiscount";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING_DISCOUNT)
  private Double weightedOrderShippingDiscount;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING_MANUAL_ADJUSTMENT = "weightedOrderShippingManualAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING_MANUAL_ADJUSTMENT)
  private Double weightedOrderShippingManualAdjustment;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING_TAX = "weightedOrderShippingTax";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_SHIPPING_TAX)
  private Double weightedOrderShippingTax;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_FEE = "weightedOrderHandlingFee";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_FEE)
  private Double weightedOrderHandlingFee;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_FEE_TAX = "weightedOrderHandlingFeeTax";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_FEE_TAX)
  private Double weightedOrderHandlingFeeTax;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_FEE_DISCOUNT = "weightedOrderHandlingFeeDiscount";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_FEE_DISCOUNT)
  private Double weightedOrderHandlingFeeDiscount;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_DUTY = "weightedOrderDuty";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_DUTY)
  private Double weightedOrderDuty;

  public static final String SERIALIZED_NAME_TOTAL_WITH_WEIGHTED_SHIPPING_AND_HANDLING = "totalWithWeightedShippingAndHandling";
  @SerializedName(SERIALIZED_NAME_TOTAL_WITH_WEIGHTED_SHIPPING_AND_HANDLING)
  private Double totalWithWeightedShippingAndHandling;

  public static final String SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_ADJUSTMENT = "weightedOrderHandlingAdjustment";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ORDER_HANDLING_ADJUSTMENT)
  private Double weightedOrderHandlingAdjustment;

  public static final String SERIALIZED_NAME_AUTO_ADD_DISCOUNT_ID = "autoAddDiscountId";
  @SerializedName(SERIALIZED_NAME_AUTO_ADD_DISCOUNT_ID)
  private Integer autoAddDiscountId;

  public static final String SERIALIZED_NAME_IS_ASSEMBLY_REQUIRED = "isAssemblyRequired";
  @SerializedName(SERIALIZED_NAME_IS_ASSEMBLY_REQUIRED)
  private Boolean isAssemblyRequired;

  public static final String SERIALIZED_NAME_CHILD_ITEM_IDS = "childItemIds";
  @SerializedName(SERIALIZED_NAME_CHILD_ITEM_IDS)
  private List<String> childItemIds = null;

  public static final String SERIALIZED_NAME_PARENT_ITEM_ID = "parentItemId";
  @SerializedName(SERIALIZED_NAME_PARENT_ITEM_ID)
  private String parentItemId;

  public static final String SERIALIZED_NAME_INVENTORY_TAGS = "inventoryTags";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TAGS)
  private List<InventoryTags> inventoryTags = null;

  public static final String SERIALIZED_NAME_LINE_ITEM_ADJUSTMENT = "lineItemAdjustment";
  @SerializedName(SERIALIZED_NAME_LINE_ITEM_ADJUSTMENT)
  private Double lineItemAdjustment;

  public CommerceRuntimeOrderItem() {
  }

  public CommerceRuntimeOrderItem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the order line item. System-supplied and read-only.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the order line item. System-supplied and read-only.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CommerceRuntimeOrderItem destinationId(String destinationId) {
    
    this.destinationId = destinationId;
    return this;
  }

   /**
   * The destination associated with this item when used with a multi-ship checkout.
   * @return destinationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The destination associated with this item when used with a multi-ship checkout.")

  public String getDestinationId() {
    return destinationId;
  }


  public void setDestinationId(String destinationId) {
    this.destinationId = destinationId;
  }


  public CommerceRuntimeOrderItem originalCartItemId(String originalCartItemId) {
    
    this.originalCartItemId = originalCartItemId;
    return this;
  }

   /**
   * Unique identifier of the cart item that is associated with this line item.   (This is the original Cart Item ID expressed as a GUID.)
   * @return originalCartItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the cart item that is associated with this line item.   (This is the original Cart Item ID expressed as a GUID.)")

  public String getOriginalCartItemId() {
    return originalCartItemId;
  }


  public void setOriginalCartItemId(String originalCartItemId) {
    this.originalCartItemId = originalCartItemId;
  }


  public CommerceRuntimeOrderItem fulfillmentLocationCode(String fulfillmentLocationCode) {
    
    this.fulfillmentLocationCode = fulfillmentLocationCode;
    return this;
  }

   /**
   * Location code from which to obtain this item
   * @return fulfillmentLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location code from which to obtain this item")

  public String getFulfillmentLocationCode() {
    return fulfillmentLocationCode;
  }


  public void setFulfillmentLocationCode(String fulfillmentLocationCode) {
    this.fulfillmentLocationCode = fulfillmentLocationCode;
  }


  public CommerceRuntimeOrderItem fulfillmentMethod(String fulfillmentMethod) {
    
    this.fulfillmentMethod = fulfillmentMethod;
    return this;
  }

   /**
   * Fulfillment method used to fulfill this item
   * @return fulfillmentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fulfillment method used to fulfill this item")

  public String getFulfillmentMethod() {
    return fulfillmentMethod;
  }


  public void setFulfillmentMethod(String fulfillmentMethod) {
    this.fulfillmentMethod = fulfillmentMethod;
  }


  public CommerceRuntimeOrderItem dutyAmount(Double dutyAmount) {
    
    this.dutyAmount = dutyAmount;
    return this;
  }

   /**
   * Duty or Tariff for this item
   * @return dutyAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Duty or Tariff for this item")

  public Double getDutyAmount() {
    return dutyAmount;
  }


  public void setDutyAmount(Double dutyAmount) {
    this.dutyAmount = dutyAmount;
  }


  public CommerceRuntimeOrderItem expectedDeliveryDate(OffsetDateTime expectedDeliveryDate) {
    
    this.expectedDeliveryDate = expectedDeliveryDate;
    return this;
  }

   /**
   * Expected Delivery Date of shipment
   * @return expectedDeliveryDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Expected Delivery Date of shipment")

  public OffsetDateTime getExpectedDeliveryDate() {
    return expectedDeliveryDate;
  }


  public void setExpectedDeliveryDate(OffsetDateTime expectedDeliveryDate) {
    this.expectedDeliveryDate = expectedDeliveryDate;
  }


  public CommerceRuntimeOrderItem subscription(SubscriptionInfo subscription) {
    
    this.subscription = subscription;
    return this;
  }

   /**
   * Get subscription
   * @return subscription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SubscriptionInfo getSubscription() {
    return subscription;
  }


  public void setSubscription(SubscriptionInfo subscription) {
    this.subscription = subscription;
  }


  public CommerceRuntimeOrderItem isReservationEnabled(Boolean isReservationEnabled) {
    
    this.isReservationEnabled = isReservationEnabled;
    return this;
  }

   /**
   * Flag to indicate reserve inventory in cart
   * @return isReservationEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Flag to indicate reserve inventory in cart")

  public Boolean getIsReservationEnabled() {
    return isReservationEnabled;
  }


  public void setIsReservationEnabled(Boolean isReservationEnabled) {
    this.isReservationEnabled = isReservationEnabled;
  }


  public CommerceRuntimeOrderItem localeCode(String localeCode) {
    
    this.localeCode = localeCode;
    return this;
  }

   /**
   * Locale code for language that appears in text and descriptions on the site, for example, en_US.   This is not the currency code. Currently only en_US is supported.
   * @return localeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Locale code for language that appears in text and descriptions on the site, for example, en_US.   This is not the currency code. Currently only en_US is supported.")

  public String getLocaleCode() {
    return localeCode;
  }


  public void setLocaleCode(String localeCode) {
    this.localeCode = localeCode;
  }


  public CommerceRuntimeOrderItem purchaseLocation(String purchaseLocation) {
    
    this.purchaseLocation = purchaseLocation;
    return this;
  }

   /**
   * The location where the product is being purchased.. default is null. Products can have different prices  by purchaseLocation via custom priceListResolution...
   * @return purchaseLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The location where the product is being purchased.. default is null. Products can have different prices  by purchaseLocation via custom priceListResolution...")

  public String getPurchaseLocation() {
    return purchaseLocation;
  }


  public void setPurchaseLocation(String purchaseLocation) {
    this.purchaseLocation = purchaseLocation;
  }


  public CommerceRuntimeOrderItem lineId(Integer lineId) {
    
    this.lineId = lineId;
    return this;
  }

   /**
   * The line id assigned to the order item. Visible only in the Admin, this is set from the Admin or  in CommerceRuntime when a cart is converted to an order.
   * @return lineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The line id assigned to the order item. Visible only in the Admin, this is set from the Admin or  in CommerceRuntime when a cart is converted to an order.")

  public Integer getLineId() {
    return lineId;
  }


  public void setLineId(Integer lineId) {
    this.lineId = lineId;
  }


  public CommerceRuntimeOrderItem product(CommerceRuntimeProduct product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeProduct getProduct() {
    return product;
  }


  public void setProduct(CommerceRuntimeProduct product) {
    this.product = product;
  }


  public CommerceRuntimeOrderItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * Number of products ordered.
   * @return quantity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of products ordered.")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public CommerceRuntimeOrderItem isRecurring(Boolean isRecurring) {
    
    this.isRecurring = isRecurring;
    return this;
  }

   /**
   * If true, the cart item lists a product that can be purchased or fulfilled at regular intervals, for example, monthly billing or a subscription.
   * @return isRecurring
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the cart item lists a product that can be purchased or fulfilled at regular intervals, for example, monthly billing or a subscription.")

  public Boolean getIsRecurring() {
    return isRecurring;
  }


  public void setIsRecurring(Boolean isRecurring) {
    this.isRecurring = isRecurring;
  }


  public CommerceRuntimeOrderItem isTaxable(Boolean isTaxable) {
    
    this.isTaxable = isTaxable;
    return this;
  }

   /**
   * Not implemented. If true, the cart item is eligible for tax.
   * @return isTaxable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not implemented. If true, the cart item is eligible for tax.")

  public Boolean getIsTaxable() {
    return isTaxable;
  }


  public void setIsTaxable(Boolean isTaxable) {
    this.isTaxable = isTaxable;
  }


  public CommerceRuntimeOrderItem subtotal(Double subtotal) {
    
    this.subtotal = subtotal;
    return this;
  }

   /**
   * Line item subtotal (quantity multiplied by price) before discounts.
   * @return subtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line item subtotal (quantity multiplied by price) before discounts.")

  public Double getSubtotal() {
    return subtotal;
  }


  public void setSubtotal(Double subtotal) {
    this.subtotal = subtotal;
  }


  public CommerceRuntimeOrderItem extendedTotal(Double extendedTotal) {
    
    this.extendedTotal = extendedTotal;
    return this;
  }

   /**
   * Line item extended total (quantity multiplied by unit extended price) before discounts.
   * @return extendedTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line item extended total (quantity multiplied by unit extended price) before discounts.")

  public Double getExtendedTotal() {
    return extendedTotal;
  }


  public void setExtendedTotal(Double extendedTotal) {
    this.extendedTotal = extendedTotal;
  }


  public CommerceRuntimeOrderItem taxableTotal(Double taxableTotal) {
    
    this.taxableTotal = taxableTotal;
    return this;
  }

   /**
   * Line item subtotal (quantity multiplied by price) before discounts.
   * @return taxableTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line item subtotal (quantity multiplied by price) before discounts.")

  public Double getTaxableTotal() {
    return taxableTotal;
  }


  public void setTaxableTotal(Double taxableTotal) {
    this.taxableTotal = taxableTotal;
  }


  public CommerceRuntimeOrderItem discountTotal(Double discountTotal) {
    
    this.discountTotal = discountTotal;
    return this;
  }

   /**
   * How much the shopper saves with the applied discount or sale price. This is a negative number.
   * @return discountTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "How much the shopper saves with the applied discount or sale price. This is a negative number.")

  public Double getDiscountTotal() {
    return discountTotal;
  }


  public void setDiscountTotal(Double discountTotal) {
    this.discountTotal = discountTotal;
  }


  public CommerceRuntimeOrderItem discountedTotal(Double discountedTotal) {
    
    this.discountedTotal = discountedTotal;
    return this;
  }

   /**
   * Subtotal minus any discounts.
   * @return discountedTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subtotal minus any discounts.")

  public Double getDiscountedTotal() {
    return discountedTotal;
  }


  public void setDiscountedTotal(Double discountedTotal) {
    this.discountedTotal = discountedTotal;
  }


  public CommerceRuntimeOrderItem itemTaxTotal(Double itemTaxTotal) {
    
    this.itemTaxTotal = itemTaxTotal;
    return this;
  }

   /**
   * Total price of taxes that apply to products in this item.
   * @return itemTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total price of taxes that apply to products in this item.")

  public Double getItemTaxTotal() {
    return itemTaxTotal;
  }


  public void setItemTaxTotal(Double itemTaxTotal) {
    this.itemTaxTotal = itemTaxTotal;
  }


  public CommerceRuntimeOrderItem shippingTaxTotal(Double shippingTaxTotal) {
    
    this.shippingTaxTotal = shippingTaxTotal;
    return this;
  }

   /**
   * Total price of taxes that apply to the shipping of this item.
   * @return shippingTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total price of taxes that apply to the shipping of this item.")

  public Double getShippingTaxTotal() {
    return shippingTaxTotal;
  }


  public void setShippingTaxTotal(Double shippingTaxTotal) {
    this.shippingTaxTotal = shippingTaxTotal;
  }


  public CommerceRuntimeOrderItem shippingTotal(Double shippingTotal) {
    
    this.shippingTotal = shippingTotal;
    return this;
  }

   /**
   * Total price of shipping that apply to this item.
   * @return shippingTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total price of shipping that apply to this item.")

  public Double getShippingTotal() {
    return shippingTotal;
  }


  public void setShippingTotal(Double shippingTotal) {
    this.shippingTotal = shippingTotal;
  }


  public CommerceRuntimeOrderItem handlingAmount(Double handlingAmount) {
    
    this.handlingAmount = handlingAmount;
    return this;
  }

   /**
   * Handling Amount for this item
   * @return handlingAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Handling Amount for this item")

  public Double getHandlingAmount() {
    return handlingAmount;
  }


  public void setHandlingAmount(Double handlingAmount) {
    this.handlingAmount = handlingAmount;
  }


  public CommerceRuntimeOrderItem feeTotal(Double feeTotal) {
    
    this.feeTotal = feeTotal;
    return this;
  }

   /**
   * Not implemented. Total cost of fees that apply to this item.
   * @return feeTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Not implemented. Total cost of fees that apply to this item.")

  public Double getFeeTotal() {
    return feeTotal;
  }


  public void setFeeTotal(Double feeTotal) {
    this.feeTotal = feeTotal;
  }


  public CommerceRuntimeOrderItem total(Double total) {
    
    this.total = total;
    return this;
  }

   /**
   * Total price of this cart item taking into account any discounts.
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Total price of this cart item taking into account any discounts.")

  public Double getTotal() {
    return total;
  }


  public void setTotal(Double total) {
    this.total = total;
  }


  public CommerceRuntimeOrderItem unitPrice(CommerceUnitPrice unitPrice) {
    
    this.unitPrice = unitPrice;
    return this;
  }

   /**
   * Get unitPrice
   * @return unitPrice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceUnitPrice getUnitPrice() {
    return unitPrice;
  }


  public void setUnitPrice(CommerceUnitPrice unitPrice) {
    this.unitPrice = unitPrice;
  }


  public CommerceRuntimeOrderItem productDiscount(CommerceRuntimeAppliedLineItemProductDiscount productDiscount) {
    
    this.productDiscount = productDiscount;
    return this;
  }

   /**
   * Get productDiscount
   * @return productDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeAppliedLineItemProductDiscount getProductDiscount() {
    return productDiscount;
  }


  public void setProductDiscount(CommerceRuntimeAppliedLineItemProductDiscount productDiscount) {
    this.productDiscount = productDiscount;
  }


  public CommerceRuntimeOrderItem productDiscounts(List<CommerceRuntimeAppliedLineItemProductDiscount> productDiscounts) {
    
    this.productDiscounts = productDiscounts;
    return this;
  }

  public CommerceRuntimeOrderItem addProductDiscountsItem(CommerceRuntimeAppliedLineItemProductDiscount productDiscountsItem) {
    if (this.productDiscounts == null) {
      this.productDiscounts = new ArrayList<>();
    }
    this.productDiscounts.add(productDiscountsItem);
    return this;
  }

   /**
   * A list of discounts applied to the product
   * @return productDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of discounts applied to the product")

  public List<CommerceRuntimeAppliedLineItemProductDiscount> getProductDiscounts() {
    return productDiscounts;
  }


  public void setProductDiscounts(List<CommerceRuntimeAppliedLineItemProductDiscount> productDiscounts) {
    this.productDiscounts = productDiscounts;
  }


  public CommerceRuntimeOrderItem shippingDiscounts(List<CommerceRuntimeAppliedLineItemShippingDiscount> shippingDiscounts) {
    
    this.shippingDiscounts = shippingDiscounts;
    return this;
  }

  public CommerceRuntimeOrderItem addShippingDiscountsItem(CommerceRuntimeAppliedLineItemShippingDiscount shippingDiscountsItem) {
    if (this.shippingDiscounts == null) {
      this.shippingDiscounts = new ArrayList<>();
    }
    this.shippingDiscounts.add(shippingDiscountsItem);
    return this;
  }

   /**
   * A discount applied to the shipping
   * @return shippingDiscounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A discount applied to the shipping")

  public List<CommerceRuntimeAppliedLineItemShippingDiscount> getShippingDiscounts() {
    return shippingDiscounts;
  }


  public void setShippingDiscounts(List<CommerceRuntimeAppliedLineItemShippingDiscount> shippingDiscounts) {
    this.shippingDiscounts = shippingDiscounts;
  }


  public CommerceRuntimeOrderItem data(Object data) {
    
    this.data = data;
    return this;
  }

   /**
   * Custom data for a given vendor set within the commerce process.
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Custom data for a given vendor set within the commerce process.")

  public Object getData() {
    return data;
  }


  public void setData(Object data) {
    this.data = data;
  }


  public CommerceRuntimeOrderItem taxData(Object taxData) {
    
    this.taxData = taxData;
    return this;
  }

   /**
   * Storage for any additional/custom tax data.
   * @return taxData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Storage for any additional/custom tax data.")

  public Object getTaxData() {
    return taxData;
  }


  public void setTaxData(Object taxData) {
    this.taxData = taxData;
  }


  public CommerceRuntimeOrderItem auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public CommerceRuntimeOrderItem shippingAmountBeforeDiscountsAndAdjustments(Double shippingAmountBeforeDiscountsAndAdjustments) {
    
    this.shippingAmountBeforeDiscountsAndAdjustments = shippingAmountBeforeDiscountsAndAdjustments;
    return this;
  }

   /**
   * Shipping amount before Discounts and adjustments
   * @return shippingAmountBeforeDiscountsAndAdjustments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping amount before Discounts and adjustments")

  public Double getShippingAmountBeforeDiscountsAndAdjustments() {
    return shippingAmountBeforeDiscountsAndAdjustments;
  }


  public void setShippingAmountBeforeDiscountsAndAdjustments(Double shippingAmountBeforeDiscountsAndAdjustments) {
    this.shippingAmountBeforeDiscountsAndAdjustments = shippingAmountBeforeDiscountsAndAdjustments;
  }


  public CommerceRuntimeOrderItem weightedOrderAdjustment(Double weightedOrderAdjustment) {
    
    this.weightedOrderAdjustment = weightedOrderAdjustment;
    return this;
  }

   /**
   * Order Level Manual Adjustment applied to this Item
   * @return weightedOrderAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level Manual Adjustment applied to this Item")

  public Double getWeightedOrderAdjustment() {
    return weightedOrderAdjustment;
  }


  public void setWeightedOrderAdjustment(Double weightedOrderAdjustment) {
    this.weightedOrderAdjustment = weightedOrderAdjustment;
  }


  public CommerceRuntimeOrderItem weightedOrderDiscount(Double weightedOrderDiscount) {
    
    this.weightedOrderDiscount = weightedOrderDiscount;
    return this;
  }

   /**
   * Order Level Discount applied to this Item
   * @return weightedOrderDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level Discount applied to this Item")

  public Double getWeightedOrderDiscount() {
    return weightedOrderDiscount;
  }


  public void setWeightedOrderDiscount(Double weightedOrderDiscount) {
    this.weightedOrderDiscount = weightedOrderDiscount;
  }


  public CommerceRuntimeOrderItem adjustedLineItemSubtotal(Double adjustedLineItemSubtotal) {
    
    this.adjustedLineItemSubtotal = adjustedLineItemSubtotal;
    return this;
  }

   /**
   * Order Level taxable sub total
   * @return adjustedLineItemSubtotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level taxable sub total")

  public Double getAdjustedLineItemSubtotal() {
    return adjustedLineItemSubtotal;
  }


  public void setAdjustedLineItemSubtotal(Double adjustedLineItemSubtotal) {
    this.adjustedLineItemSubtotal = adjustedLineItemSubtotal;
  }


  public CommerceRuntimeOrderItem totalWithoutWeightedShippingAndHandling(Double totalWithoutWeightedShippingAndHandling) {
    
    this.totalWithoutWeightedShippingAndHandling = totalWithoutWeightedShippingAndHandling;
    return this;
  }

   /**
   * Taxable Subtotal including Weighted Order amounts
   * @return totalWithoutWeightedShippingAndHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Taxable Subtotal including Weighted Order amounts")

  public Double getTotalWithoutWeightedShippingAndHandling() {
    return totalWithoutWeightedShippingAndHandling;
  }


  public void setTotalWithoutWeightedShippingAndHandling(Double totalWithoutWeightedShippingAndHandling) {
    this.totalWithoutWeightedShippingAndHandling = totalWithoutWeightedShippingAndHandling;
  }


  public CommerceRuntimeOrderItem weightedOrderTax(Double weightedOrderTax) {
    
    this.weightedOrderTax = weightedOrderTax;
    return this;
  }

   /**
   * Order Level tax applied to this Item
   * @return weightedOrderTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level tax applied to this Item")

  public Double getWeightedOrderTax() {
    return weightedOrderTax;
  }


  public void setWeightedOrderTax(Double weightedOrderTax) {
    this.weightedOrderTax = weightedOrderTax;
  }


  public CommerceRuntimeOrderItem weightedOrderShipping(Double weightedOrderShipping) {
    
    this.weightedOrderShipping = weightedOrderShipping;
    return this;
  }

   /**
   * Order Level Shipping applied to this Item
   * @return weightedOrderShipping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level Shipping applied to this Item")

  public Double getWeightedOrderShipping() {
    return weightedOrderShipping;
  }


  public void setWeightedOrderShipping(Double weightedOrderShipping) {
    this.weightedOrderShipping = weightedOrderShipping;
  }


  public CommerceRuntimeOrderItem weightedOrderShippingDiscount(Double weightedOrderShippingDiscount) {
    
    this.weightedOrderShippingDiscount = weightedOrderShippingDiscount;
    return this;
  }

   /**
   * Order Level Shipping discount applied to this Item
   * @return weightedOrderShippingDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level Shipping discount applied to this Item")

  public Double getWeightedOrderShippingDiscount() {
    return weightedOrderShippingDiscount;
  }


  public void setWeightedOrderShippingDiscount(Double weightedOrderShippingDiscount) {
    this.weightedOrderShippingDiscount = weightedOrderShippingDiscount;
  }


  public CommerceRuntimeOrderItem weightedOrderShippingManualAdjustment(Double weightedOrderShippingManualAdjustment) {
    
    this.weightedOrderShippingManualAdjustment = weightedOrderShippingManualAdjustment;
    return this;
  }

   /**
   * Order Level Shipping Manual Adjustment applied to this Item
   * @return weightedOrderShippingManualAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level Shipping Manual Adjustment applied to this Item")

  public Double getWeightedOrderShippingManualAdjustment() {
    return weightedOrderShippingManualAdjustment;
  }


  public void setWeightedOrderShippingManualAdjustment(Double weightedOrderShippingManualAdjustment) {
    this.weightedOrderShippingManualAdjustment = weightedOrderShippingManualAdjustment;
  }


  public CommerceRuntimeOrderItem weightedOrderShippingTax(Double weightedOrderShippingTax) {
    
    this.weightedOrderShippingTax = weightedOrderShippingTax;
    return this;
  }

   /**
   * Order Level Shipping Tax applied to this Item
   * @return weightedOrderShippingTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level Shipping Tax applied to this Item")

  public Double getWeightedOrderShippingTax() {
    return weightedOrderShippingTax;
  }


  public void setWeightedOrderShippingTax(Double weightedOrderShippingTax) {
    this.weightedOrderShippingTax = weightedOrderShippingTax;
  }


  public CommerceRuntimeOrderItem weightedOrderHandlingFee(Double weightedOrderHandlingFee) {
    
    this.weightedOrderHandlingFee = weightedOrderHandlingFee;
    return this;
  }

   /**
   * Order Level handling fee applied to this item
   * @return weightedOrderHandlingFee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level handling fee applied to this item")

  public Double getWeightedOrderHandlingFee() {
    return weightedOrderHandlingFee;
  }


  public void setWeightedOrderHandlingFee(Double weightedOrderHandlingFee) {
    this.weightedOrderHandlingFee = weightedOrderHandlingFee;
  }


  public CommerceRuntimeOrderItem weightedOrderHandlingFeeTax(Double weightedOrderHandlingFeeTax) {
    
    this.weightedOrderHandlingFeeTax = weightedOrderHandlingFeeTax;
    return this;
  }

   /**
   * Order Level handling fee tax applied to this item
   * @return weightedOrderHandlingFeeTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level handling fee tax applied to this item")

  public Double getWeightedOrderHandlingFeeTax() {
    return weightedOrderHandlingFeeTax;
  }


  public void setWeightedOrderHandlingFeeTax(Double weightedOrderHandlingFeeTax) {
    this.weightedOrderHandlingFeeTax = weightedOrderHandlingFeeTax;
  }


  public CommerceRuntimeOrderItem weightedOrderHandlingFeeDiscount(Double weightedOrderHandlingFeeDiscount) {
    
    this.weightedOrderHandlingFeeDiscount = weightedOrderHandlingFeeDiscount;
    return this;
  }

   /**
   * Order Level handling fee discount applied to this item
   * @return weightedOrderHandlingFeeDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level handling fee discount applied to this item")

  public Double getWeightedOrderHandlingFeeDiscount() {
    return weightedOrderHandlingFeeDiscount;
  }


  public void setWeightedOrderHandlingFeeDiscount(Double weightedOrderHandlingFeeDiscount) {
    this.weightedOrderHandlingFeeDiscount = weightedOrderHandlingFeeDiscount;
  }


  public CommerceRuntimeOrderItem weightedOrderDuty(Double weightedOrderDuty) {
    
    this.weightedOrderDuty = weightedOrderDuty;
    return this;
  }

   /**
   * Order Level Duty applied to this Item
   * @return weightedOrderDuty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order Level Duty applied to this Item")

  public Double getWeightedOrderDuty() {
    return weightedOrderDuty;
  }


  public void setWeightedOrderDuty(Double weightedOrderDuty) {
    this.weightedOrderDuty = weightedOrderDuty;
  }


  public CommerceRuntimeOrderItem totalWithWeightedShippingAndHandling(Double totalWithWeightedShippingAndHandling) {
    
    this.totalWithWeightedShippingAndHandling = totalWithWeightedShippingAndHandling;
    return this;
  }

   /**
   * Line item total with line item, Tax, Weighted Tax with Weighted shipping and handling costs
   * @return totalWithWeightedShippingAndHandling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Line item total with line item, Tax, Weighted Tax with Weighted shipping and handling costs")

  public Double getTotalWithWeightedShippingAndHandling() {
    return totalWithWeightedShippingAndHandling;
  }


  public void setTotalWithWeightedShippingAndHandling(Double totalWithWeightedShippingAndHandling) {
    this.totalWithWeightedShippingAndHandling = totalWithWeightedShippingAndHandling;
  }


  public CommerceRuntimeOrderItem weightedOrderHandlingAdjustment(Double weightedOrderHandlingAdjustment) {
    
    this.weightedOrderHandlingAdjustment = weightedOrderHandlingAdjustment;
    return this;
  }

   /**
   * Order level handling adjusment that applies to this item.
   * @return weightedOrderHandlingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Order level handling adjusment that applies to this item.")

  public Double getWeightedOrderHandlingAdjustment() {
    return weightedOrderHandlingAdjustment;
  }


  public void setWeightedOrderHandlingAdjustment(Double weightedOrderHandlingAdjustment) {
    this.weightedOrderHandlingAdjustment = weightedOrderHandlingAdjustment;
  }


  public CommerceRuntimeOrderItem autoAddDiscountId(Integer autoAddDiscountId) {
    
    this.autoAddDiscountId = autoAddDiscountId;
    return this;
  }

   /**
   * Track the discoutid from which the item was auto added
   * @return autoAddDiscountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Track the discoutid from which the item was auto added")

  public Integer getAutoAddDiscountId() {
    return autoAddDiscountId;
  }


  public void setAutoAddDiscountId(Integer autoAddDiscountId) {
    this.autoAddDiscountId = autoAddDiscountId;
  }


  public CommerceRuntimeOrderItem isAssemblyRequired(Boolean isAssemblyRequired) {
    
    this.isAssemblyRequired = isAssemblyRequired;
    return this;
  }

   /**
   * Assembly Required for this order item
   * @return isAssemblyRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Assembly Required for this order item")

  public Boolean getIsAssemblyRequired() {
    return isAssemblyRequired;
  }


  public void setIsAssemblyRequired(Boolean isAssemblyRequired) {
    this.isAssemblyRequired = isAssemblyRequired;
  }


  public CommerceRuntimeOrderItem childItemIds(List<String> childItemIds) {
    
    this.childItemIds = childItemIds;
    return this;
  }

  public CommerceRuntimeOrderItem addChildItemIdsItem(String childItemIdsItem) {
    if (this.childItemIds == null) {
      this.childItemIds = new ArrayList<>();
    }
    this.childItemIds.add(childItemIdsItem);
    return this;
  }

   /**
   * List of Child Item Ids for this order item
   * @return childItemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of Child Item Ids for this order item")

  public List<String> getChildItemIds() {
    return childItemIds;
  }


  public void setChildItemIds(List<String> childItemIds) {
    this.childItemIds = childItemIds;
  }


  public CommerceRuntimeOrderItem parentItemId(String parentItemId) {
    
    this.parentItemId = parentItemId;
    return this;
  }

   /**
   * Indicates Parent Item Id for this order item
   * @return parentItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates Parent Item Id for this order item")

  public String getParentItemId() {
    return parentItemId;
  }


  public void setParentItemId(String parentItemId) {
    this.parentItemId = parentItemId;
  }


  public CommerceRuntimeOrderItem inventoryTags(List<InventoryTags> inventoryTags) {
    
    this.inventoryTags = inventoryTags;
    return this;
  }

  public CommerceRuntimeOrderItem addInventoryTagsItem(InventoryTags inventoryTagsItem) {
    if (this.inventoryTags == null) {
      this.inventoryTags = new ArrayList<>();
    }
    this.inventoryTags.add(inventoryTagsItem);
    return this;
  }

   /**
   * Get inventoryTags
   * @return inventoryTags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<InventoryTags> getInventoryTags() {
    return inventoryTags;
  }


  public void setInventoryTags(List<InventoryTags> inventoryTags) {
    this.inventoryTags = inventoryTags;
  }


  public CommerceRuntimeOrderItem lineItemAdjustment(Double lineItemAdjustment) {
    
    this.lineItemAdjustment = lineItemAdjustment;
    return this;
  }

   /**
   * Get lineItemAdjustment
   * @return lineItemAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getLineItemAdjustment() {
    return lineItemAdjustment;
  }


  public void setLineItemAdjustment(Double lineItemAdjustment) {
    this.lineItemAdjustment = lineItemAdjustment;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimeOrderItem commerceRuntimeOrderItem = (CommerceRuntimeOrderItem) o;
    return Objects.equals(this.id, commerceRuntimeOrderItem.id) &&
        Objects.equals(this.destinationId, commerceRuntimeOrderItem.destinationId) &&
        Objects.equals(this.originalCartItemId, commerceRuntimeOrderItem.originalCartItemId) &&
        Objects.equals(this.fulfillmentLocationCode, commerceRuntimeOrderItem.fulfillmentLocationCode) &&
        Objects.equals(this.fulfillmentMethod, commerceRuntimeOrderItem.fulfillmentMethod) &&
        Objects.equals(this.dutyAmount, commerceRuntimeOrderItem.dutyAmount) &&
        Objects.equals(this.expectedDeliveryDate, commerceRuntimeOrderItem.expectedDeliveryDate) &&
        Objects.equals(this.subscription, commerceRuntimeOrderItem.subscription) &&
        Objects.equals(this.isReservationEnabled, commerceRuntimeOrderItem.isReservationEnabled) &&
        Objects.equals(this.localeCode, commerceRuntimeOrderItem.localeCode) &&
        Objects.equals(this.purchaseLocation, commerceRuntimeOrderItem.purchaseLocation) &&
        Objects.equals(this.lineId, commerceRuntimeOrderItem.lineId) &&
        Objects.equals(this.product, commerceRuntimeOrderItem.product) &&
        Objects.equals(this.quantity, commerceRuntimeOrderItem.quantity) &&
        Objects.equals(this.isRecurring, commerceRuntimeOrderItem.isRecurring) &&
        Objects.equals(this.isTaxable, commerceRuntimeOrderItem.isTaxable) &&
        Objects.equals(this.subtotal, commerceRuntimeOrderItem.subtotal) &&
        Objects.equals(this.extendedTotal, commerceRuntimeOrderItem.extendedTotal) &&
        Objects.equals(this.taxableTotal, commerceRuntimeOrderItem.taxableTotal) &&
        Objects.equals(this.discountTotal, commerceRuntimeOrderItem.discountTotal) &&
        Objects.equals(this.discountedTotal, commerceRuntimeOrderItem.discountedTotal) &&
        Objects.equals(this.itemTaxTotal, commerceRuntimeOrderItem.itemTaxTotal) &&
        Objects.equals(this.shippingTaxTotal, commerceRuntimeOrderItem.shippingTaxTotal) &&
        Objects.equals(this.shippingTotal, commerceRuntimeOrderItem.shippingTotal) &&
        Objects.equals(this.handlingAmount, commerceRuntimeOrderItem.handlingAmount) &&
        Objects.equals(this.feeTotal, commerceRuntimeOrderItem.feeTotal) &&
        Objects.equals(this.total, commerceRuntimeOrderItem.total) &&
        Objects.equals(this.unitPrice, commerceRuntimeOrderItem.unitPrice) &&
        Objects.equals(this.productDiscount, commerceRuntimeOrderItem.productDiscount) &&
        Objects.equals(this.productDiscounts, commerceRuntimeOrderItem.productDiscounts) &&
        Objects.equals(this.shippingDiscounts, commerceRuntimeOrderItem.shippingDiscounts) &&
        Objects.equals(this.data, commerceRuntimeOrderItem.data) &&
        Objects.equals(this.taxData, commerceRuntimeOrderItem.taxData) &&
        Objects.equals(this.auditInfo, commerceRuntimeOrderItem.auditInfo) &&
        Objects.equals(this.shippingAmountBeforeDiscountsAndAdjustments, commerceRuntimeOrderItem.shippingAmountBeforeDiscountsAndAdjustments) &&
        Objects.equals(this.weightedOrderAdjustment, commerceRuntimeOrderItem.weightedOrderAdjustment) &&
        Objects.equals(this.weightedOrderDiscount, commerceRuntimeOrderItem.weightedOrderDiscount) &&
        Objects.equals(this.adjustedLineItemSubtotal, commerceRuntimeOrderItem.adjustedLineItemSubtotal) &&
        Objects.equals(this.totalWithoutWeightedShippingAndHandling, commerceRuntimeOrderItem.totalWithoutWeightedShippingAndHandling) &&
        Objects.equals(this.weightedOrderTax, commerceRuntimeOrderItem.weightedOrderTax) &&
        Objects.equals(this.weightedOrderShipping, commerceRuntimeOrderItem.weightedOrderShipping) &&
        Objects.equals(this.weightedOrderShippingDiscount, commerceRuntimeOrderItem.weightedOrderShippingDiscount) &&
        Objects.equals(this.weightedOrderShippingManualAdjustment, commerceRuntimeOrderItem.weightedOrderShippingManualAdjustment) &&
        Objects.equals(this.weightedOrderShippingTax, commerceRuntimeOrderItem.weightedOrderShippingTax) &&
        Objects.equals(this.weightedOrderHandlingFee, commerceRuntimeOrderItem.weightedOrderHandlingFee) &&
        Objects.equals(this.weightedOrderHandlingFeeTax, commerceRuntimeOrderItem.weightedOrderHandlingFeeTax) &&
        Objects.equals(this.weightedOrderHandlingFeeDiscount, commerceRuntimeOrderItem.weightedOrderHandlingFeeDiscount) &&
        Objects.equals(this.weightedOrderDuty, commerceRuntimeOrderItem.weightedOrderDuty) &&
        Objects.equals(this.totalWithWeightedShippingAndHandling, commerceRuntimeOrderItem.totalWithWeightedShippingAndHandling) &&
        Objects.equals(this.weightedOrderHandlingAdjustment, commerceRuntimeOrderItem.weightedOrderHandlingAdjustment) &&
        Objects.equals(this.autoAddDiscountId, commerceRuntimeOrderItem.autoAddDiscountId) &&
        Objects.equals(this.isAssemblyRequired, commerceRuntimeOrderItem.isAssemblyRequired) &&
        Objects.equals(this.childItemIds, commerceRuntimeOrderItem.childItemIds) &&
        Objects.equals(this.parentItemId, commerceRuntimeOrderItem.parentItemId) &&
        Objects.equals(this.inventoryTags, commerceRuntimeOrderItem.inventoryTags) &&
        Objects.equals(this.lineItemAdjustment, commerceRuntimeOrderItem.lineItemAdjustment);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, destinationId, originalCartItemId, fulfillmentLocationCode, fulfillmentMethod, dutyAmount, expectedDeliveryDate, subscription, isReservationEnabled, localeCode, purchaseLocation, lineId, product, quantity, isRecurring, isTaxable, subtotal, extendedTotal, taxableTotal, discountTotal, discountedTotal, itemTaxTotal, shippingTaxTotal, shippingTotal, handlingAmount, feeTotal, total, unitPrice, productDiscount, productDiscounts, shippingDiscounts, data, taxData, auditInfo, shippingAmountBeforeDiscountsAndAdjustments, weightedOrderAdjustment, weightedOrderDiscount, adjustedLineItemSubtotal, totalWithoutWeightedShippingAndHandling, weightedOrderTax, weightedOrderShipping, weightedOrderShippingDiscount, weightedOrderShippingManualAdjustment, weightedOrderShippingTax, weightedOrderHandlingFee, weightedOrderHandlingFeeTax, weightedOrderHandlingFeeDiscount, weightedOrderDuty, totalWithWeightedShippingAndHandling, weightedOrderHandlingAdjustment, autoAddDiscountId, isAssemblyRequired, childItemIds, parentItemId, inventoryTags, lineItemAdjustment);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimeOrderItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    destinationId: ").append(toIndentedString(destinationId)).append("\n");
    sb.append("    originalCartItemId: ").append(toIndentedString(originalCartItemId)).append("\n");
    sb.append("    fulfillmentLocationCode: ").append(toIndentedString(fulfillmentLocationCode)).append("\n");
    sb.append("    fulfillmentMethod: ").append(toIndentedString(fulfillmentMethod)).append("\n");
    sb.append("    dutyAmount: ").append(toIndentedString(dutyAmount)).append("\n");
    sb.append("    expectedDeliveryDate: ").append(toIndentedString(expectedDeliveryDate)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    isReservationEnabled: ").append(toIndentedString(isReservationEnabled)).append("\n");
    sb.append("    localeCode: ").append(toIndentedString(localeCode)).append("\n");
    sb.append("    purchaseLocation: ").append(toIndentedString(purchaseLocation)).append("\n");
    sb.append("    lineId: ").append(toIndentedString(lineId)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    isRecurring: ").append(toIndentedString(isRecurring)).append("\n");
    sb.append("    isTaxable: ").append(toIndentedString(isTaxable)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    extendedTotal: ").append(toIndentedString(extendedTotal)).append("\n");
    sb.append("    taxableTotal: ").append(toIndentedString(taxableTotal)).append("\n");
    sb.append("    discountTotal: ").append(toIndentedString(discountTotal)).append("\n");
    sb.append("    discountedTotal: ").append(toIndentedString(discountedTotal)).append("\n");
    sb.append("    itemTaxTotal: ").append(toIndentedString(itemTaxTotal)).append("\n");
    sb.append("    shippingTaxTotal: ").append(toIndentedString(shippingTaxTotal)).append("\n");
    sb.append("    shippingTotal: ").append(toIndentedString(shippingTotal)).append("\n");
    sb.append("    handlingAmount: ").append(toIndentedString(handlingAmount)).append("\n");
    sb.append("    feeTotal: ").append(toIndentedString(feeTotal)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    unitPrice: ").append(toIndentedString(unitPrice)).append("\n");
    sb.append("    productDiscount: ").append(toIndentedString(productDiscount)).append("\n");
    sb.append("    productDiscounts: ").append(toIndentedString(productDiscounts)).append("\n");
    sb.append("    shippingDiscounts: ").append(toIndentedString(shippingDiscounts)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    taxData: ").append(toIndentedString(taxData)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    shippingAmountBeforeDiscountsAndAdjustments: ").append(toIndentedString(shippingAmountBeforeDiscountsAndAdjustments)).append("\n");
    sb.append("    weightedOrderAdjustment: ").append(toIndentedString(weightedOrderAdjustment)).append("\n");
    sb.append("    weightedOrderDiscount: ").append(toIndentedString(weightedOrderDiscount)).append("\n");
    sb.append("    adjustedLineItemSubtotal: ").append(toIndentedString(adjustedLineItemSubtotal)).append("\n");
    sb.append("    totalWithoutWeightedShippingAndHandling: ").append(toIndentedString(totalWithoutWeightedShippingAndHandling)).append("\n");
    sb.append("    weightedOrderTax: ").append(toIndentedString(weightedOrderTax)).append("\n");
    sb.append("    weightedOrderShipping: ").append(toIndentedString(weightedOrderShipping)).append("\n");
    sb.append("    weightedOrderShippingDiscount: ").append(toIndentedString(weightedOrderShippingDiscount)).append("\n");
    sb.append("    weightedOrderShippingManualAdjustment: ").append(toIndentedString(weightedOrderShippingManualAdjustment)).append("\n");
    sb.append("    weightedOrderShippingTax: ").append(toIndentedString(weightedOrderShippingTax)).append("\n");
    sb.append("    weightedOrderHandlingFee: ").append(toIndentedString(weightedOrderHandlingFee)).append("\n");
    sb.append("    weightedOrderHandlingFeeTax: ").append(toIndentedString(weightedOrderHandlingFeeTax)).append("\n");
    sb.append("    weightedOrderHandlingFeeDiscount: ").append(toIndentedString(weightedOrderHandlingFeeDiscount)).append("\n");
    sb.append("    weightedOrderDuty: ").append(toIndentedString(weightedOrderDuty)).append("\n");
    sb.append("    totalWithWeightedShippingAndHandling: ").append(toIndentedString(totalWithWeightedShippingAndHandling)).append("\n");
    sb.append("    weightedOrderHandlingAdjustment: ").append(toIndentedString(weightedOrderHandlingAdjustment)).append("\n");
    sb.append("    autoAddDiscountId: ").append(toIndentedString(autoAddDiscountId)).append("\n");
    sb.append("    isAssemblyRequired: ").append(toIndentedString(isAssemblyRequired)).append("\n");
    sb.append("    childItemIds: ").append(toIndentedString(childItemIds)).append("\n");
    sb.append("    parentItemId: ").append(toIndentedString(parentItemId)).append("\n");
    sb.append("    inventoryTags: ").append(toIndentedString(inventoryTags)).append("\n");
    sb.append("    lineItemAdjustment: ").append(toIndentedString(lineItemAdjustment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("localeCode");
    openapiFields.add("purchaseLocation");
    openapiFields.add("lineId");
    openapiFields.add("product");
    openapiFields.add("quantity");
    openapiFields.add("isRecurring");
    openapiFields.add("isTaxable");
    openapiFields.add("subtotal");
    openapiFields.add("extendedTotal");
    openapiFields.add("taxableTotal");
    openapiFields.add("discountTotal");
    openapiFields.add("discountedTotal");
    openapiFields.add("itemTaxTotal");
    openapiFields.add("shippingTaxTotal");
    openapiFields.add("shippingTotal");
    openapiFields.add("handlingAmount");
    openapiFields.add("feeTotal");
    openapiFields.add("total");
    openapiFields.add("unitPrice");
    openapiFields.add("productDiscount");
    openapiFields.add("productDiscounts");
    openapiFields.add("shippingDiscounts");
    openapiFields.add("data");
    openapiFields.add("taxData");
    openapiFields.add("auditInfo");
    openapiFields.add("shippingAmountBeforeDiscountsAndAdjustments");
    openapiFields.add("weightedOrderAdjustment");
    openapiFields.add("weightedOrderDiscount");
    openapiFields.add("adjustedLineItemSubtotal");
    openapiFields.add("totalWithoutWeightedShippingAndHandling");
    openapiFields.add("weightedOrderTax");
    openapiFields.add("weightedOrderShipping");
    openapiFields.add("weightedOrderShippingDiscount");
    openapiFields.add("weightedOrderShippingManualAdjustment");
    openapiFields.add("weightedOrderShippingTax");
    openapiFields.add("weightedOrderHandlingFee");
    openapiFields.add("weightedOrderHandlingFeeTax");
    openapiFields.add("weightedOrderHandlingFeeDiscount");
    openapiFields.add("weightedOrderDuty");
    openapiFields.add("totalWithWeightedShippingAndHandling");
    openapiFields.add("weightedOrderHandlingAdjustment");
    openapiFields.add("autoAddDiscountId");
    openapiFields.add("isAssemblyRequired");
    openapiFields.add("childItemIds");
    openapiFields.add("parentItemId");
    openapiFields.add("inventoryTags");
    openapiFields.add("lineItemAdjustment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimeOrderItem
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimeOrderItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimeOrderItem is not found in the empty JSON string", CommerceRuntimeOrderItem.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimeOrderItem.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimeOrderItem` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("destinationId") != null && !jsonObj.get("destinationId").isJsonNull()) && !jsonObj.get("destinationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destinationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destinationId").toString()));
      }
      if ((jsonObj.get("originalCartItemId") != null && !jsonObj.get("originalCartItemId").isJsonNull()) && !jsonObj.get("originalCartItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalCartItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalCartItemId").toString()));
      }
      if ((jsonObj.get("fulfillmentLocationCode") != null && !jsonObj.get("fulfillmentLocationCode").isJsonNull()) && !jsonObj.get("fulfillmentLocationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentLocationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentLocationCode").toString()));
      }
      if ((jsonObj.get("fulfillmentMethod") != null && !jsonObj.get("fulfillmentMethod").isJsonNull()) && !jsonObj.get("fulfillmentMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentMethod").toString()));
      }
      // validate the optional field `subscription`
      if (jsonObj.get("subscription") != null && !jsonObj.get("subscription").isJsonNull()) {
        SubscriptionInfo.validateJsonObject(jsonObj.getAsJsonObject("subscription"));
      }
      if ((jsonObj.get("localeCode") != null && !jsonObj.get("localeCode").isJsonNull()) && !jsonObj.get("localeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localeCode").toString()));
      }
      if ((jsonObj.get("purchaseLocation") != null && !jsonObj.get("purchaseLocation").isJsonNull()) && !jsonObj.get("purchaseLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchaseLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchaseLocation").toString()));
      }
      // validate the optional field `product`
      if (jsonObj.get("product") != null && !jsonObj.get("product").isJsonNull()) {
        CommerceRuntimeProduct.validateJsonObject(jsonObj.getAsJsonObject("product"));
      }
      // validate the optional field `unitPrice`
      if (jsonObj.get("unitPrice") != null && !jsonObj.get("unitPrice").isJsonNull()) {
        CommerceUnitPrice.validateJsonObject(jsonObj.getAsJsonObject("unitPrice"));
      }
      // validate the optional field `productDiscount`
      if (jsonObj.get("productDiscount") != null && !jsonObj.get("productDiscount").isJsonNull()) {
        CommerceRuntimeAppliedLineItemProductDiscount.validateJsonObject(jsonObj.getAsJsonObject("productDiscount"));
      }
      if (jsonObj.get("productDiscounts") != null && !jsonObj.get("productDiscounts").isJsonNull()) {
        JsonArray jsonArrayproductDiscounts = jsonObj.getAsJsonArray("productDiscounts");
        if (jsonArrayproductDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("productDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `productDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("productDiscounts").toString()));
          }

          // validate the optional field `productDiscounts` (array)
          for (int i = 0; i < jsonArrayproductDiscounts.size(); i++) {
            CommerceRuntimeAppliedLineItemProductDiscount.validateJsonObject(jsonArrayproductDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("shippingDiscounts") != null && !jsonObj.get("shippingDiscounts").isJsonNull()) {
        JsonArray jsonArrayshippingDiscounts = jsonObj.getAsJsonArray("shippingDiscounts");
        if (jsonArrayshippingDiscounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("shippingDiscounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `shippingDiscounts` to be an array in the JSON string but got `%s`", jsonObj.get("shippingDiscounts").toString()));
          }

          // validate the optional field `shippingDiscounts` (array)
          for (int i = 0; i < jsonArrayshippingDiscounts.size(); i++) {
            CommerceRuntimeAppliedLineItemShippingDiscount.validateJsonObject(jsonArrayshippingDiscounts.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      // ensure the json data is an array
      if (!jsonObj.get("childItemIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `childItemIds` to be an array in the JSON string but got `%s`", jsonObj.get("childItemIds").toString()));
      }
      if ((jsonObj.get("parentItemId") != null && !jsonObj.get("parentItemId").isJsonNull()) && !jsonObj.get("parentItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentItemId").toString()));
      }
      if (jsonObj.get("inventoryTags") != null && !jsonObj.get("inventoryTags").isJsonNull()) {
        JsonArray jsonArrayinventoryTags = jsonObj.getAsJsonArray("inventoryTags");
        if (jsonArrayinventoryTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inventoryTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inventoryTags` to be an array in the JSON string but got `%s`", jsonObj.get("inventoryTags").toString()));
          }

          // validate the optional field `inventoryTags` (array)
          for (int i = 0; i < jsonArrayinventoryTags.size(); i++) {
            InventoryTags.validateJsonObject(jsonArrayinventoryTags.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimeOrderItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimeOrderItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimeOrderItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimeOrderItem.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimeOrderItem>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimeOrderItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimeOrderItem read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimeOrderItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimeOrderItem
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimeOrderItem
  */
  public static CommerceRuntimeOrderItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimeOrderItem.class);
  }

 /**
  * Convert an instance of CommerceRuntimeOrderItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

