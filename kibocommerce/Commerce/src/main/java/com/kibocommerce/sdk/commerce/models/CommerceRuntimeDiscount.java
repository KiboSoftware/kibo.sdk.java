/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Discounts that apply to the order, if any. For example, when the   subtotal of the order exceeds a certain amount, or for free shipping.
 */
@ApiModel(description = "Discounts that apply to the order, if any. For example, when the   subtotal of the order exceeds a certain amount, or for free shipping.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimeDiscount implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ITEM_IDS = "itemIds";
  @SerializedName(SERIALIZED_NAME_ITEM_IDS)
  private List<String> itemIds = null;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expirationDate";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;

  public static final String SERIALIZED_NAME_HAS_MULTIPLE_TARGET_PRODUCTS = "hasMultipleTargetProducts";
  @SerializedName(SERIALIZED_NAME_HAS_MULTIPLE_TARGET_PRODUCTS)
  private Boolean hasMultipleTargetProducts;

  public CommerceRuntimeDiscount() {
  }

  public CommerceRuntimeDiscount id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the discount.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the discount.")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public CommerceRuntimeDiscount name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the discount in the language specified by LocaleCode.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the discount in the language specified by LocaleCode.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CommerceRuntimeDiscount itemIds(List<String> itemIds) {
    
    this.itemIds = itemIds;
    return this;
  }

  public CommerceRuntimeDiscount addItemIdsItem(String itemIdsItem) {
    if (this.itemIds == null) {
      this.itemIds = new ArrayList<>();
    }
    this.itemIds.add(itemIdsItem);
    return this;
  }

   /**
   * List of discounts for each order item.
   * @return itemIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of discounts for each order item.")

  public List<String> getItemIds() {
    return itemIds;
  }


  public void setItemIds(List<String> itemIds) {
    this.itemIds = itemIds;
  }


  public CommerceRuntimeDiscount expirationDate(OffsetDateTime expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Date when the discount expires. Default is null (no expiration date).
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date when the discount expires. Default is null (no expiration date).")

  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }


  public CommerceRuntimeDiscount hasMultipleTargetProducts(Boolean hasMultipleTargetProducts) {
    
    this.hasMultipleTargetProducts = hasMultipleTargetProducts;
    return this;
  }

   /**
   * Indicates that the discount targets more than a product.  Used  primarily for BoGa discounts with multiple targets.
   * @return hasMultipleTargetProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that the discount targets more than a product.  Used  primarily for BoGa discounts with multiple targets.")

  public Boolean getHasMultipleTargetProducts() {
    return hasMultipleTargetProducts;
  }


  public void setHasMultipleTargetProducts(Boolean hasMultipleTargetProducts) {
    this.hasMultipleTargetProducts = hasMultipleTargetProducts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimeDiscount commerceRuntimeDiscount = (CommerceRuntimeDiscount) o;
    return Objects.equals(this.id, commerceRuntimeDiscount.id) &&
        Objects.equals(this.name, commerceRuntimeDiscount.name) &&
        Objects.equals(this.itemIds, commerceRuntimeDiscount.itemIds) &&
        Objects.equals(this.expirationDate, commerceRuntimeDiscount.expirationDate) &&
        Objects.equals(this.hasMultipleTargetProducts, commerceRuntimeDiscount.hasMultipleTargetProducts);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, itemIds, expirationDate, hasMultipleTargetProducts);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimeDiscount {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    itemIds: ").append(toIndentedString(itemIds)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    hasMultipleTargetProducts: ").append(toIndentedString(hasMultipleTargetProducts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("itemIds");
    openapiFields.add("expirationDate");
    openapiFields.add("hasMultipleTargetProducts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimeDiscount
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimeDiscount.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimeDiscount is not found in the empty JSON string", CommerceRuntimeDiscount.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimeDiscount.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimeDiscount` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("itemIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `itemIds` to be an array in the JSON string but got `%s`", jsonObj.get("itemIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimeDiscount.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimeDiscount' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimeDiscount> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimeDiscount.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimeDiscount>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimeDiscount value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimeDiscount read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimeDiscount given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimeDiscount
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimeDiscount
  */
  public static CommerceRuntimeDiscount fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimeDiscount.class);
  }

 /**
  * Convert an instance of CommerceRuntimeDiscount to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

