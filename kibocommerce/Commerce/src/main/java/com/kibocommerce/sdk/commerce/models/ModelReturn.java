/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.commerce.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeChangeMessage;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeContact;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimePackage;
import com.kibocommerce.sdk.commerce.models.OrderNote;
import com.kibocommerce.sdk.commerce.models.Payment;
import com.kibocommerce.sdk.commerce.models.ReturnItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ModelReturn implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CUSTOMER_ACCOUNT_ID = "customerAccountId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ACCOUNT_ID)
  private Integer customerAccountId;

  public static final String SERIALIZED_NAME_VISIT_ID = "visitId";
  @SerializedName(SERIALIZED_NAME_VISIT_ID)
  private String visitId;

  public static final String SERIALIZED_NAME_WEB_SESSION_ID = "webSessionId";
  @SerializedName(SERIALIZED_NAME_WEB_SESSION_ID)
  private String webSessionId;

  public static final String SERIALIZED_NAME_CUSTOMER_INTERACTION_TYPE = "customerInteractionType";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_INTERACTION_TYPE)
  private String customerInteractionType;

  public static final String SERIALIZED_NAME_AVAILABLE_ACTIONS = "availableActions";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_ACTIONS)
  private List<String> availableActions = null;

  public static final String SERIALIZED_NAME_RETURN_NUMBER = "returnNumber";
  @SerializedName(SERIALIZED_NAME_RETURN_NUMBER)
  private Integer returnNumber;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private CommerceRuntimeContact contact;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_ID = "originalOrderId";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_ID)
  private String originalOrderId;

  public static final String SERIALIZED_NAME_ORIGINAL_ORDER_NUMBER = "originalOrderNumber";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_ORDER_NUMBER)
  private Integer originalOrderNumber;

  public static final String SERIALIZED_NAME_RETURN_ORDER_ID = "returnOrderId";
  @SerializedName(SERIALIZED_NAME_RETURN_ORDER_ID)
  private String returnOrderId;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_RECEIVE_STATUS = "receiveStatus";
  @SerializedName(SERIALIZED_NAME_RECEIVE_STATUS)
  private String receiveStatus;

  public static final String SERIALIZED_NAME_REFUND_STATUS = "refundStatus";
  @SerializedName(SERIALIZED_NAME_REFUND_STATUS)
  private String refundStatus;

  public static final String SERIALIZED_NAME_REPLACE_STATUS = "replaceStatus";
  @SerializedName(SERIALIZED_NAME_REPLACE_STATUS)
  private String replaceStatus;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<ReturnItem> items = null;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private List<OrderNote> notes = null;

  public static final String SERIALIZED_NAME_RMA_DEADLINE = "rmaDeadline";
  @SerializedName(SERIALIZED_NAME_RMA_DEADLINE)
  private OffsetDateTime rmaDeadline;

  public static final String SERIALIZED_NAME_RETURN_TYPE = "returnType";
  @SerializedName(SERIALIZED_NAME_RETURN_TYPE)
  private String returnType;

  public static final String SERIALIZED_NAME_REFUND_AMOUNT = "refundAmount";
  @SerializedName(SERIALIZED_NAME_REFUND_AMOUNT)
  private Double refundAmount;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_PAYMENTS = "payments";
  @SerializedName(SERIALIZED_NAME_PAYMENTS)
  private List<Payment> payments = null;

  public static final String SERIALIZED_NAME_PACKAGES = "packages";
  @SerializedName(SERIALIZED_NAME_PACKAGES)
  private List<CommerceRuntimePackage> packages = null;

  public static final String SERIALIZED_NAME_PRODUCT_LOSS_TOTAL = "productLossTotal";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LOSS_TOTAL)
  private Double productLossTotal;

  public static final String SERIALIZED_NAME_SHIPPING_LOSS_TOTAL = "shippingLossTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LOSS_TOTAL)
  private Double shippingLossTotal;

  public static final String SERIALIZED_NAME_LOSS_TOTAL = "lossTotal";
  @SerializedName(SERIALIZED_NAME_LOSS_TOTAL)
  private Double lossTotal;

  public static final String SERIALIZED_NAME_PRODUCT_LOSS_TAX_TOTAL = "productLossTaxTotal";
  @SerializedName(SERIALIZED_NAME_PRODUCT_LOSS_TAX_TOTAL)
  private Double productLossTaxTotal;

  public static final String SERIALIZED_NAME_SHIPPING_LOSS_TAX_TOTAL = "shippingLossTaxTotal";
  @SerializedName(SERIALIZED_NAME_SHIPPING_LOSS_TAX_TOTAL)
  private Double shippingLossTaxTotal;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Integer tenantId;

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private Integer siteId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_CHANNEL_CODE = "channelCode";
  @SerializedName(SERIALIZED_NAME_CHANNEL_CODE)
  private String channelCode;

  public static final String SERIALIZED_NAME_CHANGE_MESSAGES = "changeMessages";
  @SerializedName(SERIALIZED_NAME_CHANGE_MESSAGES)
  private List<CommerceRuntimeChangeMessage> changeMessages = null;

  public static final String SERIALIZED_NAME_ACTION_REQUIRED = "actionRequired";
  @SerializedName(SERIALIZED_NAME_ACTION_REQUIRED)
  private Boolean actionRequired;

  public static final String SERIALIZED_NAME_IS_UNIFIED = "isUnified";
  @SerializedName(SERIALIZED_NAME_IS_UNIFIED)
  private Boolean isUnified;

  public static final String SERIALIZED_NAME_CAN_INITIATE_REFUND = "canInitiateRefund";
  @SerializedName(SERIALIZED_NAME_CAN_INITIATE_REFUND)
  private Boolean canInitiateRefund;

  public static final String SERIALIZED_NAME_REFUND_TO_G_C = "refundToGC";
  @SerializedName(SERIALIZED_NAME_REFUND_TO_G_C)
  private Boolean refundToGC;

  public static final String SERIALIZED_NAME_SHIP_OR_BILL_COUNTRY_CODE = "shipOrBillCountryCode";
  @SerializedName(SERIALIZED_NAME_SHIP_OR_BILL_COUNTRY_CODE)
  private String shipOrBillCountryCode;

  public ModelReturn() {
  }

  public ModelReturn id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique Identifier for this Return
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique Identifier for this Return")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ModelReturn customerAccountId(Integer customerAccountId) {
    
    this.customerAccountId = customerAccountId;
    return this;
  }

   /**
   * Unique identifier of the customer account.
   * @return customerAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the customer account.")

  public Integer getCustomerAccountId() {
    return customerAccountId;
  }


  public void setCustomerAccountId(Integer customerAccountId) {
    this.customerAccountId = customerAccountId;
  }


  public ModelReturn visitId(String visitId) {
    
    this.visitId = visitId;
    return this;
  }

   /**
   * Identifies the Visit ID that was current when the order was placed or when the cart was last updated.
   * @return visitId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the Visit ID that was current when the order was placed or when the cart was last updated.")

  public String getVisitId() {
    return visitId;
  }


  public void setVisitId(String visitId) {
    this.visitId = visitId;
  }


  public ModelReturn webSessionId(String webSessionId) {
    
    this.webSessionId = webSessionId;
    return this;
  }

   /**
   * Identifies the web session used to place the order or last update the cart.
   * @return webSessionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Identifies the web session used to place the order or last update the cart.")

  public String getWebSessionId() {
    return webSessionId;
  }


  public void setWebSessionId(String webSessionId) {
    this.webSessionId = webSessionId;
  }


  public ModelReturn customerInteractionType(String customerInteractionType) {
    
    this.customerInteractionType = customerInteractionType;
    return this;
  }

   /**
   * Determines the interaction type that a customer will use to create this object.  Valid values are: Website, Store, Call, Unknown
   * @return customerInteractionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Determines the interaction type that a customer will use to create this object.  Valid values are: Website, Store, Call, Unknown")

  public String getCustomerInteractionType() {
    return customerInteractionType;
  }


  public void setCustomerInteractionType(String customerInteractionType) {
    this.customerInteractionType = customerInteractionType;
  }


  public ModelReturn availableActions(List<String> availableActions) {
    
    this.availableActions = availableActions;
    return this;
  }

  public ModelReturn addAvailableActionsItem(String availableActionsItem) {
    if (this.availableActions == null) {
      this.availableActions = new ArrayList<>();
    }
    this.availableActions.add(availableActionsItem);
    return this;
  }

   /**
   * Current available actions.
   * @return availableActions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current available actions.")

  public List<String> getAvailableActions() {
    return availableActions;
  }


  public void setAvailableActions(List<String> availableActions) {
    this.availableActions = availableActions;
  }


  public ModelReturn returnNumber(Integer returnNumber) {
    
    this.returnNumber = returnNumber;
    return this;
  }

   /**
   * A human-facing identifier that is unique within a tenant to represent the sequential ordering of Returns.
   * @return returnNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human-facing identifier that is unique within a tenant to represent the sequential ordering of Returns.")

  public Integer getReturnNumber() {
    return returnNumber;
  }


  public void setReturnNumber(Integer returnNumber) {
    this.returnNumber = returnNumber;
  }


  public ModelReturn contact(CommerceRuntimeContact contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeContact getContact() {
    return contact;
  }


  public void setContact(CommerceRuntimeContact contact) {
    this.contact = contact;
  }


  public ModelReturn locationCode(String locationCode) {
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Location code where the return was made/processed
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Location code where the return was made/processed")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    this.locationCode = locationCode;
  }


  public ModelReturn originalOrderId(String originalOrderId) {
    
    this.originalOrderId = originalOrderId;
    return this;
  }

   /**
   * The Id of the Order that this Return was generated from.
   * @return originalOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Id of the Order that this Return was generated from.")

  public String getOriginalOrderId() {
    return originalOrderId;
  }


  public void setOriginalOrderId(String originalOrderId) {
    this.originalOrderId = originalOrderId;
  }


  public ModelReturn originalOrderNumber(Integer originalOrderNumber) {
    
    this.originalOrderNumber = originalOrderNumber;
    return this;
  }

   /**
   * The order number that this return was generated from.
   * @return originalOrderNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order number that this return was generated from.")

  public Integer getOriginalOrderNumber() {
    return originalOrderNumber;
  }


  public void setOriginalOrderNumber(Integer originalOrderNumber) {
    this.originalOrderNumber = originalOrderNumber;
  }


  public ModelReturn returnOrderId(String returnOrderId) {
    
    this.returnOrderId = returnOrderId;
    return this;
  }

   /**
   * The Id of the Order that represents the items shipped to the shopper for this Return.
   * @return returnOrderId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Id of the Order that represents the items shipped to the shopper for this Return.")

  public String getReturnOrderId() {
    return returnOrderId;
  }


  public void setReturnOrderId(String returnOrderId) {
    this.returnOrderId = returnOrderId;
  }


  public ModelReturn currencyCode(String currencyCode) {
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * ISO Currency Code. Currently, only USD is supported.
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ISO Currency Code. Currently, only USD is supported.")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public ModelReturn status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * The Status of the Return.  Valid values are       Null, Created, ReturnAuthorized, ReturnPending, ReturnReceived, ReplacementShipped, Cancelled, and Closed.
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Status of the Return.  Valid values are       Null, Created, ReturnAuthorized, ReturnPending, ReturnReceived, ReplacementShipped, Cancelled, and Closed.")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public ModelReturn receiveStatus(String receiveStatus) {
    
    this.receiveStatus = receiveStatus;
    return this;
  }

   /**
   * A rollup status describing whether the return items have been received.  See Mozu.CommerceRuntime.Contracts.Returns.Return.ReceiveStatusConst for possible values.
   * @return receiveStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A rollup status describing whether the return items have been received.  See Mozu.CommerceRuntime.Contracts.Returns.Return.ReceiveStatusConst for possible values.")

  public String getReceiveStatus() {
    return receiveStatus;
  }


  public void setReceiveStatus(String receiveStatus) {
    this.receiveStatus = receiveStatus;
  }


  public ModelReturn refundStatus(String refundStatus) {
    
    this.refundStatus = refundStatus;
    return this;
  }

   /**
   * A rollup status describing whether the return items have been refunded.  See Mozu.CommerceRuntime.Contracts.Returns.Return.RefundStatusConst for possible values.
   * @return refundStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A rollup status describing whether the return items have been refunded.  See Mozu.CommerceRuntime.Contracts.Returns.Return.RefundStatusConst for possible values.")

  public String getRefundStatus() {
    return refundStatus;
  }


  public void setRefundStatus(String refundStatus) {
    this.refundStatus = refundStatus;
  }


  public ModelReturn replaceStatus(String replaceStatus) {
    
    this.replaceStatus = replaceStatus;
    return this;
  }

   /**
   * A rollup status describing whether the return items have been marked as replaced.  See Mozu.CommerceRuntime.Contracts.Returns.Return.ReplaceStatusConst for possible values.
   * @return replaceStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A rollup status describing whether the return items have been marked as replaced.  See Mozu.CommerceRuntime.Contracts.Returns.Return.ReplaceStatusConst for possible values.")

  public String getReplaceStatus() {
    return replaceStatus;
  }


  public void setReplaceStatus(String replaceStatus) {
    this.replaceStatus = replaceStatus;
  }


  public ModelReturn items(List<ReturnItem> items) {
    
    this.items = items;
    return this;
  }

  public ModelReturn addItemsItem(ReturnItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * The list of items being returned by the Shopper and replaced by the Merchant in this Return.
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of items being returned by the Shopper and replaced by the Merchant in this Return.")

  public List<ReturnItem> getItems() {
    return items;
  }


  public void setItems(List<ReturnItem> items) {
    this.items = items;
  }


  public ModelReturn notes(List<OrderNote> notes) {
    
    this.notes = notes;
    return this;
  }

  public ModelReturn addNotesItem(OrderNote notesItem) {
    if (this.notes == null) {
      this.notes = new ArrayList<>();
    }
    this.notes.add(notesItem);
    return this;
  }

   /**
   * Any Merchant Notes for this Return.
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any Merchant Notes for this Return.")

  public List<OrderNote> getNotes() {
    return notes;
  }


  public void setNotes(List<OrderNote> notes) {
    this.notes = notes;
  }


  public ModelReturn rmaDeadline(OffsetDateTime rmaDeadline) {
    
    this.rmaDeadline = rmaDeadline;
    return this;
  }

   /**
   * The deadline for a Shopper to ship the items in this Return to the Merchant.
   * @return rmaDeadline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The deadline for a Shopper to ship the items in this Return to the Merchant.")

  public OffsetDateTime getRmaDeadline() {
    return rmaDeadline;
  }


  public void setRmaDeadline(OffsetDateTime rmaDeadline) {
    this.rmaDeadline = rmaDeadline;
  }


  public ModelReturn returnType(String returnType) {
    
    this.returnType = returnType;
    return this;
  }

   /**
   * Specifies whether this Return was a Refund or a Replace
   * @return returnType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Specifies whether this Return was a Refund or a Replace")

  public String getReturnType() {
    return returnType;
  }


  public void setReturnType(String returnType) {
    this.returnType = returnType;
  }


  public ModelReturn refundAmount(Double refundAmount) {
    
    this.refundAmount = refundAmount;
    return this;
  }

   /**
   * If this Return was refunded,  how much was credited to the shopper? This amount is summed from the refund payments.
   * @return refundAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this Return was refunded,  how much was credited to the shopper? This amount is summed from the refund payments.")

  public Double getRefundAmount() {
    return refundAmount;
  }


  public void setRefundAmount(Double refundAmount) {
    this.refundAmount = refundAmount;
  }


  public ModelReturn auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public ModelReturn payments(List<Payment> payments) {
    
    this.payments = payments;
    return this;
  }

  public ModelReturn addPaymentsItem(Payment paymentsItem) {
    if (this.payments == null) {
      this.payments = new ArrayList<>();
    }
    this.payments.add(paymentsItem);
    return this;
  }

   /**
   * Any Refund payments associated with this Return.
   * @return payments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Any Refund payments associated with this Return.")

  public List<Payment> getPayments() {
    return payments;
  }


  public void setPayments(List<Payment> payments) {
    this.payments = payments;
  }


  public ModelReturn packages(List<CommerceRuntimePackage> packages) {
    
    this.packages = packages;
    return this;
  }

  public ModelReturn addPackagesItem(CommerceRuntimePackage packagesItem) {
    if (this.packages == null) {
      this.packages = new ArrayList<>();
    }
    this.packages.add(packagesItem);
    return this;
  }

   /**
   * Shipping package associated with this return.
   * @return packages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shipping package associated with this return.")

  public List<CommerceRuntimePackage> getPackages() {
    return packages;
  }


  public void setPackages(List<CommerceRuntimePackage> packages) {
    this.packages = packages;
  }


  public ModelReturn productLossTotal(Double productLossTotal) {
    
    this.productLossTotal = productLossTotal;
    return this;
  }

   /**
   * The Total Loss Amount is equal to the (cost of item) * quantity of item returned.  It is meant to represent the product value to the merchant of the items damaged or returned by a shopper.
   * @return productLossTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Total Loss Amount is equal to the (cost of item) * quantity of item returned.  It is meant to represent the product value to the merchant of the items damaged or returned by a shopper.")

  public Double getProductLossTotal() {
    return productLossTotal;
  }


  public void setProductLossTotal(Double productLossTotal) {
    this.productLossTotal = productLossTotal;
  }


  public ModelReturn shippingLossTotal(Double shippingLossTotal) {
    
    this.shippingLossTotal = shippingLossTotal;
    return this;
  }

   /**
   * The Shipping Loss Total is equal to the (shipping cost of item) * quantity of item returned.  It is meant to represent the product value to the merchant of the items damaged or returned by a shopper.
   * @return shippingLossTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Shipping Loss Total is equal to the (shipping cost of item) * quantity of item returned.  It is meant to represent the product value to the merchant of the items damaged or returned by a shopper.")

  public Double getShippingLossTotal() {
    return shippingLossTotal;
  }


  public void setShippingLossTotal(Double shippingLossTotal) {
    this.shippingLossTotal = shippingLossTotal;
  }


  public ModelReturn lossTotal(Double lossTotal) {
    
    this.lossTotal = lossTotal;
    return this;
  }

   /**
   * Sum of the ProductLossTotal and the ShippingLossTotal.
   * @return lossTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Sum of the ProductLossTotal and the ShippingLossTotal.")

  public Double getLossTotal() {
    return lossTotal;
  }


  public void setLossTotal(Double lossTotal) {
    this.lossTotal = lossTotal;
  }


  public ModelReturn productLossTaxTotal(Double productLossTaxTotal) {
    
    this.productLossTaxTotal = productLossTaxTotal;
    return this;
  }

   /**
   * The Total Taxes assessed on the product loss.
   * @return productLossTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Total Taxes assessed on the product loss.")

  public Double getProductLossTaxTotal() {
    return productLossTaxTotal;
  }


  public void setProductLossTaxTotal(Double productLossTaxTotal) {
    this.productLossTaxTotal = productLossTaxTotal;
  }


  public ModelReturn shippingLossTaxTotal(Double shippingLossTaxTotal) {
    
    this.shippingLossTaxTotal = shippingLossTaxTotal;
    return this;
  }

   /**
   * The Total Taxes assessed on the shipping loss.
   * @return shippingLossTaxTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Total Taxes assessed on the shipping loss.")

  public Double getShippingLossTaxTotal() {
    return shippingLossTaxTotal;
  }


  public void setShippingLossTaxTotal(Double shippingLossTaxTotal) {
    this.shippingLossTaxTotal = shippingLossTaxTotal;
  }


  public ModelReturn tenantId(Integer tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Unique identifier of the Tenant.
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the Tenant.")

  public Integer getTenantId() {
    return tenantId;
  }


  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }


  public ModelReturn siteId(Integer siteId) {
    
    this.siteId = siteId;
    return this;
  }

   /**
   * Unique identifier of the Site.
   * @return siteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the Site.")

  public Integer getSiteId() {
    return siteId;
  }


  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }


  public ModelReturn userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Unique identifier of the current user.
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the current user.")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public ModelReturn channelCode(String channelCode) {
    
    this.channelCode = channelCode;
    return this;
  }

   /**
   * Unique identifier of the channel for this item.
   * @return channelCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the channel for this item.")

  public String getChannelCode() {
    return channelCode;
  }


  public void setChannelCode(String channelCode) {
    this.channelCode = channelCode;
  }


  public ModelReturn changeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    
    this.changeMessages = changeMessages;
    return this;
  }

  public ModelReturn addChangeMessagesItem(CommerceRuntimeChangeMessage changeMessagesItem) {
    if (this.changeMessages == null) {
      this.changeMessages = new ArrayList<>();
    }
    this.changeMessages.add(changeMessagesItem);
    return this;
  }

   /**
   * Change messages related to the return.
   * @return changeMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Change messages related to the return.")

  public List<CommerceRuntimeChangeMessage> getChangeMessages() {
    return changeMessages;
  }


  public void setChangeMessages(List<CommerceRuntimeChangeMessage> changeMessages) {
    this.changeMessages = changeMessages;
  }


  public ModelReturn actionRequired(Boolean actionRequired) {
    
    this.actionRequired = actionRequired;
    return this;
  }

   /**
   * To find Returns that have failed to refund.
   * @return actionRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "To find Returns that have failed to refund.")

  public Boolean getActionRequired() {
    return actionRequired;
  }


  public void setActionRequired(Boolean actionRequired) {
    this.actionRequired = actionRequired;
  }


  public ModelReturn isUnified(Boolean isUnified) {
    
    this.isUnified = isUnified;
    return this;
  }

   /**
   * Was this return created by the Unified platform.
   * @return isUnified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Was this return created by the Unified platform.")

  public Boolean getIsUnified() {
    return isUnified;
  }


  public void setIsUnified(Boolean isUnified) {
    this.isUnified = isUnified;
  }


  public ModelReturn canInitiateRefund(Boolean canInitiateRefund) {
    
    this.canInitiateRefund = canInitiateRefund;
    return this;
  }

   /**
   * To identify Return is refundable or not.
   * @return canInitiateRefund
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "To identify Return is refundable or not.")

  public Boolean getCanInitiateRefund() {
    return canInitiateRefund;
  }


  public void setCanInitiateRefund(Boolean canInitiateRefund) {
    this.canInitiateRefund = canInitiateRefund;
  }


  public ModelReturn refundToGC(Boolean refundToGC) {
    
    this.refundToGC = refundToGC;
    return this;
  }

   /**
   * If this Flag is true, Refund will be done on new Gift Card.
   * @return refundToGC
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If this Flag is true, Refund will be done on new Gift Card.")

  public Boolean getRefundToGC() {
    return refundToGC;
  }


  public void setRefundToGC(Boolean refundToGC) {
    this.refundToGC = refundToGC;
  }


  public ModelReturn shipOrBillCountryCode(String shipOrBillCountryCode) {
    
    this.shipOrBillCountryCode = shipOrBillCountryCode;
    return this;
  }

   /**
   * ShipOrBillCountryCode contains country code of shipping address or Billing address
   * @return shipOrBillCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ShipOrBillCountryCode contains country code of shipping address or Billing address")

  public String getShipOrBillCountryCode() {
    return shipOrBillCountryCode;
  }


  public void setShipOrBillCountryCode(String shipOrBillCountryCode) {
    this.shipOrBillCountryCode = shipOrBillCountryCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelReturn _return = (ModelReturn) o;
    return Objects.equals(this.id, _return.id) &&
        Objects.equals(this.customerAccountId, _return.customerAccountId) &&
        Objects.equals(this.visitId, _return.visitId) &&
        Objects.equals(this.webSessionId, _return.webSessionId) &&
        Objects.equals(this.customerInteractionType, _return.customerInteractionType) &&
        Objects.equals(this.availableActions, _return.availableActions) &&
        Objects.equals(this.returnNumber, _return.returnNumber) &&
        Objects.equals(this.contact, _return.contact) &&
        Objects.equals(this.locationCode, _return.locationCode) &&
        Objects.equals(this.originalOrderId, _return.originalOrderId) &&
        Objects.equals(this.originalOrderNumber, _return.originalOrderNumber) &&
        Objects.equals(this.returnOrderId, _return.returnOrderId) &&
        Objects.equals(this.currencyCode, _return.currencyCode) &&
        Objects.equals(this.status, _return.status) &&
        Objects.equals(this.receiveStatus, _return.receiveStatus) &&
        Objects.equals(this.refundStatus, _return.refundStatus) &&
        Objects.equals(this.replaceStatus, _return.replaceStatus) &&
        Objects.equals(this.items, _return.items) &&
        Objects.equals(this.notes, _return.notes) &&
        Objects.equals(this.rmaDeadline, _return.rmaDeadline) &&
        Objects.equals(this.returnType, _return.returnType) &&
        Objects.equals(this.refundAmount, _return.refundAmount) &&
        Objects.equals(this.auditInfo, _return.auditInfo) &&
        Objects.equals(this.payments, _return.payments) &&
        Objects.equals(this.packages, _return.packages) &&
        Objects.equals(this.productLossTotal, _return.productLossTotal) &&
        Objects.equals(this.shippingLossTotal, _return.shippingLossTotal) &&
        Objects.equals(this.lossTotal, _return.lossTotal) &&
        Objects.equals(this.productLossTaxTotal, _return.productLossTaxTotal) &&
        Objects.equals(this.shippingLossTaxTotal, _return.shippingLossTaxTotal) &&
        Objects.equals(this.tenantId, _return.tenantId) &&
        Objects.equals(this.siteId, _return.siteId) &&
        Objects.equals(this.userId, _return.userId) &&
        Objects.equals(this.channelCode, _return.channelCode) &&
        Objects.equals(this.changeMessages, _return.changeMessages) &&
        Objects.equals(this.actionRequired, _return.actionRequired) &&
        Objects.equals(this.isUnified, _return.isUnified) &&
        Objects.equals(this.canInitiateRefund, _return.canInitiateRefund) &&
        Objects.equals(this.refundToGC, _return.refundToGC) &&
        Objects.equals(this.shipOrBillCountryCode, _return.shipOrBillCountryCode);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, customerAccountId, visitId, webSessionId, customerInteractionType, availableActions, returnNumber, contact, locationCode, originalOrderId, originalOrderNumber, returnOrderId, currencyCode, status, receiveStatus, refundStatus, replaceStatus, items, notes, rmaDeadline, returnType, refundAmount, auditInfo, payments, packages, productLossTotal, shippingLossTotal, lossTotal, productLossTaxTotal, shippingLossTaxTotal, tenantId, siteId, userId, channelCode, changeMessages, actionRequired, isUnified, canInitiateRefund, refundToGC, shipOrBillCountryCode);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelReturn {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customerAccountId: ").append(toIndentedString(customerAccountId)).append("\n");
    sb.append("    visitId: ").append(toIndentedString(visitId)).append("\n");
    sb.append("    webSessionId: ").append(toIndentedString(webSessionId)).append("\n");
    sb.append("    customerInteractionType: ").append(toIndentedString(customerInteractionType)).append("\n");
    sb.append("    availableActions: ").append(toIndentedString(availableActions)).append("\n");
    sb.append("    returnNumber: ").append(toIndentedString(returnNumber)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    originalOrderId: ").append(toIndentedString(originalOrderId)).append("\n");
    sb.append("    originalOrderNumber: ").append(toIndentedString(originalOrderNumber)).append("\n");
    sb.append("    returnOrderId: ").append(toIndentedString(returnOrderId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    receiveStatus: ").append(toIndentedString(receiveStatus)).append("\n");
    sb.append("    refundStatus: ").append(toIndentedString(refundStatus)).append("\n");
    sb.append("    replaceStatus: ").append(toIndentedString(replaceStatus)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    rmaDeadline: ").append(toIndentedString(rmaDeadline)).append("\n");
    sb.append("    returnType: ").append(toIndentedString(returnType)).append("\n");
    sb.append("    refundAmount: ").append(toIndentedString(refundAmount)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    payments: ").append(toIndentedString(payments)).append("\n");
    sb.append("    packages: ").append(toIndentedString(packages)).append("\n");
    sb.append("    productLossTotal: ").append(toIndentedString(productLossTotal)).append("\n");
    sb.append("    shippingLossTotal: ").append(toIndentedString(shippingLossTotal)).append("\n");
    sb.append("    lossTotal: ").append(toIndentedString(lossTotal)).append("\n");
    sb.append("    productLossTaxTotal: ").append(toIndentedString(productLossTaxTotal)).append("\n");
    sb.append("    shippingLossTaxTotal: ").append(toIndentedString(shippingLossTaxTotal)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    channelCode: ").append(toIndentedString(channelCode)).append("\n");
    sb.append("    changeMessages: ").append(toIndentedString(changeMessages)).append("\n");
    sb.append("    actionRequired: ").append(toIndentedString(actionRequired)).append("\n");
    sb.append("    isUnified: ").append(toIndentedString(isUnified)).append("\n");
    sb.append("    canInitiateRefund: ").append(toIndentedString(canInitiateRefund)).append("\n");
    sb.append("    refundToGC: ").append(toIndentedString(refundToGC)).append("\n");
    sb.append("    shipOrBillCountryCode: ").append(toIndentedString(shipOrBillCountryCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("customerAccountId");
    openapiFields.add("visitId");
    openapiFields.add("webSessionId");
    openapiFields.add("customerInteractionType");
    openapiFields.add("availableActions");
    openapiFields.add("returnNumber");
    openapiFields.add("contact");
    openapiFields.add("locationCode");
    openapiFields.add("originalOrderId");
    openapiFields.add("originalOrderNumber");
    openapiFields.add("returnOrderId");
    openapiFields.add("currencyCode");
    openapiFields.add("status");
    openapiFields.add("receiveStatus");
    openapiFields.add("refundStatus");
    openapiFields.add("replaceStatus");
    openapiFields.add("items");
    openapiFields.add("notes");
    openapiFields.add("rmaDeadline");
    openapiFields.add("returnType");
    openapiFields.add("refundAmount");
    openapiFields.add("auditInfo");
    openapiFields.add("payments");
    openapiFields.add("packages");
    openapiFields.add("productLossTotal");
    openapiFields.add("shippingLossTotal");
    openapiFields.add("lossTotal");
    openapiFields.add("productLossTaxTotal");
    openapiFields.add("shippingLossTaxTotal");
    openapiFields.add("tenantId");
    openapiFields.add("siteId");
    openapiFields.add("userId");
    openapiFields.add("channelCode");
    openapiFields.add("changeMessages");
    openapiFields.add("actionRequired");
    openapiFields.add("isUnified");
    openapiFields.add("canInitiateRefund");
    openapiFields.add("refundToGC");
    openapiFields.add("shipOrBillCountryCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ModelReturn
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ModelReturn.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ModelReturn is not found in the empty JSON string", ModelReturn.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ModelReturn.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ModelReturn` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("visitId") != null && !jsonObj.get("visitId").isJsonNull()) && !jsonObj.get("visitId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `visitId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("visitId").toString()));
      }
      if ((jsonObj.get("webSessionId") != null && !jsonObj.get("webSessionId").isJsonNull()) && !jsonObj.get("webSessionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webSessionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webSessionId").toString()));
      }
      if ((jsonObj.get("customerInteractionType") != null && !jsonObj.get("customerInteractionType").isJsonNull()) && !jsonObj.get("customerInteractionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerInteractionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerInteractionType").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("availableActions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `availableActions` to be an array in the JSON string but got `%s`", jsonObj.get("availableActions").toString()));
      }
      // validate the optional field `contact`
      if (jsonObj.get("contact") != null && !jsonObj.get("contact").isJsonNull()) {
        CommerceRuntimeContact.validateJsonObject(jsonObj.getAsJsonObject("contact"));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if ((jsonObj.get("originalOrderId") != null && !jsonObj.get("originalOrderId").isJsonNull()) && !jsonObj.get("originalOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalOrderId").toString()));
      }
      if ((jsonObj.get("returnOrderId") != null && !jsonObj.get("returnOrderId").isJsonNull()) && !jsonObj.get("returnOrderId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnOrderId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnOrderId").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("receiveStatus") != null && !jsonObj.get("receiveStatus").isJsonNull()) && !jsonObj.get("receiveStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiveStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiveStatus").toString()));
      }
      if ((jsonObj.get("refundStatus") != null && !jsonObj.get("refundStatus").isJsonNull()) && !jsonObj.get("refundStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `refundStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("refundStatus").toString()));
      }
      if ((jsonObj.get("replaceStatus") != null && !jsonObj.get("replaceStatus").isJsonNull()) && !jsonObj.get("replaceStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replaceStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replaceStatus").toString()));
      }
      if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
        JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
        if (jsonArrayitems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("items").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
          }

          // validate the optional field `items` (array)
          for (int i = 0; i < jsonArrayitems.size(); i++) {
            ReturnItem.validateJsonObject(jsonArrayitems.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) {
        JsonArray jsonArraynotes = jsonObj.getAsJsonArray("notes");
        if (jsonArraynotes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("notes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `notes` to be an array in the JSON string but got `%s`", jsonObj.get("notes").toString()));
          }

          // validate the optional field `notes` (array)
          for (int i = 0; i < jsonArraynotes.size(); i++) {
            OrderNote.validateJsonObject(jsonArraynotes.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("returnType") != null && !jsonObj.get("returnType").isJsonNull()) && !jsonObj.get("returnType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnType").toString()));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      if (jsonObj.get("payments") != null && !jsonObj.get("payments").isJsonNull()) {
        JsonArray jsonArraypayments = jsonObj.getAsJsonArray("payments");
        if (jsonArraypayments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("payments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `payments` to be an array in the JSON string but got `%s`", jsonObj.get("payments").toString()));
          }

          // validate the optional field `payments` (array)
          for (int i = 0; i < jsonArraypayments.size(); i++) {
            Payment.validateJsonObject(jsonArraypayments.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("packages") != null && !jsonObj.get("packages").isJsonNull()) {
        JsonArray jsonArraypackages = jsonObj.getAsJsonArray("packages");
        if (jsonArraypackages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("packages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `packages` to be an array in the JSON string but got `%s`", jsonObj.get("packages").toString()));
          }

          // validate the optional field `packages` (array)
          for (int i = 0; i < jsonArraypackages.size(); i++) {
            CommerceRuntimePackage.validateJsonObject(jsonArraypackages.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("channelCode") != null && !jsonObj.get("channelCode").isJsonNull()) && !jsonObj.get("channelCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `channelCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("channelCode").toString()));
      }
      if (jsonObj.get("changeMessages") != null && !jsonObj.get("changeMessages").isJsonNull()) {
        JsonArray jsonArraychangeMessages = jsonObj.getAsJsonArray("changeMessages");
        if (jsonArraychangeMessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("changeMessages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `changeMessages` to be an array in the JSON string but got `%s`", jsonObj.get("changeMessages").toString()));
          }

          // validate the optional field `changeMessages` (array)
          for (int i = 0; i < jsonArraychangeMessages.size(); i++) {
            CommerceRuntimeChangeMessage.validateJsonObject(jsonArraychangeMessages.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("shipOrBillCountryCode") != null && !jsonObj.get("shipOrBillCountryCode").isJsonNull()) && !jsonObj.get("shipOrBillCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipOrBillCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipOrBillCountryCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ModelReturn.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ModelReturn' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ModelReturn> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ModelReturn.class));

       return (TypeAdapter<T>) new TypeAdapter<ModelReturn>() {
           @Override
           public void write(JsonWriter out, ModelReturn value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ModelReturn read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ModelReturn given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ModelReturn
  * @throws IOException if the JSON string is invalid with respect to ModelReturn
  */
  public static ModelReturn fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ModelReturn.class);
  }

 /**
  * Convert an instance of ModelReturn to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

