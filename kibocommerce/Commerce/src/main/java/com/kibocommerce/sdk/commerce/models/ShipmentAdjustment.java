/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeAppeasementReason;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * ShipmentAdjustment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ShipmentAdjustment implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ITEM_ADJUSTMENT = "itemAdjustment";
  @SerializedName(SERIALIZED_NAME_ITEM_ADJUSTMENT)
  private Double itemAdjustment;

  public static final String SERIALIZED_NAME_ITEM_TAX_ADJUSTMENT = "itemTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_ITEM_TAX_ADJUSTMENT)
  private Double itemTaxAdjustment;

  public static final String SERIALIZED_NAME_SHIPPING_ADJUSTMENT = "shippingAdjustment";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADJUSTMENT)
  private Double shippingAdjustment;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_ADJUSTMENT = "shippingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_ADJUSTMENT)
  private Double shippingTaxAdjustment;

  public static final String SERIALIZED_NAME_HANDLING_ADJUSTMENT = "handlingAdjustment";
  @SerializedName(SERIALIZED_NAME_HANDLING_ADJUSTMENT)
  private Double handlingAdjustment;

  public static final String SERIALIZED_NAME_HANDLING_TAX_ADJUSTMENT = "handlingTaxAdjustment";
  @SerializedName(SERIALIZED_NAME_HANDLING_TAX_ADJUSTMENT)
  private Double handlingTaxAdjustment;

  public static final String SERIALIZED_NAME_APPEASEMENT_REASON = "appeasementReason";
  @SerializedName(SERIALIZED_NAME_APPEASEMENT_REASON)
  private CommerceRuntimeAppeasementReason appeasementReason;

  public ShipmentAdjustment() {
  }

  public ShipmentAdjustment itemAdjustment(Double itemAdjustment) {
    
    this.itemAdjustment = itemAdjustment;
    return this;
  }

   /**
   * Get itemAdjustment
   * @return itemAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getItemAdjustment() {
    return itemAdjustment;
  }


  public void setItemAdjustment(Double itemAdjustment) {
    this.itemAdjustment = itemAdjustment;
  }


  public ShipmentAdjustment itemTaxAdjustment(Double itemTaxAdjustment) {
    
    this.itemTaxAdjustment = itemTaxAdjustment;
    return this;
  }

   /**
   * Get itemTaxAdjustment
   * @return itemTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getItemTaxAdjustment() {
    return itemTaxAdjustment;
  }


  public void setItemTaxAdjustment(Double itemTaxAdjustment) {
    this.itemTaxAdjustment = itemTaxAdjustment;
  }


  public ShipmentAdjustment shippingAdjustment(Double shippingAdjustment) {
    
    this.shippingAdjustment = shippingAdjustment;
    return this;
  }

   /**
   * Get shippingAdjustment
   * @return shippingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingAdjustment() {
    return shippingAdjustment;
  }


  public void setShippingAdjustment(Double shippingAdjustment) {
    this.shippingAdjustment = shippingAdjustment;
  }


  public ShipmentAdjustment shippingTaxAdjustment(Double shippingTaxAdjustment) {
    
    this.shippingTaxAdjustment = shippingTaxAdjustment;
    return this;
  }

   /**
   * Get shippingTaxAdjustment
   * @return shippingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getShippingTaxAdjustment() {
    return shippingTaxAdjustment;
  }


  public void setShippingTaxAdjustment(Double shippingTaxAdjustment) {
    this.shippingTaxAdjustment = shippingTaxAdjustment;
  }


  public ShipmentAdjustment handlingAdjustment(Double handlingAdjustment) {
    
    this.handlingAdjustment = handlingAdjustment;
    return this;
  }

   /**
   * Get handlingAdjustment
   * @return handlingAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingAdjustment() {
    return handlingAdjustment;
  }


  public void setHandlingAdjustment(Double handlingAdjustment) {
    this.handlingAdjustment = handlingAdjustment;
  }


  public ShipmentAdjustment handlingTaxAdjustment(Double handlingTaxAdjustment) {
    
    this.handlingTaxAdjustment = handlingTaxAdjustment;
    return this;
  }

   /**
   * Get handlingTaxAdjustment
   * @return handlingTaxAdjustment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHandlingTaxAdjustment() {
    return handlingTaxAdjustment;
  }


  public void setHandlingTaxAdjustment(Double handlingTaxAdjustment) {
    this.handlingTaxAdjustment = handlingTaxAdjustment;
  }


  public ShipmentAdjustment appeasementReason(CommerceRuntimeAppeasementReason appeasementReason) {
    
    this.appeasementReason = appeasementReason;
    return this;
  }

   /**
   * Get appeasementReason
   * @return appeasementReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeAppeasementReason getAppeasementReason() {
    return appeasementReason;
  }


  public void setAppeasementReason(CommerceRuntimeAppeasementReason appeasementReason) {
    this.appeasementReason = appeasementReason;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShipmentAdjustment shipmentAdjustment = (ShipmentAdjustment) o;
    return Objects.equals(this.itemAdjustment, shipmentAdjustment.itemAdjustment) &&
        Objects.equals(this.itemTaxAdjustment, shipmentAdjustment.itemTaxAdjustment) &&
        Objects.equals(this.shippingAdjustment, shipmentAdjustment.shippingAdjustment) &&
        Objects.equals(this.shippingTaxAdjustment, shipmentAdjustment.shippingTaxAdjustment) &&
        Objects.equals(this.handlingAdjustment, shipmentAdjustment.handlingAdjustment) &&
        Objects.equals(this.handlingTaxAdjustment, shipmentAdjustment.handlingTaxAdjustment) &&
        Objects.equals(this.appeasementReason, shipmentAdjustment.appeasementReason);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(itemAdjustment, itemTaxAdjustment, shippingAdjustment, shippingTaxAdjustment, handlingAdjustment, handlingTaxAdjustment, appeasementReason);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShipmentAdjustment {\n");
    sb.append("    itemAdjustment: ").append(toIndentedString(itemAdjustment)).append("\n");
    sb.append("    itemTaxAdjustment: ").append(toIndentedString(itemTaxAdjustment)).append("\n");
    sb.append("    shippingAdjustment: ").append(toIndentedString(shippingAdjustment)).append("\n");
    sb.append("    shippingTaxAdjustment: ").append(toIndentedString(shippingTaxAdjustment)).append("\n");
    sb.append("    handlingAdjustment: ").append(toIndentedString(handlingAdjustment)).append("\n");
    sb.append("    handlingTaxAdjustment: ").append(toIndentedString(handlingTaxAdjustment)).append("\n");
    sb.append("    appeasementReason: ").append(toIndentedString(appeasementReason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("itemAdjustment");
    openapiFields.add("itemTaxAdjustment");
    openapiFields.add("shippingAdjustment");
    openapiFields.add("shippingTaxAdjustment");
    openapiFields.add("handlingAdjustment");
    openapiFields.add("handlingTaxAdjustment");
    openapiFields.add("appeasementReason");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ShipmentAdjustment
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ShipmentAdjustment.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShipmentAdjustment is not found in the empty JSON string", ShipmentAdjustment.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ShipmentAdjustment.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShipmentAdjustment` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // validate the optional field `appeasementReason`
      if (jsonObj.get("appeasementReason") != null && !jsonObj.get("appeasementReason").isJsonNull()) {
        CommerceRuntimeAppeasementReason.validateJsonObject(jsonObj.getAsJsonObject("appeasementReason"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShipmentAdjustment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShipmentAdjustment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShipmentAdjustment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShipmentAdjustment.class));

       return (TypeAdapter<T>) new TypeAdapter<ShipmentAdjustment>() {
           @Override
           public void write(JsonWriter out, ShipmentAdjustment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShipmentAdjustment read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ShipmentAdjustment given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ShipmentAdjustment
  * @throws IOException if the JSON string is invalid with respect to ShipmentAdjustment
  */
  public static ShipmentAdjustment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShipmentAdjustment.class);
  }

 /**
  * Convert an instance of ShipmentAdjustment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

