/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeBundledProduct;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeCategory;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeFulfillmentField;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimePackageMeasurements;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeProductOption;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeProductPrice;
import com.kibocommerce.sdk.commerce.models.CommerceRuntimeProductProperty;
import com.kibocommerce.sdk.commerce.models.ProductStock;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * The product as it appears on the order item.
 */
@ApiModel(description = "The product as it appears on the order item.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimeProduct implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_MFG_PART_NUMBER = "mfgPartNumber";
  @SerializedName(SERIALIZED_NAME_MFG_PART_NUMBER)
  private String mfgPartNumber;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_FULFILLMENT_TYPES_SUPPORTED = "fulfillmentTypesSupported";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_TYPES_SUPPORTED)
  private List<String> fulfillmentTypesSupported = null;

  public static final String SERIALIZED_NAME_IMAGE_ALTERNATE_TEXT = "imageAlternateText";
  @SerializedName(SERIALIZED_NAME_IMAGE_ALTERNATE_TEXT)
  private String imageAlternateText;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_VARIATION_PRODUCT_CODE = "variationProductCode";
  @SerializedName(SERIALIZED_NAME_VARIATION_PRODUCT_CODE)
  private String variationProductCode;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<CommerceRuntimeProductOption> options = null;

  public static final String SERIALIZED_NAME_PROPERTIES = "properties";
  @SerializedName(SERIALIZED_NAME_PROPERTIES)
  private List<CommerceRuntimeProductProperty> properties = null;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<CommerceRuntimeCategory> categories = null;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private CommerceRuntimeProductPrice price;

  public static final String SERIALIZED_NAME_DISCOUNTS_RESTRICTED = "discountsRestricted";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS_RESTRICTED)
  private Boolean discountsRestricted;

  public static final String SERIALIZED_NAME_DISCOUNTS_RESTRICTED_START_DATE = "discountsRestrictedStartDate";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS_RESTRICTED_START_DATE)
  private OffsetDateTime discountsRestrictedStartDate;

  public static final String SERIALIZED_NAME_DISCOUNTS_RESTRICTED_END_DATE = "discountsRestrictedEndDate";
  @SerializedName(SERIALIZED_NAME_DISCOUNTS_RESTRICTED_END_DATE)
  private OffsetDateTime discountsRestrictedEndDate;

  public static final String SERIALIZED_NAME_IS_RECURRING = "isRecurring";
  @SerializedName(SERIALIZED_NAME_IS_RECURRING)
  private Boolean isRecurring;

  public static final String SERIALIZED_NAME_IS_TAXABLE = "isTaxable";
  @SerializedName(SERIALIZED_NAME_IS_TAXABLE)
  private Boolean isTaxable;

  public static final String SERIALIZED_NAME_PRODUCT_TYPE = "productType";
  @SerializedName(SERIALIZED_NAME_PRODUCT_TYPE)
  private String productType;

  public static final String SERIALIZED_NAME_PRODUCT_USAGE = "productUsage";
  @SerializedName(SERIALIZED_NAME_PRODUCT_USAGE)
  private String productUsage;

  public static final String SERIALIZED_NAME_BUNDLED_PRODUCTS = "bundledProducts";
  @SerializedName(SERIALIZED_NAME_BUNDLED_PRODUCTS)
  private List<CommerceRuntimeBundledProduct> bundledProducts = null;

  public static final String SERIALIZED_NAME_FULFILLMENT_FIELDS = "fulfillmentFields";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_FIELDS)
  private List<CommerceRuntimeFulfillmentField> fulfillmentFields = null;

  public static final String SERIALIZED_NAME_PRODUCT_CODE = "productCode";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CODE)
  private String productCode;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_GOODS_TYPE = "goodsType";
  @SerializedName(SERIALIZED_NAME_GOODS_TYPE)
  private String goodsType;

  public static final String SERIALIZED_NAME_IS_PACKAGED_STAND_ALONE = "isPackagedStandAlone";
  @SerializedName(SERIALIZED_NAME_IS_PACKAGED_STAND_ALONE)
  private Boolean isPackagedStandAlone;

  public static final String SERIALIZED_NAME_STOCK = "stock";
  @SerializedName(SERIALIZED_NAME_STOCK)
  private ProductStock stock;

  public static final String SERIALIZED_NAME_PRODUCT_RESERVATION_ID = "productReservationId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_RESERVATION_ID)
  private Integer productReservationId;

  public static final String SERIALIZED_NAME_ALLOCATION_ID = "allocationId";
  @SerializedName(SERIALIZED_NAME_ALLOCATION_ID)
  private Integer allocationId;

  public static final String SERIALIZED_NAME_ALLOCATION_EXPIRATION = "allocationExpiration";
  @SerializedName(SERIALIZED_NAME_ALLOCATION_EXPIRATION)
  private OffsetDateTime allocationExpiration;

  public static final String SERIALIZED_NAME_MEASUREMENTS = "measurements";
  @SerializedName(SERIALIZED_NAME_MEASUREMENTS)
  private CommerceRuntimePackageMeasurements measurements;

  public static final String SERIALIZED_NAME_FULFILLMENT_STATUS = "fulfillmentStatus";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_STATUS)
  private String fulfillmentStatus;

  public CommerceRuntimeProduct() {
  }

  public CommerceRuntimeProduct mfgPartNumber(String mfgPartNumber) {
    
    this.mfgPartNumber = mfgPartNumber;
    return this;
  }

   /**
   * Manufacturing Part Number of the product.
   * @return mfgPartNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Manufacturing Part Number of the product.")

  public String getMfgPartNumber() {
    return mfgPartNumber;
  }


  public void setMfgPartNumber(String mfgPartNumber) {
    this.mfgPartNumber = mfgPartNumber;
  }


  public CommerceRuntimeProduct upc(String upc) {
    
    this.upc = upc;
    return this;
  }

   /**
   * Universal Product Code of the product.
   * @return upc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Universal Product Code of the product.")

  public String getUpc() {
    return upc;
  }


  public void setUpc(String upc) {
    this.upc = upc;
  }


  public CommerceRuntimeProduct sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Product Identifier specific to the store
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product Identifier specific to the store")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public CommerceRuntimeProduct fulfillmentTypesSupported(List<String> fulfillmentTypesSupported) {
    
    this.fulfillmentTypesSupported = fulfillmentTypesSupported;
    return this;
  }

  public CommerceRuntimeProduct addFulfillmentTypesSupportedItem(String fulfillmentTypesSupportedItem) {
    if (this.fulfillmentTypesSupported == null) {
      this.fulfillmentTypesSupported = new ArrayList<>();
    }
    this.fulfillmentTypesSupported.add(fulfillmentTypesSupportedItem);
    return this;
  }

   /**
   * Types of fulfillment that are supported for this product.
   * @return fulfillmentTypesSupported
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Types of fulfillment that are supported for this product.")

  public List<String> getFulfillmentTypesSupported() {
    return fulfillmentTypesSupported;
  }


  public void setFulfillmentTypesSupported(List<String> fulfillmentTypesSupported) {
    this.fulfillmentTypesSupported = fulfillmentTypesSupported;
  }


  public CommerceRuntimeProduct imageAlternateText(String imageAlternateText) {
    
    this.imageAlternateText = imageAlternateText;
    return this;
  }

   /**
   * Descriptive text of the image associated with the product in the language specified by LocaleCode.
   * @return imageAlternateText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Descriptive text of the image associated with the product in the language specified by LocaleCode.")

  public String getImageAlternateText() {
    return imageAlternateText;
  }


  public void setImageAlternateText(String imageAlternateText) {
    this.imageAlternateText = imageAlternateText;
  }


  public CommerceRuntimeProduct imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * URL of the image that appears next to the product on the order item. Optional.
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL of the image that appears next to the product on the order item. Optional.")

  public String getImageUrl() {
    return imageUrl;
  }


  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public CommerceRuntimeProduct variationProductCode(String variationProductCode) {
    
    this.variationProductCode = variationProductCode;
    return this;
  }

   /**
   * For configurable products, the unique identifier of the product variation that has been selected.
   * @return variationProductCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "For configurable products, the unique identifier of the product variation that has been selected.")

  public String getVariationProductCode() {
    return variationProductCode;
  }


  public void setVariationProductCode(String variationProductCode) {
    this.variationProductCode = variationProductCode;
  }


  public CommerceRuntimeProduct options(List<CommerceRuntimeProductOption> options) {
    
    this.options = options;
    return this;
  }

  public CommerceRuntimeProduct addOptionsItem(CommerceRuntimeProductOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

   /**
   * If the product contains configurable or stand-alone options, the list of product options that the shopper selected for this product.
   * @return options
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the product contains configurable or stand-alone options, the list of product options that the shopper selected for this product.")

  public List<CommerceRuntimeProductOption> getOptions() {
    return options;
  }


  public void setOptions(List<CommerceRuntimeProductOption> options) {
    this.options = options;
  }


  public CommerceRuntimeProduct properties(List<CommerceRuntimeProductProperty> properties) {
    
    this.properties = properties;
    return this;
  }

  public CommerceRuntimeProduct addPropertiesItem(CommerceRuntimeProductProperty propertiesItem) {
    if (this.properties == null) {
      this.properties = new ArrayList<>();
    }
    this.properties.add(propertiesItem);
    return this;
  }

   /**
   * If the product contains properties, the list of properties that the shopper selected for this product.
   * @return properties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If the product contains properties, the list of properties that the shopper selected for this product.")

  public List<CommerceRuntimeProductProperty> getProperties() {
    return properties;
  }


  public void setProperties(List<CommerceRuntimeProductProperty> properties) {
    this.properties = properties;
  }


  public CommerceRuntimeProduct categories(List<CommerceRuntimeCategory> categories) {
    
    this.categories = categories;
    return this;
  }

  public CommerceRuntimeProduct addCategoriesItem(CommerceRuntimeCategory categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Categories to which this product belongs.
   * @return categories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Categories to which this product belongs.")

  public List<CommerceRuntimeCategory> getCategories() {
    return categories;
  }


  public void setCategories(List<CommerceRuntimeCategory> categories) {
    this.categories = categories;
  }


  public CommerceRuntimeProduct price(CommerceRuntimeProductPrice price) {
    
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeProductPrice getPrice() {
    return price;
  }


  public void setPrice(CommerceRuntimeProductPrice price) {
    this.price = price;
  }


  public CommerceRuntimeProduct discountsRestricted(Boolean discountsRestricted) {
    
    this.discountsRestricted = discountsRestricted;
    return this;
  }

   /**
   * Is the product discount restricted
   * @return discountsRestricted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is the product discount restricted")

  public Boolean getDiscountsRestricted() {
    return discountsRestricted;
  }


  public void setDiscountsRestricted(Boolean discountsRestricted) {
    this.discountsRestricted = discountsRestricted;
  }


  public CommerceRuntimeProduct discountsRestrictedStartDate(OffsetDateTime discountsRestrictedStartDate) {
    
    this.discountsRestrictedStartDate = discountsRestrictedStartDate;
    return this;
  }

   /**
   * Product discount restriction start date
   * @return discountsRestrictedStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product discount restriction start date")

  public OffsetDateTime getDiscountsRestrictedStartDate() {
    return discountsRestrictedStartDate;
  }


  public void setDiscountsRestrictedStartDate(OffsetDateTime discountsRestrictedStartDate) {
    this.discountsRestrictedStartDate = discountsRestrictedStartDate;
  }


  public CommerceRuntimeProduct discountsRestrictedEndDate(OffsetDateTime discountsRestrictedEndDate) {
    
    this.discountsRestrictedEndDate = discountsRestrictedEndDate;
    return this;
  }

   /**
   * Product discount restriction end date
   * @return discountsRestrictedEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Product discount restriction end date")

  public OffsetDateTime getDiscountsRestrictedEndDate() {
    return discountsRestrictedEndDate;
  }


  public void setDiscountsRestrictedEndDate(OffsetDateTime discountsRestrictedEndDate) {
    this.discountsRestrictedEndDate = discountsRestrictedEndDate;
  }


  public CommerceRuntimeProduct isRecurring(Boolean isRecurring) {
    
    this.isRecurring = isRecurring;
    return this;
  }

   /**
   * If true, the product is purchased or fulfilled at regular intervals, for example, a monthly billing or a subscription.
   * @return isRecurring
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the product is purchased or fulfilled at regular intervals, for example, a monthly billing or a subscription.")

  public Boolean getIsRecurring() {
    return isRecurring;
  }


  public void setIsRecurring(Boolean isRecurring) {
    this.isRecurring = isRecurring;
  }


  public CommerceRuntimeProduct isTaxable(Boolean isTaxable) {
    
    this.isTaxable = isTaxable;
    return this;
  }

   /**
   * If true, the product is eligible for tax.
   * @return isTaxable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "If true, the product is eligible for tax.")

  public Boolean getIsTaxable() {
    return isTaxable;
  }


  public void setIsTaxable(Boolean isTaxable) {
    this.isTaxable = isTaxable;
  }


  public CommerceRuntimeProduct productType(String productType) {
    
    this.productType = productType;
    return this;
  }

   /**
   * Type of product, which can be a product with configurable options, a product with stand-alone options, or a simple product with no options.
   * @return productType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of product, which can be a product with configurable options, a product with stand-alone options, or a simple product with no options.")

  public String getProductType() {
    return productType;
  }


  public void setProductType(String productType) {
    this.productType = productType;
  }


  public CommerceRuntimeProduct productUsage(String productUsage) {
    
    this.productUsage = productUsage;
    return this;
  }

   /**
   * Usage of the product, primarily used to indicate a bundle in this context
   * @return productUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Usage of the product, primarily used to indicate a bundle in this context")

  public String getProductUsage() {
    return productUsage;
  }


  public void setProductUsage(String productUsage) {
    this.productUsage = productUsage;
  }


  public CommerceRuntimeProduct bundledProducts(List<CommerceRuntimeBundledProduct> bundledProducts) {
    
    this.bundledProducts = bundledProducts;
    return this;
  }

  public CommerceRuntimeProduct addBundledProductsItem(CommerceRuntimeBundledProduct bundledProductsItem) {
    if (this.bundledProducts == null) {
      this.bundledProducts = new ArrayList<>();
    }
    this.bundledProducts.add(bundledProductsItem);
    return this;
  }

   /**
   * Products bundled with this product (if the current product is a bundle)
   * @return bundledProducts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Products bundled with this product (if the current product is a bundle)")

  public List<CommerceRuntimeBundledProduct> getBundledProducts() {
    return bundledProducts;
  }


  public void setBundledProducts(List<CommerceRuntimeBundledProduct> bundledProducts) {
    this.bundledProducts = bundledProducts;
  }


  public CommerceRuntimeProduct fulfillmentFields(List<CommerceRuntimeFulfillmentField> fulfillmentFields) {
    
    this.fulfillmentFields = fulfillmentFields;
    return this;
  }

  public CommerceRuntimeProduct addFulfillmentFieldsItem(CommerceRuntimeFulfillmentField fulfillmentFieldsItem) {
    if (this.fulfillmentFields == null) {
      this.fulfillmentFields = new ArrayList<>();
    }
    this.fulfillmentFields.add(fulfillmentFieldsItem);
    return this;
  }

   /**
   * List of unique product identifiers for an item on shipment
   * @return fulfillmentFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of unique product identifiers for an item on shipment")

  public List<CommerceRuntimeFulfillmentField> getFulfillmentFields() {
    return fulfillmentFields;
  }


  public void setFulfillmentFields(List<CommerceRuntimeFulfillmentField> fulfillmentFields) {
    this.fulfillmentFields = fulfillmentFields;
  }


  public CommerceRuntimeProduct productCode(String productCode) {
    
    this.productCode = productCode;
    return this;
  }

   /**
   * Merchant-created code that uniquely identifies the product.
   * @return productCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Merchant-created code that uniquely identifies the product.")

  public String getProductCode() {
    return productCode;
  }


  public void setProductCode(String productCode) {
    this.productCode = productCode;
  }


  public CommerceRuntimeProduct name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the product, this is the current value of the product&#39;s name in the language specified by LocaleCode.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the product, this is the current value of the product's name in the language specified by LocaleCode.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CommerceRuntimeProduct description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Short description of the product in the language specified by LocaleCode.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Short description of the product in the language specified by LocaleCode.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CommerceRuntimeProduct goodsType(String goodsType) {
    
    this.goodsType = goodsType;
    return this;
  }

   /**
   * Goods Type
   * @return goodsType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Goods Type")

  public String getGoodsType() {
    return goodsType;
  }


  public void setGoodsType(String goodsType) {
    this.goodsType = goodsType;
  }


  public CommerceRuntimeProduct isPackagedStandAlone(Boolean isPackagedStandAlone) {
    
    this.isPackagedStandAlone = isPackagedStandAlone;
    return this;
  }

   /**
   * Indicates that this product ships by itself.
   * @return isPackagedStandAlone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates that this product ships by itself.")

  public Boolean getIsPackagedStandAlone() {
    return isPackagedStandAlone;
  }


  public void setIsPackagedStandAlone(Boolean isPackagedStandAlone) {
    this.isPackagedStandAlone = isPackagedStandAlone;
  }


  public CommerceRuntimeProduct stock(ProductStock stock) {
    
    this.stock = stock;
    return this;
  }

   /**
   * Get stock
   * @return stock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProductStock getStock() {
    return stock;
  }


  public void setStock(ProductStock stock) {
    this.stock = stock;
  }


  public CommerceRuntimeProduct productReservationId(Integer productReservationId) {
    
    this.productReservationId = productReservationId;
    return this;
  }

   /**
   * Reservation ID associated with this product in the bundle.
   * @return productReservationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Reservation ID associated with this product in the bundle.")

  public Integer getProductReservationId() {
    return productReservationId;
  }


  public void setProductReservationId(Integer productReservationId) {
    this.productReservationId = productReservationId;
  }


  public CommerceRuntimeProduct allocationId(Integer allocationId) {
    
    this.allocationId = allocationId;
    return this;
  }

   /**
   * Allocation ID associated with this product on this order.
   * @return allocationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allocation ID associated with this product on this order.")

  public Integer getAllocationId() {
    return allocationId;
  }


  public void setAllocationId(Integer allocationId) {
    this.allocationId = allocationId;
  }


  public CommerceRuntimeProduct allocationExpiration(OffsetDateTime allocationExpiration) {
    
    this.allocationExpiration = allocationExpiration;
    return this;
  }

   /**
   * Allocation ID associated with this product on this order.
   * @return allocationExpiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Allocation ID associated with this product on this order.")

  public OffsetDateTime getAllocationExpiration() {
    return allocationExpiration;
  }


  public void setAllocationExpiration(OffsetDateTime allocationExpiration) {
    this.allocationExpiration = allocationExpiration;
  }


  public CommerceRuntimeProduct measurements(CommerceRuntimePackageMeasurements measurements) {
    
    this.measurements = measurements;
    return this;
  }

   /**
   * Get measurements
   * @return measurements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimePackageMeasurements getMeasurements() {
    return measurements;
  }


  public void setMeasurements(CommerceRuntimePackageMeasurements measurements) {
    this.measurements = measurements;
  }


  public CommerceRuntimeProduct fulfillmentStatus(String fulfillmentStatus) {
    
    this.fulfillmentStatus = fulfillmentStatus;
    return this;
  }

   /**
   * Fulfillment status of the product.
   * @return fulfillmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Fulfillment status of the product.")

  public String getFulfillmentStatus() {
    return fulfillmentStatus;
  }


  public void setFulfillmentStatus(String fulfillmentStatus) {
    this.fulfillmentStatus = fulfillmentStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimeProduct commerceRuntimeProduct = (CommerceRuntimeProduct) o;
    return Objects.equals(this.mfgPartNumber, commerceRuntimeProduct.mfgPartNumber) &&
        Objects.equals(this.upc, commerceRuntimeProduct.upc) &&
        Objects.equals(this.sku, commerceRuntimeProduct.sku) &&
        Objects.equals(this.fulfillmentTypesSupported, commerceRuntimeProduct.fulfillmentTypesSupported) &&
        Objects.equals(this.imageAlternateText, commerceRuntimeProduct.imageAlternateText) &&
        Objects.equals(this.imageUrl, commerceRuntimeProduct.imageUrl) &&
        Objects.equals(this.variationProductCode, commerceRuntimeProduct.variationProductCode) &&
        Objects.equals(this.options, commerceRuntimeProduct.options) &&
        Objects.equals(this.properties, commerceRuntimeProduct.properties) &&
        Objects.equals(this.categories, commerceRuntimeProduct.categories) &&
        Objects.equals(this.price, commerceRuntimeProduct.price) &&
        Objects.equals(this.discountsRestricted, commerceRuntimeProduct.discountsRestricted) &&
        Objects.equals(this.discountsRestrictedStartDate, commerceRuntimeProduct.discountsRestrictedStartDate) &&
        Objects.equals(this.discountsRestrictedEndDate, commerceRuntimeProduct.discountsRestrictedEndDate) &&
        Objects.equals(this.isRecurring, commerceRuntimeProduct.isRecurring) &&
        Objects.equals(this.isTaxable, commerceRuntimeProduct.isTaxable) &&
        Objects.equals(this.productType, commerceRuntimeProduct.productType) &&
        Objects.equals(this.productUsage, commerceRuntimeProduct.productUsage) &&
        Objects.equals(this.bundledProducts, commerceRuntimeProduct.bundledProducts) &&
        Objects.equals(this.fulfillmentFields, commerceRuntimeProduct.fulfillmentFields) &&
        Objects.equals(this.productCode, commerceRuntimeProduct.productCode) &&
        Objects.equals(this.name, commerceRuntimeProduct.name) &&
        Objects.equals(this.description, commerceRuntimeProduct.description) &&
        Objects.equals(this.goodsType, commerceRuntimeProduct.goodsType) &&
        Objects.equals(this.isPackagedStandAlone, commerceRuntimeProduct.isPackagedStandAlone) &&
        Objects.equals(this.stock, commerceRuntimeProduct.stock) &&
        Objects.equals(this.productReservationId, commerceRuntimeProduct.productReservationId) &&
        Objects.equals(this.allocationId, commerceRuntimeProduct.allocationId) &&
        Objects.equals(this.allocationExpiration, commerceRuntimeProduct.allocationExpiration) &&
        Objects.equals(this.measurements, commerceRuntimeProduct.measurements) &&
        Objects.equals(this.fulfillmentStatus, commerceRuntimeProduct.fulfillmentStatus);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(mfgPartNumber, upc, sku, fulfillmentTypesSupported, imageAlternateText, imageUrl, variationProductCode, options, properties, categories, price, discountsRestricted, discountsRestrictedStartDate, discountsRestrictedEndDate, isRecurring, isTaxable, productType, productUsage, bundledProducts, fulfillmentFields, productCode, name, description, goodsType, isPackagedStandAlone, stock, productReservationId, allocationId, allocationExpiration, measurements, fulfillmentStatus);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimeProduct {\n");
    sb.append("    mfgPartNumber: ").append(toIndentedString(mfgPartNumber)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    fulfillmentTypesSupported: ").append(toIndentedString(fulfillmentTypesSupported)).append("\n");
    sb.append("    imageAlternateText: ").append(toIndentedString(imageAlternateText)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    variationProductCode: ").append(toIndentedString(variationProductCode)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    discountsRestricted: ").append(toIndentedString(discountsRestricted)).append("\n");
    sb.append("    discountsRestrictedStartDate: ").append(toIndentedString(discountsRestrictedStartDate)).append("\n");
    sb.append("    discountsRestrictedEndDate: ").append(toIndentedString(discountsRestrictedEndDate)).append("\n");
    sb.append("    isRecurring: ").append(toIndentedString(isRecurring)).append("\n");
    sb.append("    isTaxable: ").append(toIndentedString(isTaxable)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    productUsage: ").append(toIndentedString(productUsage)).append("\n");
    sb.append("    bundledProducts: ").append(toIndentedString(bundledProducts)).append("\n");
    sb.append("    fulfillmentFields: ").append(toIndentedString(fulfillmentFields)).append("\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    goodsType: ").append(toIndentedString(goodsType)).append("\n");
    sb.append("    isPackagedStandAlone: ").append(toIndentedString(isPackagedStandAlone)).append("\n");
    sb.append("    stock: ").append(toIndentedString(stock)).append("\n");
    sb.append("    productReservationId: ").append(toIndentedString(productReservationId)).append("\n");
    sb.append("    allocationId: ").append(toIndentedString(allocationId)).append("\n");
    sb.append("    allocationExpiration: ").append(toIndentedString(allocationExpiration)).append("\n");
    sb.append("    measurements: ").append(toIndentedString(measurements)).append("\n");
    sb.append("    fulfillmentStatus: ").append(toIndentedString(fulfillmentStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("productCode");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("goodsType");
    openapiFields.add("isPackagedStandAlone");
    openapiFields.add("stock");
    openapiFields.add("productReservationId");
    openapiFields.add("allocationId");
    openapiFields.add("allocationExpiration");
    openapiFields.add("measurements");
    openapiFields.add("fulfillmentStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimeProduct
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimeProduct.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimeProduct is not found in the empty JSON string", CommerceRuntimeProduct.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimeProduct.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimeProduct` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("mfgPartNumber") != null && !jsonObj.get("mfgPartNumber").isJsonNull()) && !jsonObj.get("mfgPartNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mfgPartNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mfgPartNumber").toString()));
      }
      if ((jsonObj.get("upc") != null && !jsonObj.get("upc").isJsonNull()) && !jsonObj.get("upc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `upc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("upc").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("fulfillmentTypesSupported").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentTypesSupported` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentTypesSupported").toString()));
      }
      if ((jsonObj.get("imageAlternateText") != null && !jsonObj.get("imageAlternateText").isJsonNull()) && !jsonObj.get("imageAlternateText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageAlternateText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageAlternateText").toString()));
      }
      if ((jsonObj.get("imageUrl") != null && !jsonObj.get("imageUrl").isJsonNull()) && !jsonObj.get("imageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageUrl").toString()));
      }
      if ((jsonObj.get("variationProductCode") != null && !jsonObj.get("variationProductCode").isJsonNull()) && !jsonObj.get("variationProductCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `variationProductCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("variationProductCode").toString()));
      }
      if (jsonObj.get("options") != null && !jsonObj.get("options").isJsonNull()) {
        JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
        if (jsonArrayoptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("options").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
          }

          // validate the optional field `options` (array)
          for (int i = 0; i < jsonArrayoptions.size(); i++) {
            CommerceRuntimeProductOption.validateJsonObject(jsonArrayoptions.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("properties") != null && !jsonObj.get("properties").isJsonNull()) {
        JsonArray jsonArrayproperties = jsonObj.getAsJsonArray("properties");
        if (jsonArrayproperties != null) {
          // ensure the json data is an array
          if (!jsonObj.get("properties").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `properties` to be an array in the JSON string but got `%s`", jsonObj.get("properties").toString()));
          }

          // validate the optional field `properties` (array)
          for (int i = 0; i < jsonArrayproperties.size(); i++) {
            CommerceRuntimeProductProperty.validateJsonObject(jsonArrayproperties.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
        if (jsonArraycategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
          }

          // validate the optional field `categories` (array)
          for (int i = 0; i < jsonArraycategories.size(); i++) {
            CommerceRuntimeCategory.validateJsonObject(jsonArraycategories.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `price`
      if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
        CommerceRuntimeProductPrice.validateJsonObject(jsonObj.getAsJsonObject("price"));
      }
      if ((jsonObj.get("productType") != null && !jsonObj.get("productType").isJsonNull()) && !jsonObj.get("productType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productType").toString()));
      }
      if ((jsonObj.get("productUsage") != null && !jsonObj.get("productUsage").isJsonNull()) && !jsonObj.get("productUsage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productUsage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productUsage").toString()));
      }
      if (jsonObj.get("bundledProducts") != null && !jsonObj.get("bundledProducts").isJsonNull()) {
        JsonArray jsonArraybundledProducts = jsonObj.getAsJsonArray("bundledProducts");
        if (jsonArraybundledProducts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bundledProducts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bundledProducts` to be an array in the JSON string but got `%s`", jsonObj.get("bundledProducts").toString()));
          }

          // validate the optional field `bundledProducts` (array)
          for (int i = 0; i < jsonArraybundledProducts.size(); i++) {
            CommerceRuntimeBundledProduct.validateJsonObject(jsonArraybundledProducts.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("fulfillmentFields") != null && !jsonObj.get("fulfillmentFields").isJsonNull()) {
        JsonArray jsonArrayfulfillmentFields = jsonObj.getAsJsonArray("fulfillmentFields");
        if (jsonArrayfulfillmentFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fulfillmentFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fulfillmentFields` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentFields").toString()));
          }

          // validate the optional field `fulfillmentFields` (array)
          for (int i = 0; i < jsonArrayfulfillmentFields.size(); i++) {
            CommerceRuntimeFulfillmentField.validateJsonObject(jsonArrayfulfillmentFields.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("productCode") != null && !jsonObj.get("productCode").isJsonNull()) && !jsonObj.get("productCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productCode").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("goodsType") != null && !jsonObj.get("goodsType").isJsonNull()) && !jsonObj.get("goodsType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `goodsType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("goodsType").toString()));
      }
      // validate the optional field `stock`
      if (jsonObj.get("stock") != null && !jsonObj.get("stock").isJsonNull()) {
        ProductStock.validateJsonObject(jsonObj.getAsJsonObject("stock"));
      }
      // validate the optional field `measurements`
      if (jsonObj.get("measurements") != null && !jsonObj.get("measurements").isJsonNull()) {
        CommerceRuntimePackageMeasurements.validateJsonObject(jsonObj.getAsJsonObject("measurements"));
      }
      if ((jsonObj.get("fulfillmentStatus") != null && !jsonObj.get("fulfillmentStatus").isJsonNull()) && !jsonObj.get("fulfillmentStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fulfillmentStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fulfillmentStatus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimeProduct.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimeProduct' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimeProduct> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimeProduct.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimeProduct>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimeProduct value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimeProduct read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimeProduct given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimeProduct
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimeProduct
  */
  public static CommerceRuntimeProduct fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimeProduct.class);
  }

 /**
  * Convert an instance of CommerceRuntimeProduct to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

