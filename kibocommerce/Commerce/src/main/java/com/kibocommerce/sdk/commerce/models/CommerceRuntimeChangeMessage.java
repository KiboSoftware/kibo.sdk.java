/*
 * Kibo CommerceRuntime Service
 * OpenAPI Spec for Kibo CommerceRuntime Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.commerce.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * A message displayed by the system based on the last  action, for example, when a product price has changed. System-supplied and read-only.
 */
@ApiModel(description = "A message displayed by the system based on the last  action, for example, when a product price has changed. System-supplied and read-only.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CommerceRuntimeChangeMessage implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CORRELATION_ID = "correlationId";
  @SerializedName(SERIALIZED_NAME_CORRELATION_ID)
  private String correlationId;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_USER_FIRST_NAME = "userFirstName";
  @SerializedName(SERIALIZED_NAME_USER_FIRST_NAME)
  private String userFirstName;

  public static final String SERIALIZED_NAME_USER_LAST_NAME = "userLastName";
  @SerializedName(SERIALIZED_NAME_USER_LAST_NAME)
  private String userLastName;

  public static final String SERIALIZED_NAME_USER_SCOPE_TYPE = "userScopeType";
  @SerializedName(SERIALIZED_NAME_USER_SCOPE_TYPE)
  private String userScopeType;

  public static final String SERIALIZED_NAME_APP_ID = "appId";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;

  public static final String SERIALIZED_NAME_APP_KEY = "appKey";
  @SerializedName(SERIALIZED_NAME_APP_KEY)
  private String appKey;

  public static final String SERIALIZED_NAME_APP_NAME = "appName";
  @SerializedName(SERIALIZED_NAME_APP_NAME)
  private String appName;

  public static final String SERIALIZED_NAME_SUBJECT_TYPE = "subjectType";
  @SerializedName(SERIALIZED_NAME_SUBJECT_TYPE)
  private String subjectType;

  public static final String SERIALIZED_NAME_SUCCESS = "success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_VERB = "verb";
  @SerializedName(SERIALIZED_NAME_VERB)
  private String verb;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata = null;

  public static final String SERIALIZED_NAME_OLD_VALUE = "oldValue";
  @SerializedName(SERIALIZED_NAME_OLD_VALUE)
  private String oldValue;

  public static final String SERIALIZED_NAME_NEW_VALUE = "newValue";
  @SerializedName(SERIALIZED_NAME_NEW_VALUE)
  private String newValue;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_CREATE_DATE = "createDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private OffsetDateTime createDate;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = null;

  public CommerceRuntimeChangeMessage() {
  }

  public CommerceRuntimeChangeMessage id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the  message. System-supplied. Read-only.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier of the  message. System-supplied. Read-only.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CommerceRuntimeChangeMessage correlationId(String correlationId) {
    
    this.correlationId = correlationId;
    return this;
  }

   /**
   * Correlation Id
   * @return correlationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Correlation Id")

  public String getCorrelationId() {
    return correlationId;
  }


  public void setCorrelationId(String correlationId) {
    this.correlationId = correlationId;
  }


  public CommerceRuntimeChangeMessage userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * User Id that identifies the user that performed the related change
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Id that identifies the user that performed the related change")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public CommerceRuntimeChangeMessage userFirstName(String userFirstName) {
    
    this.userFirstName = userFirstName;
    return this;
  }

   /**
   * User First Name
   * @return userFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User First Name")

  public String getUserFirstName() {
    return userFirstName;
  }


  public void setUserFirstName(String userFirstName) {
    this.userFirstName = userFirstName;
  }


  public CommerceRuntimeChangeMessage userLastName(String userLastName) {
    
    this.userLastName = userLastName;
    return this;
  }

   /**
   * User Last Name
   * @return userLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Last Name")

  public String getUserLastName() {
    return userLastName;
  }


  public void setUserLastName(String userLastName) {
    this.userLastName = userLastName;
  }


  public CommerceRuntimeChangeMessage userScopeType(String userScopeType) {
    
    this.userScopeType = userScopeType;
    return this;
  }

   /**
   * User Type (e.g. Shopper, Admin, etc.)
   * @return userScopeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Type (e.g. Shopper, Admin, etc.)")

  public String getUserScopeType() {
    return userScopeType;
  }


  public void setUserScopeType(String userScopeType) {
    this.userScopeType = userScopeType;
  }


  public CommerceRuntimeChangeMessage appId(String appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * App Id that identifies the user that performed the related change
   * @return appId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "App Id that identifies the user that performed the related change")

  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  public CommerceRuntimeChangeMessage appKey(String appKey) {
    
    this.appKey = appKey;
    return this;
  }

   /**
   * App Key
   * @return appKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "App Key")

  public String getAppKey() {
    return appKey;
  }


  public void setAppKey(String appKey) {
    this.appKey = appKey;
  }


  public CommerceRuntimeChangeMessage appName(String appName) {
    
    this.appName = appName;
    return this;
  }

   /**
   * App Name
   * @return appName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "App Name")

  public String getAppName() {
    return appName;
  }


  public void setAppName(String appName) {
    this.appName = appName;
  }


  public CommerceRuntimeChangeMessage subjectType(String subjectType) {
    
    this.subjectType = subjectType;
    return this;
  }

   /**
   * Subject of the message, for example, \&quot;Product.\&quot; System-supplied. Read-only.
   * @return subjectType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Subject of the message, for example, \"Product.\" System-supplied. Read-only.")

  public String getSubjectType() {
    return subjectType;
  }


  public void setSubjectType(String subjectType) {
    this.subjectType = subjectType;
  }


  public CommerceRuntimeChangeMessage success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Indicates if the message is related to a success or failure.
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates if the message is related to a success or failure.")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public CommerceRuntimeChangeMessage identifier(String identifier) {
    
    this.identifier = identifier;
    return this;
  }

   /**
   * Unique identifier to what the message pertains, which can be a cart item, cart or another generic entity. System-supplied. Read-only.
   * @return identifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier to what the message pertains, which can be a cart item, cart or another generic entity. System-supplied. Read-only.")

  public String getIdentifier() {
    return identifier;
  }


  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public CommerceRuntimeChangeMessage subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Text on the subject line of the message, for example, the product name. System-supplied. Read-only.
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Text on the subject line of the message, for example, the product name. System-supplied. Read-only.")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  public CommerceRuntimeChangeMessage verb(String verb) {
    
    this.verb = verb;
    return this;
  }

   /**
   * Action applicable to the message. This can be \&quot;Increased,\&quot; when the product price has increased, \&quot;Decreased,\&quot; when the   product price has decreased, and \&quot;Invalidated,\&quot; when the product is no longer available. System-supplied. Read-only.
   * @return verb
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Action applicable to the message. This can be \"Increased,\" when the product price has increased, \"Decreased,\" when the   product price has decreased, and \"Invalidated,\" when the product is no longer available. System-supplied. Read-only.")

  public String getVerb() {
    return verb;
  }


  public void setVerb(String verb) {
    this.verb = verb;
  }


  public CommerceRuntimeChangeMessage message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * Human readable message. System-supplied. Read-only.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Human readable message. System-supplied. Read-only.")

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  public CommerceRuntimeChangeMessage metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Data. This property will be a JSON array that will contain 0-N items, when there is 1 item it will still be an array containing only one item. System-supplied. Read-only.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data. This property will be a JSON array that will contain 0-N items, when there is 1 item it will still be an array containing only one item. System-supplied. Read-only.")

  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public CommerceRuntimeChangeMessage oldValue(String oldValue) {
    
    this.oldValue = oldValue;
    return this;
  }

   /**
   * Original price of the item. System-supplied. Read-only.
   * @return oldValue
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Original price of the item. System-supplied. Read-only.")

  public String getOldValue() {
    return oldValue;
  }


  public void setOldValue(String oldValue) {
    this.oldValue = oldValue;
  }


  public CommerceRuntimeChangeMessage newValue(String newValue) {
    
    this.newValue = newValue;
    return this;
  }

   /**
   * Current price of the item. System-supplied. Read-only.
   * @return newValue
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current price of the item. System-supplied. Read-only.")

  public String getNewValue() {
    return newValue;
  }


  public void setNewValue(String newValue) {
    this.newValue = newValue;
  }


  public CommerceRuntimeChangeMessage amount(Double amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Monetary amount that pertains to the change if applicable
   * @return amount
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Monetary amount that pertains to the change if applicable")

  public Double getAmount() {
    return amount;
  }


  public void setAmount(Double amount) {
    this.amount = amount;
  }


  public CommerceRuntimeChangeMessage createDate(OffsetDateTime createDate) {
    
    this.createDate = createDate;
    return this;
  }

   /**
   * When the message was created. System-supplied. Read-only.
   * @return createDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When the message was created. System-supplied. Read-only.")

  public OffsetDateTime getCreateDate() {
    return createDate;
  }


  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public CommerceRuntimeChangeMessage attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public CommerceRuntimeChangeMessage putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Additional Data. This property will be a Dictionary of objects.
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional Data. This property will be a Dictionary of objects.")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommerceRuntimeChangeMessage commerceRuntimeChangeMessage = (CommerceRuntimeChangeMessage) o;
    return Objects.equals(this.id, commerceRuntimeChangeMessage.id) &&
        Objects.equals(this.correlationId, commerceRuntimeChangeMessage.correlationId) &&
        Objects.equals(this.userId, commerceRuntimeChangeMessage.userId) &&
        Objects.equals(this.userFirstName, commerceRuntimeChangeMessage.userFirstName) &&
        Objects.equals(this.userLastName, commerceRuntimeChangeMessage.userLastName) &&
        Objects.equals(this.userScopeType, commerceRuntimeChangeMessage.userScopeType) &&
        Objects.equals(this.appId, commerceRuntimeChangeMessage.appId) &&
        Objects.equals(this.appKey, commerceRuntimeChangeMessage.appKey) &&
        Objects.equals(this.appName, commerceRuntimeChangeMessage.appName) &&
        Objects.equals(this.subjectType, commerceRuntimeChangeMessage.subjectType) &&
        Objects.equals(this.success, commerceRuntimeChangeMessage.success) &&
        Objects.equals(this.identifier, commerceRuntimeChangeMessage.identifier) &&
        Objects.equals(this.subject, commerceRuntimeChangeMessage.subject) &&
        Objects.equals(this.verb, commerceRuntimeChangeMessage.verb) &&
        Objects.equals(this.message, commerceRuntimeChangeMessage.message) &&
        Objects.equals(this.metadata, commerceRuntimeChangeMessage.metadata) &&
        Objects.equals(this.oldValue, commerceRuntimeChangeMessage.oldValue) &&
        Objects.equals(this.newValue, commerceRuntimeChangeMessage.newValue) &&
        Objects.equals(this.amount, commerceRuntimeChangeMessage.amount) &&
        Objects.equals(this.createDate, commerceRuntimeChangeMessage.createDate) &&
        Objects.equals(this.attributes, commerceRuntimeChangeMessage.attributes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, correlationId, userId, userFirstName, userLastName, userScopeType, appId, appKey, appName, subjectType, success, identifier, subject, verb, message, metadata, oldValue, newValue, amount, createDate, attributes);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommerceRuntimeChangeMessage {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    correlationId: ").append(toIndentedString(correlationId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userFirstName: ").append(toIndentedString(userFirstName)).append("\n");
    sb.append("    userLastName: ").append(toIndentedString(userLastName)).append("\n");
    sb.append("    userScopeType: ").append(toIndentedString(userScopeType)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("    appKey: ").append(toIndentedString(appKey)).append("\n");
    sb.append("    appName: ").append(toIndentedString(appName)).append("\n");
    sb.append("    subjectType: ").append(toIndentedString(subjectType)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    verb: ").append(toIndentedString(verb)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("correlationId");
    openapiFields.add("userId");
    openapiFields.add("userFirstName");
    openapiFields.add("userLastName");
    openapiFields.add("userScopeType");
    openapiFields.add("appId");
    openapiFields.add("appKey");
    openapiFields.add("appName");
    openapiFields.add("subjectType");
    openapiFields.add("success");
    openapiFields.add("identifier");
    openapiFields.add("subject");
    openapiFields.add("verb");
    openapiFields.add("message");
    openapiFields.add("metadata");
    openapiFields.add("oldValue");
    openapiFields.add("newValue");
    openapiFields.add("amount");
    openapiFields.add("createDate");
    openapiFields.add("attributes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CommerceRuntimeChangeMessage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CommerceRuntimeChangeMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommerceRuntimeChangeMessage is not found in the empty JSON string", CommerceRuntimeChangeMessage.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CommerceRuntimeChangeMessage.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommerceRuntimeChangeMessage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("correlationId") != null && !jsonObj.get("correlationId").isJsonNull()) && !jsonObj.get("correlationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `correlationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("correlationId").toString()));
      }
      if ((jsonObj.get("userId") != null && !jsonObj.get("userId").isJsonNull()) && !jsonObj.get("userId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userId").toString()));
      }
      if ((jsonObj.get("userFirstName") != null && !jsonObj.get("userFirstName").isJsonNull()) && !jsonObj.get("userFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userFirstName").toString()));
      }
      if ((jsonObj.get("userLastName") != null && !jsonObj.get("userLastName").isJsonNull()) && !jsonObj.get("userLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userLastName").toString()));
      }
      if ((jsonObj.get("userScopeType") != null && !jsonObj.get("userScopeType").isJsonNull()) && !jsonObj.get("userScopeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userScopeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userScopeType").toString()));
      }
      if ((jsonObj.get("appId") != null && !jsonObj.get("appId").isJsonNull()) && !jsonObj.get("appId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appId").toString()));
      }
      if ((jsonObj.get("appKey") != null && !jsonObj.get("appKey").isJsonNull()) && !jsonObj.get("appKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appKey").toString()));
      }
      if ((jsonObj.get("appName") != null && !jsonObj.get("appName").isJsonNull()) && !jsonObj.get("appName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appName").toString()));
      }
      if ((jsonObj.get("subjectType") != null && !jsonObj.get("subjectType").isJsonNull()) && !jsonObj.get("subjectType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subjectType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subjectType").toString()));
      }
      if ((jsonObj.get("identifier") != null && !jsonObj.get("identifier").isJsonNull()) && !jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      if ((jsonObj.get("verb") != null && !jsonObj.get("verb").isJsonNull()) && !jsonObj.get("verb").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `verb` to be a primitive type in the JSON string but got `%s`", jsonObj.get("verb").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("oldValue") != null && !jsonObj.get("oldValue").isJsonNull()) && !jsonObj.get("oldValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldValue").toString()));
      }
      if ((jsonObj.get("newValue") != null && !jsonObj.get("newValue").isJsonNull()) && !jsonObj.get("newValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommerceRuntimeChangeMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommerceRuntimeChangeMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommerceRuntimeChangeMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommerceRuntimeChangeMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<CommerceRuntimeChangeMessage>() {
           @Override
           public void write(JsonWriter out, CommerceRuntimeChangeMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommerceRuntimeChangeMessage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CommerceRuntimeChangeMessage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CommerceRuntimeChangeMessage
  * @throws IOException if the JSON string is invalid with respect to CommerceRuntimeChangeMessage
  */
  public static CommerceRuntimeChangeMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommerceRuntimeChangeMessage.class);
  }

 /**
  * Convert an instance of CommerceRuntimeChangeMessage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

