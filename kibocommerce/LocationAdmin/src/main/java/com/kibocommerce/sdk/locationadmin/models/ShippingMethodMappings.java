/*
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.locationadmin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * ShippingMethodMappings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ShippingMethodMappings implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_SHIPPING_METHODS = "shippingMethods";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHODS)
  private List<String> shippingMethods = null;

  public static final String SERIALIZED_NAME_RETURN_LABEL_SHIPPING_METHOD = "returnLabelShippingMethod";
  @SerializedName(SERIALIZED_NAME_RETURN_LABEL_SHIPPING_METHOD)
  private String returnLabelShippingMethod;

  public static final String SERIALIZED_NAME_STANDARD_DEFAULT = "standardDefault";
  @SerializedName(SERIALIZED_NAME_STANDARD_DEFAULT)
  private String standardDefault;

  public static final String SERIALIZED_NAME_EXPRESS1_DAY_DEFAULT = "express1DayDefault";
  @SerializedName(SERIALIZED_NAME_EXPRESS1_DAY_DEFAULT)
  private String express1DayDefault;

  public static final String SERIALIZED_NAME_EXPRESS2_DAY_DEFAULT = "express2DayDefault";
  @SerializedName(SERIALIZED_NAME_EXPRESS2_DAY_DEFAULT)
  private String express2DayDefault;

  public static final String SERIALIZED_NAME_EXPRESS3_DAY_DEFAULT = "express3DayDefault";
  @SerializedName(SERIALIZED_NAME_EXPRESS3_DAY_DEFAULT)
  private String express3DayDefault;

  public static final String SERIALIZED_NAME_ENABLE_SMART_POST = "enableSmartPost";
  @SerializedName(SERIALIZED_NAME_ENABLE_SMART_POST)
  private Boolean enableSmartPost;

  public static final String SERIALIZED_NAME_USE_DECLARED_VALUE = "useDeclaredValue";
  @SerializedName(SERIALIZED_NAME_USE_DECLARED_VALUE)
  private Boolean useDeclaredValue;

  public static final String SERIALIZED_NAME_INTERNATIONAL_US_RETURN_LABEL_SHIPPING_METHOD = "internationalUsReturnLabelShippingMethod";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_US_RETURN_LABEL_SHIPPING_METHOD)
  private String internationalUsReturnLabelShippingMethod;

  public ShippingMethodMappings() {
  }

  public ShippingMethodMappings shippingMethods(List<String> shippingMethods) {
    
    this.shippingMethods = shippingMethods;
    return this;
  }

  public ShippingMethodMappings addShippingMethodsItem(String shippingMethodsItem) {
    if (this.shippingMethods == null) {
      this.shippingMethods = new ArrayList<>();
    }
    this.shippingMethods.add(shippingMethodsItem);
    return this;
  }

   /**
   * Get shippingMethods
   * @return shippingMethods
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getShippingMethods() {
    return shippingMethods;
  }


  public void setShippingMethods(List<String> shippingMethods) {
    this.shippingMethods = shippingMethods;
  }


  public ShippingMethodMappings returnLabelShippingMethod(String returnLabelShippingMethod) {
    
    this.returnLabelShippingMethod = returnLabelShippingMethod;
    return this;
  }

   /**
   * Get returnLabelShippingMethod
   * @return returnLabelShippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReturnLabelShippingMethod() {
    return returnLabelShippingMethod;
  }


  public void setReturnLabelShippingMethod(String returnLabelShippingMethod) {
    this.returnLabelShippingMethod = returnLabelShippingMethod;
  }


  public ShippingMethodMappings standardDefault(String standardDefault) {
    
    this.standardDefault = standardDefault;
    return this;
  }

   /**
   * Get standardDefault
   * @return standardDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStandardDefault() {
    return standardDefault;
  }


  public void setStandardDefault(String standardDefault) {
    this.standardDefault = standardDefault;
  }


  public ShippingMethodMappings express1DayDefault(String express1DayDefault) {
    
    this.express1DayDefault = express1DayDefault;
    return this;
  }

   /**
   * Get express1DayDefault
   * @return express1DayDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpress1DayDefault() {
    return express1DayDefault;
  }


  public void setExpress1DayDefault(String express1DayDefault) {
    this.express1DayDefault = express1DayDefault;
  }


  public ShippingMethodMappings express2DayDefault(String express2DayDefault) {
    
    this.express2DayDefault = express2DayDefault;
    return this;
  }

   /**
   * Get express2DayDefault
   * @return express2DayDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpress2DayDefault() {
    return express2DayDefault;
  }


  public void setExpress2DayDefault(String express2DayDefault) {
    this.express2DayDefault = express2DayDefault;
  }


  public ShippingMethodMappings express3DayDefault(String express3DayDefault) {
    
    this.express3DayDefault = express3DayDefault;
    return this;
  }

   /**
   * Get express3DayDefault
   * @return express3DayDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExpress3DayDefault() {
    return express3DayDefault;
  }


  public void setExpress3DayDefault(String express3DayDefault) {
    this.express3DayDefault = express3DayDefault;
  }


  public ShippingMethodMappings enableSmartPost(Boolean enableSmartPost) {
    
    this.enableSmartPost = enableSmartPost;
    return this;
  }

   /**
   * Get enableSmartPost
   * @return enableSmartPost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnableSmartPost() {
    return enableSmartPost;
  }


  public void setEnableSmartPost(Boolean enableSmartPost) {
    this.enableSmartPost = enableSmartPost;
  }


  public ShippingMethodMappings useDeclaredValue(Boolean useDeclaredValue) {
    
    this.useDeclaredValue = useDeclaredValue;
    return this;
  }

   /**
   * Get useDeclaredValue
   * @return useDeclaredValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseDeclaredValue() {
    return useDeclaredValue;
  }


  public void setUseDeclaredValue(Boolean useDeclaredValue) {
    this.useDeclaredValue = useDeclaredValue;
  }


  public ShippingMethodMappings internationalUsReturnLabelShippingMethod(String internationalUsReturnLabelShippingMethod) {
    
    this.internationalUsReturnLabelShippingMethod = internationalUsReturnLabelShippingMethod;
    return this;
  }

   /**
   * Get internationalUsReturnLabelShippingMethod
   * @return internationalUsReturnLabelShippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInternationalUsReturnLabelShippingMethod() {
    return internationalUsReturnLabelShippingMethod;
  }


  public void setInternationalUsReturnLabelShippingMethod(String internationalUsReturnLabelShippingMethod) {
    this.internationalUsReturnLabelShippingMethod = internationalUsReturnLabelShippingMethod;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingMethodMappings shippingMethodMappings = (ShippingMethodMappings) o;
    return Objects.equals(this.shippingMethods, shippingMethodMappings.shippingMethods) &&
        Objects.equals(this.returnLabelShippingMethod, shippingMethodMappings.returnLabelShippingMethod) &&
        Objects.equals(this.standardDefault, shippingMethodMappings.standardDefault) &&
        Objects.equals(this.express1DayDefault, shippingMethodMappings.express1DayDefault) &&
        Objects.equals(this.express2DayDefault, shippingMethodMappings.express2DayDefault) &&
        Objects.equals(this.express3DayDefault, shippingMethodMappings.express3DayDefault) &&
        Objects.equals(this.enableSmartPost, shippingMethodMappings.enableSmartPost) &&
        Objects.equals(this.useDeclaredValue, shippingMethodMappings.useDeclaredValue) &&
        Objects.equals(this.internationalUsReturnLabelShippingMethod, shippingMethodMappings.internationalUsReturnLabelShippingMethod);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(shippingMethods, returnLabelShippingMethod, standardDefault, express1DayDefault, express2DayDefault, express3DayDefault, enableSmartPost, useDeclaredValue, internationalUsReturnLabelShippingMethod);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingMethodMappings {\n");
    sb.append("    shippingMethods: ").append(toIndentedString(shippingMethods)).append("\n");
    sb.append("    returnLabelShippingMethod: ").append(toIndentedString(returnLabelShippingMethod)).append("\n");
    sb.append("    standardDefault: ").append(toIndentedString(standardDefault)).append("\n");
    sb.append("    express1DayDefault: ").append(toIndentedString(express1DayDefault)).append("\n");
    sb.append("    express2DayDefault: ").append(toIndentedString(express2DayDefault)).append("\n");
    sb.append("    express3DayDefault: ").append(toIndentedString(express3DayDefault)).append("\n");
    sb.append("    enableSmartPost: ").append(toIndentedString(enableSmartPost)).append("\n");
    sb.append("    useDeclaredValue: ").append(toIndentedString(useDeclaredValue)).append("\n");
    sb.append("    internationalUsReturnLabelShippingMethod: ").append(toIndentedString(internationalUsReturnLabelShippingMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("shippingMethods");
    openapiFields.add("returnLabelShippingMethod");
    openapiFields.add("standardDefault");
    openapiFields.add("express1DayDefault");
    openapiFields.add("express2DayDefault");
    openapiFields.add("express3DayDefault");
    openapiFields.add("enableSmartPost");
    openapiFields.add("useDeclaredValue");
    openapiFields.add("internationalUsReturnLabelShippingMethod");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ShippingMethodMappings
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ShippingMethodMappings.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ShippingMethodMappings is not found in the empty JSON string", ShippingMethodMappings.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ShippingMethodMappings.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ShippingMethodMappings` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      // ensure the json data is an array
      if (!jsonObj.get("shippingMethods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingMethods` to be an array in the JSON string but got `%s`", jsonObj.get("shippingMethods").toString()));
      }
      if ((jsonObj.get("returnLabelShippingMethod") != null && !jsonObj.get("returnLabelShippingMethod").isJsonNull()) && !jsonObj.get("returnLabelShippingMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnLabelShippingMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnLabelShippingMethod").toString()));
      }
      if ((jsonObj.get("standardDefault") != null && !jsonObj.get("standardDefault").isJsonNull()) && !jsonObj.get("standardDefault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `standardDefault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("standardDefault").toString()));
      }
      if ((jsonObj.get("express1DayDefault") != null && !jsonObj.get("express1DayDefault").isJsonNull()) && !jsonObj.get("express1DayDefault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `express1DayDefault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("express1DayDefault").toString()));
      }
      if ((jsonObj.get("express2DayDefault") != null && !jsonObj.get("express2DayDefault").isJsonNull()) && !jsonObj.get("express2DayDefault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `express2DayDefault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("express2DayDefault").toString()));
      }
      if ((jsonObj.get("express3DayDefault") != null && !jsonObj.get("express3DayDefault").isJsonNull()) && !jsonObj.get("express3DayDefault").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `express3DayDefault` to be a primitive type in the JSON string but got `%s`", jsonObj.get("express3DayDefault").toString()));
      }
      if ((jsonObj.get("internationalUsReturnLabelShippingMethod") != null && !jsonObj.get("internationalUsReturnLabelShippingMethod").isJsonNull()) && !jsonObj.get("internationalUsReturnLabelShippingMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internationalUsReturnLabelShippingMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internationalUsReturnLabelShippingMethod").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ShippingMethodMappings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ShippingMethodMappings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ShippingMethodMappings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ShippingMethodMappings.class));

       return (TypeAdapter<T>) new TypeAdapter<ShippingMethodMappings>() {
           @Override
           public void write(JsonWriter out, ShippingMethodMappings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ShippingMethodMappings read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ShippingMethodMappings given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ShippingMethodMappings
  * @throws IOException if the JSON string is invalid with respect to ShippingMethodMappings
  */
  public static ShippingMethodMappings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ShippingMethodMappings.class);
  }

 /**
  * Convert an instance of ShippingMethodMappings to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

