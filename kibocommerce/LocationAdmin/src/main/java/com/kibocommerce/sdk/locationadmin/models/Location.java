/*
 * Kibo Location Admin Service
 * OpenAPI Spec for Kibo Location Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.locationadmin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.locationadmin.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.locationadmin.models.CommerceRuntimeAddress;
import com.kibocommerce.sdk.locationadmin.models.Coordinates;
import com.kibocommerce.sdk.locationadmin.models.FulfillmentType;
import com.kibocommerce.sdk.locationadmin.models.LocationAttribute;
import com.kibocommerce.sdk.locationadmin.models.LocationType;
import com.kibocommerce.sdk.locationadmin.models.ProcessingTime;
import com.kibocommerce.sdk.locationadmin.models.RegularHours;
import com.kibocommerce.sdk.locationadmin.models.ShippingOriginContact;
import com.kibocommerce.sdk.locationadmin.models.TransferTime;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Location
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Location implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_LOCATION_TYPES = "locationTypes";
  @SerializedName(SERIALIZED_NAME_LOCATION_TYPES)
  private List<LocationType> locationTypes = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private CommerceRuntimeAddress address;

  public static final String SERIALIZED_NAME_GEO = "geo";
  @SerializedName(SERIALIZED_NAME_GEO)
  private Coordinates geo;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_FAX = "fax";
  @SerializedName(SERIALIZED_NAME_FAX)
  private String fax;

  public static final String SERIALIZED_NAME_SUPPORTS_INVENTORY = "supportsInventory";
  @SerializedName(SERIALIZED_NAME_SUPPORTS_INVENTORY)
  private Boolean supportsInventory;

  public static final String SERIALIZED_NAME_FULFILLMENT_TYPES = "fulfillmentTypes";
  @SerializedName(SERIALIZED_NAME_FULFILLMENT_TYPES)
  private List<FulfillmentType> fulfillmentTypes = null;

  public static final String SERIALIZED_NAME_REGULAR_HOURS = "regularHours";
  @SerializedName(SERIALIZED_NAME_REGULAR_HOURS)
  private RegularHours regularHours;

  public static final String SERIALIZED_NAME_SHIPPING_ORIGIN_CONTACT = "shippingOriginContact";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ORIGIN_CONTACT)
  private ShippingOriginContact shippingOriginContact;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<LocationAttribute> attributes = null;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_ALLOW_FULFILLMENT_WITH_NO_STOCK = "allowFulfillmentWithNoStock";
  @SerializedName(SERIALIZED_NAME_ALLOW_FULFILLMENT_WITH_NO_STOCK)
  private Boolean allowFulfillmentWithNoStock;

  public static final String SERIALIZED_NAME_IS_DISABLED = "isDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  private Boolean isDisabled;

  public static final String SERIALIZED_NAME_EXPRESS = "express";
  @SerializedName(SERIALIZED_NAME_EXPRESS)
  private Boolean express;

  public static final String SERIALIZED_NAME_TRANSFER_ENABLED = "transferEnabled";
  @SerializedName(SERIALIZED_NAME_TRANSFER_ENABLED)
  private Boolean transferEnabled;

  public static final String SERIALIZED_NAME_SHIP_TO_HOME_CONSOLIDATION = "shipToHomeConsolidation";
  @SerializedName(SERIALIZED_NAME_SHIP_TO_HOME_CONSOLIDATION)
  private Boolean shipToHomeConsolidation;

  public static final String SERIALIZED_NAME_INCLUDE_IN_INVENTORY_AGGREGRATE = "includeInInventoryAggregrate";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_INVENTORY_AGGREGRATE)
  private Boolean includeInInventoryAggregrate;

  public static final String SERIALIZED_NAME_INCLUDE_IN_LOCATION_EXPORT = "includeInLocationExport";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_LOCATION_EXPORT)
  private Boolean includeInLocationExport;

  public static final String SERIALIZED_NAME_WAREHOUSE_ENABLED = "warehouseEnabled";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_ENABLED)
  private Boolean warehouseEnabled;

  public static final String SERIALIZED_NAME_REQUIRES_MANIFEST = "requiresManifest";
  @SerializedName(SERIALIZED_NAME_REQUIRES_MANIFEST)
  private Boolean requiresManifest;

  public static final String SERIALIZED_NAME_PROCESSING_TIMES = "processingTimes";
  @SerializedName(SERIALIZED_NAME_PROCESSING_TIMES)
  private List<ProcessingTime> processingTimes = null;

  public static final String SERIALIZED_NAME_TRANSFER_TIME = "transferTime";
  @SerializedName(SERIALIZED_NAME_TRANSFER_TIME)
  private TransferTime transferTime;

  public Location() {
  }

  public Location code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public Location locationTypes(List<LocationType> locationTypes) {
    
    this.locationTypes = locationTypes;
    return this;
  }

  public Location addLocationTypesItem(LocationType locationTypesItem) {
    if (this.locationTypes == null) {
      this.locationTypes = new ArrayList<>();
    }
    this.locationTypes.add(locationTypesItem);
    return this;
  }

   /**
   * Get locationTypes
   * @return locationTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LocationType> getLocationTypes() {
    return locationTypes;
  }


  public void setLocationTypes(List<LocationType> locationTypes) {
    this.locationTypes = locationTypes;
  }


  public Location name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Location description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Location address(CommerceRuntimeAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CommerceRuntimeAddress getAddress() {
    return address;
  }


  public void setAddress(CommerceRuntimeAddress address) {
    this.address = address;
  }


  public Location geo(Coordinates geo) {
    
    this.geo = geo;
    return this;
  }

   /**
   * Get geo
   * @return geo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Coordinates getGeo() {
    return geo;
  }


  public void setGeo(Coordinates geo) {
    this.geo = geo;
  }


  public Location phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
  }


  public Location fax(String fax) {
    
    this.fax = fax;
    return this;
  }

   /**
   * Get fax
   * @return fax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFax() {
    return fax;
  }


  public void setFax(String fax) {
    this.fax = fax;
  }


  public Location supportsInventory(Boolean supportsInventory) {
    
    this.supportsInventory = supportsInventory;
    return this;
  }

   /**
   * Get supportsInventory
   * @return supportsInventory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSupportsInventory() {
    return supportsInventory;
  }


  public void setSupportsInventory(Boolean supportsInventory) {
    this.supportsInventory = supportsInventory;
  }


  public Location fulfillmentTypes(List<FulfillmentType> fulfillmentTypes) {
    
    this.fulfillmentTypes = fulfillmentTypes;
    return this;
  }

  public Location addFulfillmentTypesItem(FulfillmentType fulfillmentTypesItem) {
    if (this.fulfillmentTypes == null) {
      this.fulfillmentTypes = new ArrayList<>();
    }
    this.fulfillmentTypes.add(fulfillmentTypesItem);
    return this;
  }

   /**
   * Get fulfillmentTypes
   * @return fulfillmentTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<FulfillmentType> getFulfillmentTypes() {
    return fulfillmentTypes;
  }


  public void setFulfillmentTypes(List<FulfillmentType> fulfillmentTypes) {
    this.fulfillmentTypes = fulfillmentTypes;
  }


  public Location regularHours(RegularHours regularHours) {
    
    this.regularHours = regularHours;
    return this;
  }

   /**
   * Get regularHours
   * @return regularHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegularHours getRegularHours() {
    return regularHours;
  }


  public void setRegularHours(RegularHours regularHours) {
    this.regularHours = regularHours;
  }


  public Location shippingOriginContact(ShippingOriginContact shippingOriginContact) {
    
    this.shippingOriginContact = shippingOriginContact;
    return this;
  }

   /**
   * Get shippingOriginContact
   * @return shippingOriginContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ShippingOriginContact getShippingOriginContact() {
    return shippingOriginContact;
  }


  public void setShippingOriginContact(ShippingOriginContact shippingOriginContact) {
    this.shippingOriginContact = shippingOriginContact;
  }


  public Location note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public Location tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public Location addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Location attributes(List<LocationAttribute> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public Location addAttributesItem(LocationAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<LocationAttribute> getAttributes() {
    return attributes;
  }


  public void setAttributes(List<LocationAttribute> attributes) {
    this.attributes = attributes;
  }


  public Location auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public Location allowFulfillmentWithNoStock(Boolean allowFulfillmentWithNoStock) {
    
    this.allowFulfillmentWithNoStock = allowFulfillmentWithNoStock;
    return this;
  }

   /**
   * Get allowFulfillmentWithNoStock
   * @return allowFulfillmentWithNoStock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowFulfillmentWithNoStock() {
    return allowFulfillmentWithNoStock;
  }


  public void setAllowFulfillmentWithNoStock(Boolean allowFulfillmentWithNoStock) {
    this.allowFulfillmentWithNoStock = allowFulfillmentWithNoStock;
  }


  public Location isDisabled(Boolean isDisabled) {
    
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * Get isDisabled
   * @return isDisabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDisabled() {
    return isDisabled;
  }


  public void setIsDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  public Location express(Boolean express) {
    
    this.express = express;
    return this;
  }

   /**
   * Get express
   * @return express
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getExpress() {
    return express;
  }


  public void setExpress(Boolean express) {
    this.express = express;
  }


  public Location transferEnabled(Boolean transferEnabled) {
    
    this.transferEnabled = transferEnabled;
    return this;
  }

   /**
   * Get transferEnabled
   * @return transferEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTransferEnabled() {
    return transferEnabled;
  }


  public void setTransferEnabled(Boolean transferEnabled) {
    this.transferEnabled = transferEnabled;
  }


  public Location shipToHomeConsolidation(Boolean shipToHomeConsolidation) {
    
    this.shipToHomeConsolidation = shipToHomeConsolidation;
    return this;
  }

   /**
   * Get shipToHomeConsolidation
   * @return shipToHomeConsolidation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShipToHomeConsolidation() {
    return shipToHomeConsolidation;
  }


  public void setShipToHomeConsolidation(Boolean shipToHomeConsolidation) {
    this.shipToHomeConsolidation = shipToHomeConsolidation;
  }


  public Location includeInInventoryAggregrate(Boolean includeInInventoryAggregrate) {
    
    this.includeInInventoryAggregrate = includeInInventoryAggregrate;
    return this;
  }

   /**
   * Get includeInInventoryAggregrate
   * @return includeInInventoryAggregrate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeInInventoryAggregrate() {
    return includeInInventoryAggregrate;
  }


  public void setIncludeInInventoryAggregrate(Boolean includeInInventoryAggregrate) {
    this.includeInInventoryAggregrate = includeInInventoryAggregrate;
  }


  public Location includeInLocationExport(Boolean includeInLocationExport) {
    
    this.includeInLocationExport = includeInLocationExport;
    return this;
  }

   /**
   * Get includeInLocationExport
   * @return includeInLocationExport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeInLocationExport() {
    return includeInLocationExport;
  }


  public void setIncludeInLocationExport(Boolean includeInLocationExport) {
    this.includeInLocationExport = includeInLocationExport;
  }


  public Location warehouseEnabled(Boolean warehouseEnabled) {
    
    this.warehouseEnabled = warehouseEnabled;
    return this;
  }

   /**
   * Get warehouseEnabled
   * @return warehouseEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWarehouseEnabled() {
    return warehouseEnabled;
  }


  public void setWarehouseEnabled(Boolean warehouseEnabled) {
    this.warehouseEnabled = warehouseEnabled;
  }


  public Location requiresManifest(Boolean requiresManifest) {
    
    this.requiresManifest = requiresManifest;
    return this;
  }

   /**
   * Get requiresManifest
   * @return requiresManifest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequiresManifest() {
    return requiresManifest;
  }


  public void setRequiresManifest(Boolean requiresManifest) {
    this.requiresManifest = requiresManifest;
  }


  public Location processingTimes(List<ProcessingTime> processingTimes) {
    
    this.processingTimes = processingTimes;
    return this;
  }

  public Location addProcessingTimesItem(ProcessingTime processingTimesItem) {
    if (this.processingTimes == null) {
      this.processingTimes = new ArrayList<>();
    }
    this.processingTimes.add(processingTimesItem);
    return this;
  }

   /**
   * Get processingTimes
   * @return processingTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProcessingTime> getProcessingTimes() {
    return processingTimes;
  }


  public void setProcessingTimes(List<ProcessingTime> processingTimes) {
    this.processingTimes = processingTimes;
  }


  public Location transferTime(TransferTime transferTime) {
    
    this.transferTime = transferTime;
    return this;
  }

   /**
   * Get transferTime
   * @return transferTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TransferTime getTransferTime() {
    return transferTime;
  }


  public void setTransferTime(TransferTime transferTime) {
    this.transferTime = transferTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return Objects.equals(this.code, location.code) &&
        Objects.equals(this.locationTypes, location.locationTypes) &&
        Objects.equals(this.name, location.name) &&
        Objects.equals(this.description, location.description) &&
        Objects.equals(this.address, location.address) &&
        Objects.equals(this.geo, location.geo) &&
        Objects.equals(this.phone, location.phone) &&
        Objects.equals(this.fax, location.fax) &&
        Objects.equals(this.supportsInventory, location.supportsInventory) &&
        Objects.equals(this.fulfillmentTypes, location.fulfillmentTypes) &&
        Objects.equals(this.regularHours, location.regularHours) &&
        Objects.equals(this.shippingOriginContact, location.shippingOriginContact) &&
        Objects.equals(this.note, location.note) &&
        Objects.equals(this.tags, location.tags) &&
        Objects.equals(this.attributes, location.attributes) &&
        Objects.equals(this.auditInfo, location.auditInfo) &&
        Objects.equals(this.allowFulfillmentWithNoStock, location.allowFulfillmentWithNoStock) &&
        Objects.equals(this.isDisabled, location.isDisabled) &&
        Objects.equals(this.express, location.express) &&
        Objects.equals(this.transferEnabled, location.transferEnabled) &&
        Objects.equals(this.shipToHomeConsolidation, location.shipToHomeConsolidation) &&
        Objects.equals(this.includeInInventoryAggregrate, location.includeInInventoryAggregrate) &&
        Objects.equals(this.includeInLocationExport, location.includeInLocationExport) &&
        Objects.equals(this.warehouseEnabled, location.warehouseEnabled) &&
        Objects.equals(this.requiresManifest, location.requiresManifest) &&
        Objects.equals(this.processingTimes, location.processingTimes) &&
        Objects.equals(this.transferTime, location.transferTime);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, locationTypes, name, description, address, geo, phone, fax, supportsInventory, fulfillmentTypes, regularHours, shippingOriginContact, note, tags, attributes, auditInfo, allowFulfillmentWithNoStock, isDisabled, express, transferEnabled, shipToHomeConsolidation, includeInInventoryAggregrate, includeInLocationExport, warehouseEnabled, requiresManifest, processingTimes, transferTime);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    locationTypes: ").append(toIndentedString(locationTypes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    geo: ").append(toIndentedString(geo)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    supportsInventory: ").append(toIndentedString(supportsInventory)).append("\n");
    sb.append("    fulfillmentTypes: ").append(toIndentedString(fulfillmentTypes)).append("\n");
    sb.append("    regularHours: ").append(toIndentedString(regularHours)).append("\n");
    sb.append("    shippingOriginContact: ").append(toIndentedString(shippingOriginContact)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    allowFulfillmentWithNoStock: ").append(toIndentedString(allowFulfillmentWithNoStock)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    express: ").append(toIndentedString(express)).append("\n");
    sb.append("    transferEnabled: ").append(toIndentedString(transferEnabled)).append("\n");
    sb.append("    shipToHomeConsolidation: ").append(toIndentedString(shipToHomeConsolidation)).append("\n");
    sb.append("    includeInInventoryAggregrate: ").append(toIndentedString(includeInInventoryAggregrate)).append("\n");
    sb.append("    includeInLocationExport: ").append(toIndentedString(includeInLocationExport)).append("\n");
    sb.append("    warehouseEnabled: ").append(toIndentedString(warehouseEnabled)).append("\n");
    sb.append("    requiresManifest: ").append(toIndentedString(requiresManifest)).append("\n");
    sb.append("    processingTimes: ").append(toIndentedString(processingTimes)).append("\n");
    sb.append("    transferTime: ").append(toIndentedString(transferTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("locationTypes");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("address");
    openapiFields.add("geo");
    openapiFields.add("phone");
    openapiFields.add("fax");
    openapiFields.add("supportsInventory");
    openapiFields.add("fulfillmentTypes");
    openapiFields.add("regularHours");
    openapiFields.add("shippingOriginContact");
    openapiFields.add("note");
    openapiFields.add("tags");
    openapiFields.add("attributes");
    openapiFields.add("auditInfo");
    openapiFields.add("allowFulfillmentWithNoStock");
    openapiFields.add("isDisabled");
    openapiFields.add("express");
    openapiFields.add("transferEnabled");
    openapiFields.add("shipToHomeConsolidation");
    openapiFields.add("includeInInventoryAggregrate");
    openapiFields.add("includeInLocationExport");
    openapiFields.add("warehouseEnabled");
    openapiFields.add("requiresManifest");
    openapiFields.add("processingTimes");
    openapiFields.add("transferTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Location
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Location.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Location is not found in the empty JSON string", Location.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!Location.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Location` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if (jsonObj.get("locationTypes") != null && !jsonObj.get("locationTypes").isJsonNull()) {
        JsonArray jsonArraylocationTypes = jsonObj.getAsJsonArray("locationTypes");
        if (jsonArraylocationTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("locationTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `locationTypes` to be an array in the JSON string but got `%s`", jsonObj.get("locationTypes").toString()));
          }

          // validate the optional field `locationTypes` (array)
          for (int i = 0; i < jsonArraylocationTypes.size(); i++) {
            LocationType.validateJsonObject(jsonArraylocationTypes.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        CommerceRuntimeAddress.validateJsonObject(jsonObj.getAsJsonObject("address"));
      }
      // validate the optional field `geo`
      if (jsonObj.get("geo") != null && !jsonObj.get("geo").isJsonNull()) {
        Coordinates.validateJsonObject(jsonObj.getAsJsonObject("geo"));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("fax") != null && !jsonObj.get("fax").isJsonNull()) && !jsonObj.get("fax").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fax` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fax").toString()));
      }
      if (jsonObj.get("fulfillmentTypes") != null && !jsonObj.get("fulfillmentTypes").isJsonNull()) {
        JsonArray jsonArrayfulfillmentTypes = jsonObj.getAsJsonArray("fulfillmentTypes");
        if (jsonArrayfulfillmentTypes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("fulfillmentTypes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `fulfillmentTypes` to be an array in the JSON string but got `%s`", jsonObj.get("fulfillmentTypes").toString()));
          }

          // validate the optional field `fulfillmentTypes` (array)
          for (int i = 0; i < jsonArrayfulfillmentTypes.size(); i++) {
            FulfillmentType.validateJsonObject(jsonArrayfulfillmentTypes.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `regularHours`
      if (jsonObj.get("regularHours") != null && !jsonObj.get("regularHours").isJsonNull()) {
        RegularHours.validateJsonObject(jsonObj.getAsJsonObject("regularHours"));
      }
      // validate the optional field `shippingOriginContact`
      if (jsonObj.get("shippingOriginContact") != null && !jsonObj.get("shippingOriginContact").isJsonNull()) {
        ShippingOriginContact.validateJsonObject(jsonObj.getAsJsonObject("shippingOriginContact"));
      }
      if ((jsonObj.get("note") != null && !jsonObj.get("note").isJsonNull()) && !jsonObj.get("note").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("note").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            LocationAttribute.validateJsonObject(jsonArrayattributes.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
      if (jsonObj.get("processingTimes") != null && !jsonObj.get("processingTimes").isJsonNull()) {
        JsonArray jsonArrayprocessingTimes = jsonObj.getAsJsonArray("processingTimes");
        if (jsonArrayprocessingTimes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("processingTimes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `processingTimes` to be an array in the JSON string but got `%s`", jsonObj.get("processingTimes").toString()));
          }

          // validate the optional field `processingTimes` (array)
          for (int i = 0; i < jsonArrayprocessingTimes.size(); i++) {
            ProcessingTime.validateJsonObject(jsonArrayprocessingTimes.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `transferTime`
      if (jsonObj.get("transferTime") != null && !jsonObj.get("transferTime").isJsonNull()) {
        TransferTime.validateJsonObject(jsonObj.getAsJsonObject("transferTime"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Location.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Location' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Location> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Location.class));

       return (TypeAdapter<T>) new TypeAdapter<Location>() {
           @Override
           public void write(JsonWriter out, Location value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Location read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Location given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Location
  * @throws IOException if the JSON string is invalid with respect to Location
  */
  public static Location fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Location.class);
  }

 /**
  * Convert an instance of Location to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

