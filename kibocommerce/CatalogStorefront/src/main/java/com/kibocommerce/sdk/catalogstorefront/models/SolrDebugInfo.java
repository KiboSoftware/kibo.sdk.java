/*
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogstorefront.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * SolrDebugInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SolrDebugInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_SEARCH_TUNING_RULE_CODE = "searchTuningRuleCode";
  @SerializedName(SERIALIZED_NAME_SEARCH_TUNING_RULE_CODE)
  private String searchTuningRuleCode;

  public static final String SERIALIZED_NAME_BOOSTED_PRODUCT_CODES = "boostedProductCodes";
  @SerializedName(SERIALIZED_NAME_BOOSTED_PRODUCT_CODES)
  private List<String> boostedProductCodes = null;

  public static final String SERIALIZED_NAME_BLOCKED_PRODUCT_CODES = "blockedProductCodes";
  @SerializedName(SERIALIZED_NAME_BLOCKED_PRODUCT_CODES)
  private List<String> blockedProductCodes = null;

  public static final String SERIALIZED_NAME_BOOST_QUERIES = "boostQueries";
  @SerializedName(SERIALIZED_NAME_BOOST_QUERIES)
  private List<String> boostQueries = null;

  public static final String SERIALIZED_NAME_BOOST_FUNCTIONS = "boostFunctions";
  @SerializedName(SERIALIZED_NAME_BOOST_FUNCTIONS)
  private List<String> boostFunctions = null;

  public static final String SERIALIZED_NAME_SOLR_URL = "solrUrl";
  @SerializedName(SERIALIZED_NAME_SOLR_URL)
  private String solrUrl;

  public SolrDebugInfo() {
  }

  public SolrDebugInfo searchTuningRuleCode(String searchTuningRuleCode) {
    
    this.searchTuningRuleCode = searchTuningRuleCode;
    return this;
  }

   /**
   * Get searchTuningRuleCode
   * @return searchTuningRuleCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSearchTuningRuleCode() {
    return searchTuningRuleCode;
  }


  public void setSearchTuningRuleCode(String searchTuningRuleCode) {
    this.searchTuningRuleCode = searchTuningRuleCode;
  }


  public SolrDebugInfo boostedProductCodes(List<String> boostedProductCodes) {
    
    this.boostedProductCodes = boostedProductCodes;
    return this;
  }

  public SolrDebugInfo addBoostedProductCodesItem(String boostedProductCodesItem) {
    if (this.boostedProductCodes == null) {
      this.boostedProductCodes = new ArrayList<>();
    }
    this.boostedProductCodes.add(boostedProductCodesItem);
    return this;
  }

   /**
   * Get boostedProductCodes
   * @return boostedProductCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getBoostedProductCodes() {
    return boostedProductCodes;
  }


  public void setBoostedProductCodes(List<String> boostedProductCodes) {
    this.boostedProductCodes = boostedProductCodes;
  }


  public SolrDebugInfo blockedProductCodes(List<String> blockedProductCodes) {
    
    this.blockedProductCodes = blockedProductCodes;
    return this;
  }

  public SolrDebugInfo addBlockedProductCodesItem(String blockedProductCodesItem) {
    if (this.blockedProductCodes == null) {
      this.blockedProductCodes = new ArrayList<>();
    }
    this.blockedProductCodes.add(blockedProductCodesItem);
    return this;
  }

   /**
   * Get blockedProductCodes
   * @return blockedProductCodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getBlockedProductCodes() {
    return blockedProductCodes;
  }


  public void setBlockedProductCodes(List<String> blockedProductCodes) {
    this.blockedProductCodes = blockedProductCodes;
  }


  public SolrDebugInfo boostQueries(List<String> boostQueries) {
    
    this.boostQueries = boostQueries;
    return this;
  }

  public SolrDebugInfo addBoostQueriesItem(String boostQueriesItem) {
    if (this.boostQueries == null) {
      this.boostQueries = new ArrayList<>();
    }
    this.boostQueries.add(boostQueriesItem);
    return this;
  }

   /**
   * Get boostQueries
   * @return boostQueries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getBoostQueries() {
    return boostQueries;
  }


  public void setBoostQueries(List<String> boostQueries) {
    this.boostQueries = boostQueries;
  }


  public SolrDebugInfo boostFunctions(List<String> boostFunctions) {
    
    this.boostFunctions = boostFunctions;
    return this;
  }

  public SolrDebugInfo addBoostFunctionsItem(String boostFunctionsItem) {
    if (this.boostFunctions == null) {
      this.boostFunctions = new ArrayList<>();
    }
    this.boostFunctions.add(boostFunctionsItem);
    return this;
  }

   /**
   * Get boostFunctions
   * @return boostFunctions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getBoostFunctions() {
    return boostFunctions;
  }


  public void setBoostFunctions(List<String> boostFunctions) {
    this.boostFunctions = boostFunctions;
  }


  public SolrDebugInfo solrUrl(String solrUrl) {
    
    this.solrUrl = solrUrl;
    return this;
  }

   /**
   * Get solrUrl
   * @return solrUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSolrUrl() {
    return solrUrl;
  }


  public void setSolrUrl(String solrUrl) {
    this.solrUrl = solrUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SolrDebugInfo solrDebugInfo = (SolrDebugInfo) o;
    return Objects.equals(this.searchTuningRuleCode, solrDebugInfo.searchTuningRuleCode) &&
        Objects.equals(this.boostedProductCodes, solrDebugInfo.boostedProductCodes) &&
        Objects.equals(this.blockedProductCodes, solrDebugInfo.blockedProductCodes) &&
        Objects.equals(this.boostQueries, solrDebugInfo.boostQueries) &&
        Objects.equals(this.boostFunctions, solrDebugInfo.boostFunctions) &&
        Objects.equals(this.solrUrl, solrDebugInfo.solrUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchTuningRuleCode, boostedProductCodes, blockedProductCodes, boostQueries, boostFunctions, solrUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SolrDebugInfo {\n");
    sb.append("    searchTuningRuleCode: ").append(toIndentedString(searchTuningRuleCode)).append("\n");
    sb.append("    boostedProductCodes: ").append(toIndentedString(boostedProductCodes)).append("\n");
    sb.append("    blockedProductCodes: ").append(toIndentedString(blockedProductCodes)).append("\n");
    sb.append("    boostQueries: ").append(toIndentedString(boostQueries)).append("\n");
    sb.append("    boostFunctions: ").append(toIndentedString(boostFunctions)).append("\n");
    sb.append("    solrUrl: ").append(toIndentedString(solrUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("searchTuningRuleCode");
    openapiFields.add("boostedProductCodes");
    openapiFields.add("blockedProductCodes");
    openapiFields.add("boostQueries");
    openapiFields.add("boostFunctions");
    openapiFields.add("solrUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SolrDebugInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!SolrDebugInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SolrDebugInfo is not found in the empty JSON string", SolrDebugInfo.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!SolrDebugInfo.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SolrDebugInfo` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("searchTuningRuleCode") != null && !jsonObj.get("searchTuningRuleCode").isJsonNull()) && !jsonObj.get("searchTuningRuleCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchTuningRuleCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchTuningRuleCode").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("boostedProductCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `boostedProductCodes` to be an array in the JSON string but got `%s`", jsonObj.get("boostedProductCodes").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("blockedProductCodes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockedProductCodes` to be an array in the JSON string but got `%s`", jsonObj.get("blockedProductCodes").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("boostQueries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `boostQueries` to be an array in the JSON string but got `%s`", jsonObj.get("boostQueries").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("boostFunctions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `boostFunctions` to be an array in the JSON string but got `%s`", jsonObj.get("boostFunctions").toString()));
      }
      if ((jsonObj.get("solrUrl") != null && !jsonObj.get("solrUrl").isJsonNull()) && !jsonObj.get("solrUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `solrUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("solrUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SolrDebugInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SolrDebugInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SolrDebugInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SolrDebugInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<SolrDebugInfo>() {
           @Override
           public void write(JsonWriter out, SolrDebugInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SolrDebugInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SolrDebugInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SolrDebugInfo
  * @throws IOException if the JSON string is invalid with respect to SolrDebugInfo
  */
  public static SolrDebugInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SolrDebugInfo.class);
  }

 /**
  * Convert an instance of SolrDebugInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

