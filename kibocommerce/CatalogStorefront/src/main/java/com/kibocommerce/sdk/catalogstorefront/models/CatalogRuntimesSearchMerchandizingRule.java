/*
 * Kibo Catalog Runtime Services
 * OpenAPI Spec for Kibo Catalog Runtime Services
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.catalogstorefront.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.catalogstorefront.models.AdminUserAuditInfo;
import com.kibocommerce.sdk.catalogstorefront.models.CatalogRuntimesSearchMerchandizingRuleContext;
import com.kibocommerce.sdk.catalogstorefront.models.SearchMerchandizingRuleImpact;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * Search Merchandizing Rule
 */
@ApiModel(description = "Search Merchandizing Rule")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CatalogRuntimesSearchMerchandizingRule implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = null;

  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private CatalogRuntimesSearchMerchandizingRuleContext context;

  public static final String SERIALIZED_NAME_RULE_IMPACT = "ruleImpact";
  @SerializedName(SERIALIZED_NAME_RULE_IMPACT)
  private SearchMerchandizingRuleImpact ruleImpact;

  public static final String SERIALIZED_NAME_AUDIT_INFO = "auditInfo";
  @SerializedName(SERIALIZED_NAME_AUDIT_INFO)
  private AdminUserAuditInfo auditInfo;

  public static final String SERIALIZED_NAME_IS_PERSONALIZATION_ENABLED = "isPersonalizationEnabled";
  @SerializedName(SERIALIZED_NAME_IS_PERSONALIZATION_ENABLED)
  private Boolean isPersonalizationEnabled;

  public CatalogRuntimesSearchMerchandizingRule() {
  }

  public CatalogRuntimesSearchMerchandizingRule code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Unique identifier. Will be generated if not provided.
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unique identifier. Will be generated if not provided.")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    this.code = code;
  }


  public CatalogRuntimesSearchMerchandizingRule name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CatalogRuntimesSearchMerchandizingRule description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CatalogRuntimesSearchMerchandizingRule tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public CatalogRuntimesSearchMerchandizingRule addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public CatalogRuntimesSearchMerchandizingRule context(CatalogRuntimesSearchMerchandizingRuleContext context) {
    
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CatalogRuntimesSearchMerchandizingRuleContext getContext() {
    return context;
  }


  public void setContext(CatalogRuntimesSearchMerchandizingRuleContext context) {
    this.context = context;
  }


  public CatalogRuntimesSearchMerchandizingRule ruleImpact(SearchMerchandizingRuleImpact ruleImpact) {
    
    this.ruleImpact = ruleImpact;
    return this;
  }

   /**
   * Get ruleImpact
   * @return ruleImpact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SearchMerchandizingRuleImpact getRuleImpact() {
    return ruleImpact;
  }


  public void setRuleImpact(SearchMerchandizingRuleImpact ruleImpact) {
    this.ruleImpact = ruleImpact;
  }


  public CatalogRuntimesSearchMerchandizingRule auditInfo(AdminUserAuditInfo auditInfo) {
    
    this.auditInfo = auditInfo;
    return this;
  }

   /**
   * Get auditInfo
   * @return auditInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public AdminUserAuditInfo getAuditInfo() {
    return auditInfo;
  }


  public void setAuditInfo(AdminUserAuditInfo auditInfo) {
    this.auditInfo = auditInfo;
  }


  public CatalogRuntimesSearchMerchandizingRule isPersonalizationEnabled(Boolean isPersonalizationEnabled) {
    
    this.isPersonalizationEnabled = isPersonalizationEnabled;
    return this;
  }

   /**
   * Get isPersonalizationEnabled
   * @return isPersonalizationEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPersonalizationEnabled() {
    return isPersonalizationEnabled;
  }


  public void setIsPersonalizationEnabled(Boolean isPersonalizationEnabled) {
    this.isPersonalizationEnabled = isPersonalizationEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CatalogRuntimesSearchMerchandizingRule catalogRuntimesSearchMerchandizingRule = (CatalogRuntimesSearchMerchandizingRule) o;
    return Objects.equals(this.code, catalogRuntimesSearchMerchandizingRule.code) &&
        Objects.equals(this.name, catalogRuntimesSearchMerchandizingRule.name) &&
        Objects.equals(this.description, catalogRuntimesSearchMerchandizingRule.description) &&
        Objects.equals(this.tags, catalogRuntimesSearchMerchandizingRule.tags) &&
        Objects.equals(this.context, catalogRuntimesSearchMerchandizingRule.context) &&
        Objects.equals(this.ruleImpact, catalogRuntimesSearchMerchandizingRule.ruleImpact) &&
        Objects.equals(this.auditInfo, catalogRuntimesSearchMerchandizingRule.auditInfo) &&
        Objects.equals(this.isPersonalizationEnabled, catalogRuntimesSearchMerchandizingRule.isPersonalizationEnabled);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, name, description, tags, context, ruleImpact, auditInfo, isPersonalizationEnabled);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CatalogRuntimesSearchMerchandizingRule {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    ruleImpact: ").append(toIndentedString(ruleImpact)).append("\n");
    sb.append("    auditInfo: ").append(toIndentedString(auditInfo)).append("\n");
    sb.append("    isPersonalizationEnabled: ").append(toIndentedString(isPersonalizationEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("tags");
    openapiFields.add("context");
    openapiFields.add("ruleImpact");
    openapiFields.add("auditInfo");
    openapiFields.add("isPersonalizationEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CatalogRuntimesSearchMerchandizingRule
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CatalogRuntimesSearchMerchandizingRule.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CatalogRuntimesSearchMerchandizingRule is not found in the empty JSON string", CatalogRuntimesSearchMerchandizingRule.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CatalogRuntimesSearchMerchandizingRule.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CatalogRuntimesSearchMerchandizingRule` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      // validate the optional field `context`
      if (jsonObj.get("context") != null && !jsonObj.get("context").isJsonNull()) {
        CatalogRuntimesSearchMerchandizingRuleContext.validateJsonObject(jsonObj.getAsJsonObject("context"));
      }
      // validate the optional field `ruleImpact`
      if (jsonObj.get("ruleImpact") != null && !jsonObj.get("ruleImpact").isJsonNull()) {
        SearchMerchandizingRuleImpact.validateJsonObject(jsonObj.getAsJsonObject("ruleImpact"));
      }
      // validate the optional field `auditInfo`
      if (jsonObj.get("auditInfo") != null && !jsonObj.get("auditInfo").isJsonNull()) {
        AdminUserAuditInfo.validateJsonObject(jsonObj.getAsJsonObject("auditInfo"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CatalogRuntimesSearchMerchandizingRule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CatalogRuntimesSearchMerchandizingRule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CatalogRuntimesSearchMerchandizingRule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CatalogRuntimesSearchMerchandizingRule.class));

       return (TypeAdapter<T>) new TypeAdapter<CatalogRuntimesSearchMerchandizingRule>() {
           @Override
           public void write(JsonWriter out, CatalogRuntimesSearchMerchandizingRule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CatalogRuntimesSearchMerchandizingRule read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CatalogRuntimesSearchMerchandizingRule given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CatalogRuntimesSearchMerchandizingRule
  * @throws IOException if the JSON string is invalid with respect to CatalogRuntimesSearchMerchandizingRule
  */
  public static CatalogRuntimesSearchMerchandizingRule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CatalogRuntimesSearchMerchandizingRule.class);
  }

 /**
  * Convert an instance of CatalogRuntimesSearchMerchandizingRule to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

