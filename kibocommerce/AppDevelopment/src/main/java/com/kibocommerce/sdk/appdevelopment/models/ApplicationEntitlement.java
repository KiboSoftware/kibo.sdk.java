/*
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.appdevelopment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationTransaction;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApplicationEntitlement implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_APP_KEY = "appKey";
  @SerializedName(SERIALIZED_NAME_APP_KEY)
  private String appKey;

  public static final String SERIALIZED_NAME_APPLICATION_ENTITLEMENT_ID = "applicationEntitlementId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ENTITLEMENT_ID)
  private Integer applicationEntitlementId;

  public static final String SERIALIZED_NAME_PACKAGE_ID = "packageId";
  @SerializedName(SERIALIZED_NAME_PACKAGE_ID)
  private Integer packageId;

  public static final String SERIALIZED_NAME_APPLICATION_LICENSE_TYPE = "applicationLicenseType";
  @SerializedName(SERIALIZED_NAME_APPLICATION_LICENSE_TYPE)
  private String applicationLicenseType;

  public static final String SERIALIZED_NAME_ENTITLEMENT_STATUS = "entitlementStatus";
  @SerializedName(SERIALIZED_NAME_ENTITLEMENT_STATUS)
  private String entitlementStatus;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenantId";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  private Integer tenantId;

  public static final String SERIALIZED_NAME_SITE_ID = "siteId";
  @SerializedName(SERIALIZED_NAME_SITE_ID)
  private Integer siteId;

  public static final String SERIALIZED_NAME_EFFECTIVE_START_DATE = "effectiveStartDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_START_DATE)
  private OffsetDateTime effectiveStartDate;

  public static final String SERIALIZED_NAME_EFFECTIVE_END_DATE = "effectiveEndDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_END_DATE)
  private OffsetDateTime effectiveEndDate;

  public static final String SERIALIZED_NAME_APPLICATION_TRANSACTIONS = "applicationTransactions";
  @SerializedName(SERIALIZED_NAME_APPLICATION_TRANSACTIONS)
  private List<ApplicationTransaction> applicationTransactions = null;

  public static final String SERIALIZED_NAME_APPLICATION_NAME = "applicationName";
  @SerializedName(SERIALIZED_NAME_APPLICATION_NAME)
  private String applicationName;

  public static final String SERIALIZED_NAME_APPLICATION_VERSION = "applicationVersion";
  @SerializedName(SERIALIZED_NAME_APPLICATION_VERSION)
  private String applicationVersion;

  public static final String SERIALIZED_NAME_INSTALLED_BY_FIRST_NAME = "installedByFirstName";
  @SerializedName(SERIALIZED_NAME_INSTALLED_BY_FIRST_NAME)
  private String installedByFirstName;

  public static final String SERIALIZED_NAME_INSTALLED_BY_LAST_NAME = "installedByLastName";
  @SerializedName(SERIALIZED_NAME_INSTALLED_BY_LAST_NAME)
  private String installedByLastName;

  public static final String SERIALIZED_NAME_INSTALLED_DATE = "installedDate";
  @SerializedName(SERIALIZED_NAME_INSTALLED_DATE)
  private OffsetDateTime installedDate;

  public static final String SERIALIZED_NAME_PACKAGE_NAME = "packageName";
  @SerializedName(SERIALIZED_NAME_PACKAGE_NAME)
  private String packageName;

  public static final String SERIALIZED_NAME_TENANT_NAME = "tenantName";
  @SerializedName(SERIALIZED_NAME_TENANT_NAME)
  private String tenantName;

  public static final String SERIALIZED_NAME_APPLICATION_STATUS_ID = "applicationStatusId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_STATUS_ID)
  private String applicationStatusId;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private Integer applicationId;

  public static final String SERIALIZED_NAME_DEV_ACCOUNT_ID = "devAccountId";
  @SerializedName(SERIALIZED_NAME_DEV_ACCOUNT_ID)
  private Integer devAccountId;

  public static final String SERIALIZED_NAME_INSTALLED_APPS_APPLICATION_ID = "installedAppsApplicationId";
  @SerializedName(SERIALIZED_NAME_INSTALLED_APPS_APPLICATION_ID)
  private String installedAppsApplicationId;

  public static final String SERIALIZED_NAME_APP_OWNER_DEV_ACCOUNT_ID = "appOwnerDevAccountId";
  @SerializedName(SERIALIZED_NAME_APP_OWNER_DEV_ACCOUNT_ID)
  private Integer appOwnerDevAccountId;

  public ApplicationEntitlement() {
  }

  public ApplicationEntitlement appKey(String appKey) {
    
    this.appKey = appKey;
    return this;
  }

   /**
   * 
   * @return appKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppKey() {
    return appKey;
  }


  public void setAppKey(String appKey) {
    this.appKey = appKey;
  }


  public ApplicationEntitlement applicationEntitlementId(Integer applicationEntitlementId) {
    
    this.applicationEntitlementId = applicationEntitlementId;
    return this;
  }

   /**
   * 
   * @return applicationEntitlementId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationEntitlementId() {
    return applicationEntitlementId;
  }


  public void setApplicationEntitlementId(Integer applicationEntitlementId) {
    this.applicationEntitlementId = applicationEntitlementId;
  }


  public ApplicationEntitlement packageId(Integer packageId) {
    
    this.packageId = packageId;
    return this;
  }

   /**
   * 
   * @return packageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPackageId() {
    return packageId;
  }


  public void setPackageId(Integer packageId) {
    this.packageId = packageId;
  }


  public ApplicationEntitlement applicationLicenseType(String applicationLicenseType) {
    
    this.applicationLicenseType = applicationLicenseType;
    return this;
  }

   /**
   * 
   * @return applicationLicenseType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationLicenseType() {
    return applicationLicenseType;
  }


  public void setApplicationLicenseType(String applicationLicenseType) {
    this.applicationLicenseType = applicationLicenseType;
  }


  public ApplicationEntitlement entitlementStatus(String entitlementStatus) {
    
    this.entitlementStatus = entitlementStatus;
    return this;
  }

   /**
   * 
   * @return entitlementStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEntitlementStatus() {
    return entitlementStatus;
  }


  public void setEntitlementStatus(String entitlementStatus) {
    this.entitlementStatus = entitlementStatus;
  }


  public ApplicationEntitlement tenantId(Integer tenantId) {
    
    this.tenantId = tenantId;
    return this;
  }

   /**
   * 
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTenantId() {
    return tenantId;
  }


  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }


  public ApplicationEntitlement siteId(Integer siteId) {
    
    this.siteId = siteId;
    return this;
  }

   /**
   * 
   * @return siteId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSiteId() {
    return siteId;
  }


  public void setSiteId(Integer siteId) {
    this.siteId = siteId;
  }


  public ApplicationEntitlement effectiveStartDate(OffsetDateTime effectiveStartDate) {
    
    this.effectiveStartDate = effectiveStartDate;
    return this;
  }

   /**
   * 
   * @return effectiveStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEffectiveStartDate() {
    return effectiveStartDate;
  }


  public void setEffectiveStartDate(OffsetDateTime effectiveStartDate) {
    this.effectiveStartDate = effectiveStartDate;
  }


  public ApplicationEntitlement effectiveEndDate(OffsetDateTime effectiveEndDate) {
    
    this.effectiveEndDate = effectiveEndDate;
    return this;
  }

   /**
   * 
   * @return effectiveEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEffectiveEndDate() {
    return effectiveEndDate;
  }


  public void setEffectiveEndDate(OffsetDateTime effectiveEndDate) {
    this.effectiveEndDate = effectiveEndDate;
  }


  public ApplicationEntitlement applicationTransactions(List<ApplicationTransaction> applicationTransactions) {
    
    this.applicationTransactions = applicationTransactions;
    return this;
  }

  public ApplicationEntitlement addApplicationTransactionsItem(ApplicationTransaction applicationTransactionsItem) {
    if (this.applicationTransactions == null) {
      this.applicationTransactions = new ArrayList<>();
    }
    this.applicationTransactions.add(applicationTransactionsItem);
    return this;
  }

   /**
   * 
   * @return applicationTransactions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationTransaction> getApplicationTransactions() {
    return applicationTransactions;
  }


  public void setApplicationTransactions(List<ApplicationTransaction> applicationTransactions) {
    this.applicationTransactions = applicationTransactions;
  }


  public ApplicationEntitlement applicationName(String applicationName) {
    
    this.applicationName = applicationName;
    return this;
  }

   /**
   * 
   * @return applicationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationName() {
    return applicationName;
  }


  public void setApplicationName(String applicationName) {
    this.applicationName = applicationName;
  }


  public ApplicationEntitlement applicationVersion(String applicationVersion) {
    
    this.applicationVersion = applicationVersion;
    return this;
  }

   /**
   * 
   * @return applicationVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationVersion() {
    return applicationVersion;
  }


  public void setApplicationVersion(String applicationVersion) {
    this.applicationVersion = applicationVersion;
  }


  public ApplicationEntitlement installedByFirstName(String installedByFirstName) {
    
    this.installedByFirstName = installedByFirstName;
    return this;
  }

   /**
   * 
   * @return installedByFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInstalledByFirstName() {
    return installedByFirstName;
  }


  public void setInstalledByFirstName(String installedByFirstName) {
    this.installedByFirstName = installedByFirstName;
  }


  public ApplicationEntitlement installedByLastName(String installedByLastName) {
    
    this.installedByLastName = installedByLastName;
    return this;
  }

   /**
   * 
   * @return installedByLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInstalledByLastName() {
    return installedByLastName;
  }


  public void setInstalledByLastName(String installedByLastName) {
    this.installedByLastName = installedByLastName;
  }


  public ApplicationEntitlement installedDate(OffsetDateTime installedDate) {
    
    this.installedDate = installedDate;
    return this;
  }

   /**
   * 
   * @return installedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getInstalledDate() {
    return installedDate;
  }


  public void setInstalledDate(OffsetDateTime installedDate) {
    this.installedDate = installedDate;
  }


  public ApplicationEntitlement packageName(String packageName) {
    
    this.packageName = packageName;
    return this;
  }

   /**
   * 
   * @return packageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPackageName() {
    return packageName;
  }


  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }


  public ApplicationEntitlement tenantName(String tenantName) {
    
    this.tenantName = tenantName;
    return this;
  }

   /**
   * 
   * @return tenantName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTenantName() {
    return tenantName;
  }


  public void setTenantName(String tenantName) {
    this.tenantName = tenantName;
  }


  public ApplicationEntitlement applicationStatusId(String applicationStatusId) {
    
    this.applicationStatusId = applicationStatusId;
    return this;
  }

   /**
   * 
   * @return applicationStatusId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getApplicationStatusId() {
    return applicationStatusId;
  }


  public void setApplicationStatusId(String applicationStatusId) {
    this.applicationStatusId = applicationStatusId;
  }


  public ApplicationEntitlement applicationId(Integer applicationId) {
    
    this.applicationId = applicationId;
    return this;
  }

   /**
   * 
   * @return applicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationId() {
    return applicationId;
  }


  public void setApplicationId(Integer applicationId) {
    this.applicationId = applicationId;
  }


  public ApplicationEntitlement devAccountId(Integer devAccountId) {
    
    this.devAccountId = devAccountId;
    return this;
  }

   /**
   * Denotes which DevAccountId is the application installed in
   * @return devAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Denotes which DevAccountId is the application installed in")

  public Integer getDevAccountId() {
    return devAccountId;
  }


  public void setDevAccountId(Integer devAccountId) {
    this.devAccountId = devAccountId;
  }


  public ApplicationEntitlement installedAppsApplicationId(String installedAppsApplicationId) {
    
    this.installedAppsApplicationId = installedAppsApplicationId;
    return this;
  }

   /**
   * 
   * @return installedAppsApplicationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInstalledAppsApplicationId() {
    return installedAppsApplicationId;
  }


  public void setInstalledAppsApplicationId(String installedAppsApplicationId) {
    this.installedAppsApplicationId = installedAppsApplicationId;
  }


  public ApplicationEntitlement appOwnerDevAccountId(Integer appOwnerDevAccountId) {
    
    this.appOwnerDevAccountId = appOwnerDevAccountId;
    return this;
  }

   /**
   * Denotes the application owner dev account id
   * @return appOwnerDevAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Denotes the application owner dev account id")

  public Integer getAppOwnerDevAccountId() {
    return appOwnerDevAccountId;
  }


  public void setAppOwnerDevAccountId(Integer appOwnerDevAccountId) {
    this.appOwnerDevAccountId = appOwnerDevAccountId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationEntitlement applicationEntitlement = (ApplicationEntitlement) o;
    return Objects.equals(this.appKey, applicationEntitlement.appKey) &&
        Objects.equals(this.applicationEntitlementId, applicationEntitlement.applicationEntitlementId) &&
        Objects.equals(this.packageId, applicationEntitlement.packageId) &&
        Objects.equals(this.applicationLicenseType, applicationEntitlement.applicationLicenseType) &&
        Objects.equals(this.entitlementStatus, applicationEntitlement.entitlementStatus) &&
        Objects.equals(this.tenantId, applicationEntitlement.tenantId) &&
        Objects.equals(this.siteId, applicationEntitlement.siteId) &&
        Objects.equals(this.effectiveStartDate, applicationEntitlement.effectiveStartDate) &&
        Objects.equals(this.effectiveEndDate, applicationEntitlement.effectiveEndDate) &&
        Objects.equals(this.applicationTransactions, applicationEntitlement.applicationTransactions) &&
        Objects.equals(this.applicationName, applicationEntitlement.applicationName) &&
        Objects.equals(this.applicationVersion, applicationEntitlement.applicationVersion) &&
        Objects.equals(this.installedByFirstName, applicationEntitlement.installedByFirstName) &&
        Objects.equals(this.installedByLastName, applicationEntitlement.installedByLastName) &&
        Objects.equals(this.installedDate, applicationEntitlement.installedDate) &&
        Objects.equals(this.packageName, applicationEntitlement.packageName) &&
        Objects.equals(this.tenantName, applicationEntitlement.tenantName) &&
        Objects.equals(this.applicationStatusId, applicationEntitlement.applicationStatusId) &&
        Objects.equals(this.applicationId, applicationEntitlement.applicationId) &&
        Objects.equals(this.devAccountId, applicationEntitlement.devAccountId) &&
        Objects.equals(this.installedAppsApplicationId, applicationEntitlement.installedAppsApplicationId) &&
        Objects.equals(this.appOwnerDevAccountId, applicationEntitlement.appOwnerDevAccountId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(appKey, applicationEntitlementId, packageId, applicationLicenseType, entitlementStatus, tenantId, siteId, effectiveStartDate, effectiveEndDate, applicationTransactions, applicationName, applicationVersion, installedByFirstName, installedByLastName, installedDate, packageName, tenantName, applicationStatusId, applicationId, devAccountId, installedAppsApplicationId, appOwnerDevAccountId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationEntitlement {\n");
    sb.append("    appKey: ").append(toIndentedString(appKey)).append("\n");
    sb.append("    applicationEntitlementId: ").append(toIndentedString(applicationEntitlementId)).append("\n");
    sb.append("    packageId: ").append(toIndentedString(packageId)).append("\n");
    sb.append("    applicationLicenseType: ").append(toIndentedString(applicationLicenseType)).append("\n");
    sb.append("    entitlementStatus: ").append(toIndentedString(entitlementStatus)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    siteId: ").append(toIndentedString(siteId)).append("\n");
    sb.append("    effectiveStartDate: ").append(toIndentedString(effectiveStartDate)).append("\n");
    sb.append("    effectiveEndDate: ").append(toIndentedString(effectiveEndDate)).append("\n");
    sb.append("    applicationTransactions: ").append(toIndentedString(applicationTransactions)).append("\n");
    sb.append("    applicationName: ").append(toIndentedString(applicationName)).append("\n");
    sb.append("    applicationVersion: ").append(toIndentedString(applicationVersion)).append("\n");
    sb.append("    installedByFirstName: ").append(toIndentedString(installedByFirstName)).append("\n");
    sb.append("    installedByLastName: ").append(toIndentedString(installedByLastName)).append("\n");
    sb.append("    installedDate: ").append(toIndentedString(installedDate)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    tenantName: ").append(toIndentedString(tenantName)).append("\n");
    sb.append("    applicationStatusId: ").append(toIndentedString(applicationStatusId)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    devAccountId: ").append(toIndentedString(devAccountId)).append("\n");
    sb.append("    installedAppsApplicationId: ").append(toIndentedString(installedAppsApplicationId)).append("\n");
    sb.append("    appOwnerDevAccountId: ").append(toIndentedString(appOwnerDevAccountId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("appKey");
    openapiFields.add("applicationEntitlementId");
    openapiFields.add("packageId");
    openapiFields.add("applicationLicenseType");
    openapiFields.add("entitlementStatus");
    openapiFields.add("tenantId");
    openapiFields.add("siteId");
    openapiFields.add("effectiveStartDate");
    openapiFields.add("effectiveEndDate");
    openapiFields.add("applicationTransactions");
    openapiFields.add("applicationName");
    openapiFields.add("applicationVersion");
    openapiFields.add("installedByFirstName");
    openapiFields.add("installedByLastName");
    openapiFields.add("installedDate");
    openapiFields.add("packageName");
    openapiFields.add("tenantName");
    openapiFields.add("applicationStatusId");
    openapiFields.add("applicationId");
    openapiFields.add("devAccountId");
    openapiFields.add("installedAppsApplicationId");
    openapiFields.add("appOwnerDevAccountId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ApplicationEntitlement
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ApplicationEntitlement.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationEntitlement is not found in the empty JSON string", ApplicationEntitlement.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ApplicationEntitlement.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationEntitlement` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("appKey") != null && !jsonObj.get("appKey").isJsonNull()) && !jsonObj.get("appKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `appKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("appKey").toString()));
      }
      if ((jsonObj.get("applicationLicenseType") != null && !jsonObj.get("applicationLicenseType").isJsonNull()) && !jsonObj.get("applicationLicenseType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationLicenseType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationLicenseType").toString()));
      }
      if ((jsonObj.get("entitlementStatus") != null && !jsonObj.get("entitlementStatus").isJsonNull()) && !jsonObj.get("entitlementStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `entitlementStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("entitlementStatus").toString()));
      }
      if (jsonObj.get("applicationTransactions") != null && !jsonObj.get("applicationTransactions").isJsonNull()) {
        JsonArray jsonArrayapplicationTransactions = jsonObj.getAsJsonArray("applicationTransactions");
        if (jsonArrayapplicationTransactions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationTransactions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationTransactions` to be an array in the JSON string but got `%s`", jsonObj.get("applicationTransactions").toString()));
          }

          // validate the optional field `applicationTransactions` (array)
          for (int i = 0; i < jsonArrayapplicationTransactions.size(); i++) {
            ApplicationTransaction.validateJsonObject(jsonArrayapplicationTransactions.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("applicationName") != null && !jsonObj.get("applicationName").isJsonNull()) && !jsonObj.get("applicationName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationName").toString()));
      }
      if ((jsonObj.get("applicationVersion") != null && !jsonObj.get("applicationVersion").isJsonNull()) && !jsonObj.get("applicationVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationVersion").toString()));
      }
      if ((jsonObj.get("installedByFirstName") != null && !jsonObj.get("installedByFirstName").isJsonNull()) && !jsonObj.get("installedByFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `installedByFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("installedByFirstName").toString()));
      }
      if ((jsonObj.get("installedByLastName") != null && !jsonObj.get("installedByLastName").isJsonNull()) && !jsonObj.get("installedByLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `installedByLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("installedByLastName").toString()));
      }
      if ((jsonObj.get("packageName") != null && !jsonObj.get("packageName").isJsonNull()) && !jsonObj.get("packageName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `packageName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("packageName").toString()));
      }
      if ((jsonObj.get("tenantName") != null && !jsonObj.get("tenantName").isJsonNull()) && !jsonObj.get("tenantName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenantName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenantName").toString()));
      }
      if ((jsonObj.get("applicationStatusId") != null && !jsonObj.get("applicationStatusId").isJsonNull()) && !jsonObj.get("applicationStatusId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationStatusId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationStatusId").toString()));
      }
      if ((jsonObj.get("installedAppsApplicationId") != null && !jsonObj.get("installedAppsApplicationId").isJsonNull()) && !jsonObj.get("installedAppsApplicationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `installedAppsApplicationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("installedAppsApplicationId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationEntitlement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationEntitlement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationEntitlement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationEntitlement.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationEntitlement>() {
           @Override
           public void write(JsonWriter out, ApplicationEntitlement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationEntitlement read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApplicationEntitlement given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApplicationEntitlement
  * @throws IOException if the JSON string is invalid with respect to ApplicationEntitlement
  */
  public static ApplicationEntitlement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationEntitlement.class);
  }

 /**
  * Convert an instance of ApplicationEntitlement to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

