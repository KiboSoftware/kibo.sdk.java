/*
 * Kibo AppDev Service
 * OpenAPI Spec for Kibo AppDev Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.appdevelopment.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.appdevelopment.models.ApplicationCapabilityDomainValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApplicationCapabilityDomain implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAIN_ID = "applicationCapabilityDomainId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAIN_ID)
  private Integer applicationCapabilityDomainId;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITY_TYPE_ID = "applicationCapabilityTypeId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITY_TYPE_ID)
  private Integer applicationCapabilityTypeId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAIN_VALUES1 = "applicationCapabilityDomainValues1";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAIN_VALUES1)
  private List<ApplicationCapabilityDomainValue> applicationCapabilityDomainValues1 = null;

  public static final String SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAIN_VALUES2 = "applicationCapabilityDomainValues2";
  @SerializedName(SERIALIZED_NAME_APPLICATION_CAPABILITY_DOMAIN_VALUES2)
  private List<ApplicationCapabilityDomainValue> applicationCapabilityDomainValues2 = null;

  public ApplicationCapabilityDomain() {
  }

  public ApplicationCapabilityDomain applicationCapabilityDomainId(Integer applicationCapabilityDomainId) {
    
    this.applicationCapabilityDomainId = applicationCapabilityDomainId;
    return this;
  }

   /**
   * 
   * @return applicationCapabilityDomainId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationCapabilityDomainId() {
    return applicationCapabilityDomainId;
  }


  public void setApplicationCapabilityDomainId(Integer applicationCapabilityDomainId) {
    this.applicationCapabilityDomainId = applicationCapabilityDomainId;
  }


  public ApplicationCapabilityDomain applicationCapabilityTypeId(Integer applicationCapabilityTypeId) {
    
    this.applicationCapabilityTypeId = applicationCapabilityTypeId;
    return this;
  }

   /**
   * 
   * @return applicationCapabilityTypeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getApplicationCapabilityTypeId() {
    return applicationCapabilityTypeId;
  }


  public void setApplicationCapabilityTypeId(Integer applicationCapabilityTypeId) {
    this.applicationCapabilityTypeId = applicationCapabilityTypeId;
  }


  public ApplicationCapabilityDomain name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * 
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ApplicationCapabilityDomain applicationCapabilityDomainValues1(List<ApplicationCapabilityDomainValue> applicationCapabilityDomainValues1) {
    
    this.applicationCapabilityDomainValues1 = applicationCapabilityDomainValues1;
    return this;
  }

  public ApplicationCapabilityDomain addApplicationCapabilityDomainValues1Item(ApplicationCapabilityDomainValue applicationCapabilityDomainValues1Item) {
    if (this.applicationCapabilityDomainValues1 == null) {
      this.applicationCapabilityDomainValues1 = new ArrayList<>();
    }
    this.applicationCapabilityDomainValues1.add(applicationCapabilityDomainValues1Item);
    return this;
  }

   /**
   * 
   * @return applicationCapabilityDomainValues1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationCapabilityDomainValue> getApplicationCapabilityDomainValues1() {
    return applicationCapabilityDomainValues1;
  }


  public void setApplicationCapabilityDomainValues1(List<ApplicationCapabilityDomainValue> applicationCapabilityDomainValues1) {
    this.applicationCapabilityDomainValues1 = applicationCapabilityDomainValues1;
  }


  public ApplicationCapabilityDomain applicationCapabilityDomainValues2(List<ApplicationCapabilityDomainValue> applicationCapabilityDomainValues2) {
    
    this.applicationCapabilityDomainValues2 = applicationCapabilityDomainValues2;
    return this;
  }

  public ApplicationCapabilityDomain addApplicationCapabilityDomainValues2Item(ApplicationCapabilityDomainValue applicationCapabilityDomainValues2Item) {
    if (this.applicationCapabilityDomainValues2 == null) {
      this.applicationCapabilityDomainValues2 = new ArrayList<>();
    }
    this.applicationCapabilityDomainValues2.add(applicationCapabilityDomainValues2Item);
    return this;
  }

   /**
   * 
   * @return applicationCapabilityDomainValues2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ApplicationCapabilityDomainValue> getApplicationCapabilityDomainValues2() {
    return applicationCapabilityDomainValues2;
  }


  public void setApplicationCapabilityDomainValues2(List<ApplicationCapabilityDomainValue> applicationCapabilityDomainValues2) {
    this.applicationCapabilityDomainValues2 = applicationCapabilityDomainValues2;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationCapabilityDomain applicationCapabilityDomain = (ApplicationCapabilityDomain) o;
    return Objects.equals(this.applicationCapabilityDomainId, applicationCapabilityDomain.applicationCapabilityDomainId) &&
        Objects.equals(this.applicationCapabilityTypeId, applicationCapabilityDomain.applicationCapabilityTypeId) &&
        Objects.equals(this.name, applicationCapabilityDomain.name) &&
        Objects.equals(this.applicationCapabilityDomainValues1, applicationCapabilityDomain.applicationCapabilityDomainValues1) &&
        Objects.equals(this.applicationCapabilityDomainValues2, applicationCapabilityDomain.applicationCapabilityDomainValues2);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationCapabilityDomainId, applicationCapabilityTypeId, name, applicationCapabilityDomainValues1, applicationCapabilityDomainValues2);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationCapabilityDomain {\n");
    sb.append("    applicationCapabilityDomainId: ").append(toIndentedString(applicationCapabilityDomainId)).append("\n");
    sb.append("    applicationCapabilityTypeId: ").append(toIndentedString(applicationCapabilityTypeId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    applicationCapabilityDomainValues1: ").append(toIndentedString(applicationCapabilityDomainValues1)).append("\n");
    sb.append("    applicationCapabilityDomainValues2: ").append(toIndentedString(applicationCapabilityDomainValues2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("applicationCapabilityDomainId");
    openapiFields.add("applicationCapabilityTypeId");
    openapiFields.add("name");
    openapiFields.add("applicationCapabilityDomainValues1");
    openapiFields.add("applicationCapabilityDomainValues2");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ApplicationCapabilityDomain
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ApplicationCapabilityDomain.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApplicationCapabilityDomain is not found in the empty JSON string", ApplicationCapabilityDomain.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!ApplicationCapabilityDomain.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApplicationCapabilityDomain` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("applicationCapabilityDomainValues1") != null && !jsonObj.get("applicationCapabilityDomainValues1").isJsonNull()) {
        JsonArray jsonArrayapplicationCapabilityDomainValues1 = jsonObj.getAsJsonArray("applicationCapabilityDomainValues1");
        if (jsonArrayapplicationCapabilityDomainValues1 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationCapabilityDomainValues1").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationCapabilityDomainValues1` to be an array in the JSON string but got `%s`", jsonObj.get("applicationCapabilityDomainValues1").toString()));
          }

          // validate the optional field `applicationCapabilityDomainValues1` (array)
          for (int i = 0; i < jsonArrayapplicationCapabilityDomainValues1.size(); i++) {
            ApplicationCapabilityDomainValue.validateJsonObject(jsonArrayapplicationCapabilityDomainValues1.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("applicationCapabilityDomainValues2") != null && !jsonObj.get("applicationCapabilityDomainValues2").isJsonNull()) {
        JsonArray jsonArrayapplicationCapabilityDomainValues2 = jsonObj.getAsJsonArray("applicationCapabilityDomainValues2");
        if (jsonArrayapplicationCapabilityDomainValues2 != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applicationCapabilityDomainValues2").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applicationCapabilityDomainValues2` to be an array in the JSON string but got `%s`", jsonObj.get("applicationCapabilityDomainValues2").toString()));
          }

          // validate the optional field `applicationCapabilityDomainValues2` (array)
          for (int i = 0; i < jsonArrayapplicationCapabilityDomainValues2.size(); i++) {
            ApplicationCapabilityDomainValue.validateJsonObject(jsonArrayapplicationCapabilityDomainValues2.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationCapabilityDomain.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationCapabilityDomain' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationCapabilityDomain> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationCapabilityDomain.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationCapabilityDomain>() {
           @Override
           public void write(JsonWriter out, ApplicationCapabilityDomain value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationCapabilityDomain read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApplicationCapabilityDomain given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApplicationCapabilityDomain
  * @throws IOException if the JSON string is invalid with respect to ApplicationCapabilityDomain
  */
  public static ApplicationCapabilityDomain fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationCapabilityDomain.class);
  }

 /**
  * Convert an instance of ApplicationCapabilityDomain to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

