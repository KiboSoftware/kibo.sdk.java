/*
 * Kibo Shipping Admin Service
 * OpenAPI Spec for Kibo Shipping Admin Service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.shippingadmin.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.shippingadmin.models.CarrierCredentialSetMetadataDataType;
import com.kibocommerce.sdk.shippingadmin.models.CarrierCredentialSetMetadataLocalizedContent;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.kibocommerce.sdk.common.JSON;

/**
 * The metadata for a single field on a Mozu.ShippingAdmin.Contracts.Carriers.CarrierCredentialSet.  This metadata is used during carrier installation and carrier credential set validation.
 */
@ApiModel(description = "The metadata for a single field on a Mozu.ShippingAdmin.Contracts.Carriers.CarrierCredentialSet.  This metadata is used during carrier installation and carrier credential set validation.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CarrierCredentialSetMetadata implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DATA_TYPE = "dataType";
  @SerializedName(SERIALIZED_NAME_DATA_TYPE)
  private CarrierCredentialSetMetadataDataType dataType;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required;

  public static final String SERIALIZED_NAME_LOCALIZATIONS = "localizations";
  @SerializedName(SERIALIZED_NAME_LOCALIZATIONS)
  private List<CarrierCredentialSetMetadataLocalizedContent> localizations = null;

  public CarrierCredentialSetMetadata() {
  }

  public CarrierCredentialSetMetadata name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CarrierCredentialSetMetadata dataType(CarrierCredentialSetMetadataDataType dataType) {
    
    this.dataType = dataType;
    return this;
  }

   /**
   * Get dataType
   * @return dataType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CarrierCredentialSetMetadataDataType getDataType() {
    return dataType;
  }


  public void setDataType(CarrierCredentialSetMetadataDataType dataType) {
    this.dataType = dataType;
  }


  public CarrierCredentialSetMetadata required(Boolean required) {
    
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRequired() {
    return required;
  }


  public void setRequired(Boolean required) {
    this.required = required;
  }


  public CarrierCredentialSetMetadata localizations(List<CarrierCredentialSetMetadataLocalizedContent> localizations) {
    
    this.localizations = localizations;
    return this;
  }

  public CarrierCredentialSetMetadata addLocalizationsItem(CarrierCredentialSetMetadataLocalizedContent localizationsItem) {
    if (this.localizations == null) {
      this.localizations = new ArrayList<>();
    }
    this.localizations.add(localizationsItem);
    return this;
  }

   /**
   * Get localizations
   * @return localizations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<CarrierCredentialSetMetadataLocalizedContent> getLocalizations() {
    return localizations;
  }


  public void setLocalizations(List<CarrierCredentialSetMetadataLocalizedContent> localizations) {
    this.localizations = localizations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarrierCredentialSetMetadata carrierCredentialSetMetadata = (CarrierCredentialSetMetadata) o;
    return Objects.equals(this.name, carrierCredentialSetMetadata.name) &&
        Objects.equals(this.dataType, carrierCredentialSetMetadata.dataType) &&
        Objects.equals(this.required, carrierCredentialSetMetadata.required) &&
        Objects.equals(this.localizations, carrierCredentialSetMetadata.localizations);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, dataType, required, localizations);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarrierCredentialSetMetadata {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    localizations: ").append(toIndentedString(localizations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("dataType");
    openapiFields.add("required");
    openapiFields.add("localizations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CarrierCredentialSetMetadata
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CarrierCredentialSetMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CarrierCredentialSetMetadata is not found in the empty JSON string", CarrierCredentialSetMetadata.openapiRequiredFields.toString()));
        }
      }

      // Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      // for (Entry<String, JsonElement> entry : entries) {
      //  if (!CarrierCredentialSetMetadata.openapiFields.contains(entry.getKey())) {
      //    throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CarrierCredentialSetMetadata` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
      //    }
      //  }
      
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("localizations") != null && !jsonObj.get("localizations").isJsonNull()) {
        JsonArray jsonArraylocalizations = jsonObj.getAsJsonArray("localizations");
        if (jsonArraylocalizations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("localizations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `localizations` to be an array in the JSON string but got `%s`", jsonObj.get("localizations").toString()));
          }

          // validate the optional field `localizations` (array)
          for (int i = 0; i < jsonArraylocalizations.size(); i++) {
            CarrierCredentialSetMetadataLocalizedContent.validateJsonObject(jsonArraylocalizations.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CarrierCredentialSetMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CarrierCredentialSetMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CarrierCredentialSetMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CarrierCredentialSetMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<CarrierCredentialSetMetadata>() {
           @Override
           public void write(JsonWriter out, CarrierCredentialSetMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CarrierCredentialSetMetadata read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CarrierCredentialSetMetadata given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CarrierCredentialSetMetadata
  * @throws IOException if the JSON string is invalid with respect to CarrierCredentialSetMetadata
  */
  public static CarrierCredentialSetMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CarrierCredentialSetMetadata.class);
  }

 /**
  * Convert an instance of CarrierCredentialSetMetadata to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

