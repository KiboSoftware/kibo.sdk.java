/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * OpenAPI spec version: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.inventory.model.MDeleteItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Delete Future Item Response
 */
@ApiModel(description = "Delete Future Item Response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-07T16:32:28.052447-06:00[America/Chicago]")
public class DeleteFutureItemResponse {
  public static final String SERIALIZED_NAME_DRY_RUN = "dryRun";
  @SerializedName(SERIALIZED_NAME_DRY_RUN)
  private Boolean dryRun;

  public static final String SERIALIZED_NAME_ITEMS_DELETED = "itemsDeleted";
  @SerializedName(SERIALIZED_NAME_ITEMS_DELETED)
  private List<MDeleteItem> itemsDeleted = null;

  public static final String SERIALIZED_NAME_TOTAL_INVENTORY_ENTRIES_DELETED = "totalInventoryEntriesDeleted";
  @SerializedName(SERIALIZED_NAME_TOTAL_INVENTORY_ENTRIES_DELETED)
  private Boolean totalInventoryEntriesDeleted;

  public static final String SERIALIZED_NAME_TOTAL_LOCATIONS_AFFECTED = "totalLocationsAffected";
  @SerializedName(SERIALIZED_NAME_TOTAL_LOCATIONS_AFFECTED)
  private Boolean totalLocationsAffected;

  public static final String SERIALIZED_NAME_JOB_I_DS = "jobIDs";
  @SerializedName(SERIALIZED_NAME_JOB_I_DS)
  private Boolean jobIDs;

  public DeleteFutureItemResponse dryRun(Boolean dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Flag used to differentiate between a test and a non-test run.
   * @return dryRun
  **/
  @ApiModelProperty(value = "Flag used to differentiate between a test and a non-test run.")
  public Boolean getDryRun() {
    return dryRun;
  }

  public void setDryRun(Boolean dryRun) {
    this.dryRun = dryRun;
  }

  public DeleteFutureItemResponse itemsDeleted(List<MDeleteItem> itemsDeleted) {
    this.itemsDeleted = itemsDeleted;
    return this;
  }

  public DeleteFutureItemResponse addItemsDeletedItem(MDeleteItem itemsDeletedItem) {
    if (this.itemsDeleted == null) {
      this.itemsDeleted = new ArrayList<MDeleteItem>();
    }
    this.itemsDeleted.add(itemsDeletedItem);
    return this;
  }

   /**
   * Items deleted due to the request
   * @return itemsDeleted
  **/
  @ApiModelProperty(value = "Items deleted due to the request")
  public List<MDeleteItem> getItemsDeleted() {
    return itemsDeleted;
  }

  public void setItemsDeleted(List<MDeleteItem> itemsDeleted) {
    this.itemsDeleted = itemsDeleted;
  }

  public DeleteFutureItemResponse totalInventoryEntriesDeleted(Boolean totalInventoryEntriesDeleted) {
    this.totalInventoryEntriesDeleted = totalInventoryEntriesDeleted;
    return this;
  }

   /**
   * Flag used to differentiate between a test and a non-test run.
   * @return totalInventoryEntriesDeleted
  **/
  @ApiModelProperty(value = "Flag used to differentiate between a test and a non-test run.")
  public Boolean getTotalInventoryEntriesDeleted() {
    return totalInventoryEntriesDeleted;
  }

  public void setTotalInventoryEntriesDeleted(Boolean totalInventoryEntriesDeleted) {
    this.totalInventoryEntriesDeleted = totalInventoryEntriesDeleted;
  }

  public DeleteFutureItemResponse totalLocationsAffected(Boolean totalLocationsAffected) {
    this.totalLocationsAffected = totalLocationsAffected;
    return this;
  }

   /**
   * Flag used to differentiate between a test and a non-test run.
   * @return totalLocationsAffected
  **/
  @ApiModelProperty(value = "Flag used to differentiate between a test and a non-test run.")
  public Boolean getTotalLocationsAffected() {
    return totalLocationsAffected;
  }

  public void setTotalLocationsAffected(Boolean totalLocationsAffected) {
    this.totalLocationsAffected = totalLocationsAffected;
  }

  public DeleteFutureItemResponse jobIDs(Boolean jobIDs) {
    this.jobIDs = jobIDs;
    return this;
  }

   /**
   * Flag used to differentiate between a test and a non-test run.
   * @return jobIDs
  **/
  @ApiModelProperty(value = "Flag used to differentiate between a test and a non-test run.")
  public Boolean getJobIDs() {
    return jobIDs;
  }

  public void setJobIDs(Boolean jobIDs) {
    this.jobIDs = jobIDs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeleteFutureItemResponse deleteFutureItemResponse = (DeleteFutureItemResponse) o;
    return Objects.equals(this.dryRun, deleteFutureItemResponse.dryRun) &&
        Objects.equals(this.itemsDeleted, deleteFutureItemResponse.itemsDeleted) &&
        Objects.equals(this.totalInventoryEntriesDeleted, deleteFutureItemResponse.totalInventoryEntriesDeleted) &&
        Objects.equals(this.totalLocationsAffected, deleteFutureItemResponse.totalLocationsAffected) &&
        Objects.equals(this.jobIDs, deleteFutureItemResponse.jobIDs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dryRun, itemsDeleted, totalInventoryEntriesDeleted, totalLocationsAffected, jobIDs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeleteFutureItemResponse {\n");
    
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    itemsDeleted: ").append(toIndentedString(itemsDeleted)).append("\n");
    sb.append("    totalInventoryEntriesDeleted: ").append(toIndentedString(totalInventoryEntriesDeleted)).append("\n");
    sb.append("    totalLocationsAffected: ").append(toIndentedString(totalLocationsAffected)).append("\n");
    sb.append("    jobIDs: ").append(toIndentedString(jobIDs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

