/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * OpenAPI spec version: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * An item quantity used in wave shipments
 */
@ApiModel(description = "An item quantity used in wave shipments")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-24T16:31:33.449-05:00[America/Chicago]")
public class WaveItem {
  public static final String SERIALIZED_NAME_ORDER_ITEM_I_D = "orderItemID";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_I_D)
  private Integer orderItemID;

  public static final String SERIALIZED_NAME_PART_NUMBER = "partNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public WaveItem orderItemID(Integer orderItemID) {
    this.orderItemID = orderItemID;
    return this;
  }

   /**
   * Order Item ID
   * @return orderItemID
  **/
  @ApiModelProperty(required = true, value = "Order Item ID")
  public Integer getOrderItemID() {
    return orderItemID;
  }

  public void setOrderItemID(Integer orderItemID) {
    this.orderItemID = orderItemID;
  }

  public WaveItem partNumber(String partNumber) {
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Part Number
   * @return partNumber
  **/
  @ApiModelProperty(value = "Part Number")
  public String getPartNumber() {
    return partNumber;
  }

  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }

  public WaveItem upc(String upc) {
    this.upc = upc;
    return this;
  }

   /**
   * Upc
   * @return upc
  **/
  @ApiModelProperty(value = "Upc")
  public String getUpc() {
    return upc;
  }

  public void setUpc(String upc) {
    this.upc = upc;
  }

  public WaveItem sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * SKU
   * @return sku
  **/
  @ApiModelProperty(value = "SKU")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public WaveItem quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Current Quantity of Item
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "Current Quantity of Item")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WaveItem waveItem = (WaveItem) o;
    return Objects.equals(this.orderItemID, waveItem.orderItemID) &&
        Objects.equals(this.partNumber, waveItem.partNumber) &&
        Objects.equals(this.upc, waveItem.upc) &&
        Objects.equals(this.sku, waveItem.sku) &&
        Objects.equals(this.quantity, waveItem.quantity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderItemID, partNumber, upc, sku, quantity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WaveItem {\n");
    
    sb.append("    orderItemID: ").append(toIndentedString(orderItemID)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

