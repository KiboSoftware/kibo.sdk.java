/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * OpenAPI spec version: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.inventory.model.BaseResponse;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.List;

/**
 * PendingItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-25T09:31:58.472-05:00[America/Chicago]")
public class PendingItem extends BaseResponse {
  public static final String SERIALIZED_NAME_PENDING_ITEM_I_D = "pendingItemID";
  @SerializedName(SERIALIZED_NAME_PENDING_ITEM_I_D)
  private Integer pendingItemID;

  public static final String SERIALIZED_NAME_ORDER_I_D = "orderID";
  @SerializedName(SERIALIZED_NAME_ORDER_I_D)
  private Integer orderID;

  public static final String SERIALIZED_NAME_SHIPMENT_I_D = "shipmentID";
  @SerializedName(SERIALIZED_NAME_SHIPMENT_I_D)
  private Integer shipmentID;

  /**
   * Pending Item type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    BIN("TYPE_BIN"),
    
    DC("TYPE_DC"),
    
    AUDIT("TYPE_AUDIT"),
    
    RESTOCK("TYPE_RESTOCK");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_PART_NUMBER = "partNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private String partNumber;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_PRODUCT_I_D = "productID";
  @SerializedName(SERIALIZED_NAME_PRODUCT_I_D)
  private Integer productID;

  public static final String SERIALIZED_NAME_TO_BIN = "toBin";
  @SerializedName(SERIALIZED_NAME_TO_BIN)
  private String toBin;

  public static final String SERIALIZED_NAME_TO_BIN_I_D = "toBinID";
  @SerializedName(SERIALIZED_NAME_TO_BIN_I_D)
  private Integer toBinID;

  public PendingItem pendingItemID(Integer pendingItemID) {
    this.pendingItemID = pendingItemID;
    return this;
  }

   /**
   * Pending Item Identifier
   * @return pendingItemID
  **/
  @ApiModelProperty(value = "Pending Item Identifier")
  public Integer getPendingItemID() {
    return pendingItemID;
  }

  public void setPendingItemID(Integer pendingItemID) {
    this.pendingItemID = pendingItemID;
  }

  public PendingItem orderID(Integer orderID) {
    this.orderID = orderID;
    return this;
  }

   /**
   * Order Identifier
   * @return orderID
  **/
  @ApiModelProperty(value = "Order Identifier")
  public Integer getOrderID() {
    return orderID;
  }

  public void setOrderID(Integer orderID) {
    this.orderID = orderID;
  }

  public PendingItem shipmentID(Integer shipmentID) {
    this.shipmentID = shipmentID;
    return this;
  }

   /**
   * Shipment Identifier
   * @return shipmentID
  **/
  @ApiModelProperty(value = "Shipment Identifier")
  public Integer getShipmentID() {
    return shipmentID;
  }

  public void setShipmentID(Integer shipmentID) {
    this.shipmentID = shipmentID;
  }

  public PendingItem type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Pending Item type
   * @return type
  **/
  @ApiModelProperty(value = "Pending Item type")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public PendingItem quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * The number of items affected for this log entry
   * @return quantity
  **/
  @ApiModelProperty(value = "The number of items affected for this log entry")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public PendingItem partNumber(String partNumber) {
    this.partNumber = partNumber;
    return this;
  }

   /**
   * Part/Product Number
   * @return partNumber
  **/
  @ApiModelProperty(value = "Part/Product Number")
  public String getPartNumber() {
    return partNumber;
  }

  public void setPartNumber(String partNumber) {
    this.partNumber = partNumber;
  }

  public PendingItem upc(String upc) {
    this.upc = upc;
    return this;
  }

   /**
   * Universal Product Code
   * @return upc
  **/
  @ApiModelProperty(value = "Universal Product Code")
  public String getUpc() {
    return upc;
  }

  public void setUpc(String upc) {
    this.upc = upc;
  }

  public PendingItem sku(String sku) {
    this.sku = sku;
    return this;
  }

   /**
   * Stock Keeping Unit
   * @return sku
  **/
  @ApiModelProperty(value = "Stock Keeping Unit")
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }

  public PendingItem productID(Integer productID) {
    this.productID = productID;
    return this;
  }

   /**
   * Product Identifier
   * @return productID
  **/
  @ApiModelProperty(value = "Product Identifier")
  public Integer getProductID() {
    return productID;
  }

  public void setProductID(Integer productID) {
    this.productID = productID;
  }

  public PendingItem toBin(String toBin) {
    this.toBin = toBin;
    return this;
  }

   /**
   * To Bin ID
   * @return toBin
  **/
  @ApiModelProperty(value = "To Bin ID")
  public String getToBin() {
    return toBin;
  }

  public void setToBin(String toBin) {
    this.toBin = toBin;
  }

  public PendingItem toBinID(Integer toBinID) {
    this.toBinID = toBinID;
    return this;
  }

   /**
   * To Bin ID
   * @return toBinID
  **/
  @ApiModelProperty(value = "To Bin ID")
  public Integer getToBinID() {
    return toBinID;
  }

  public void setToBinID(Integer toBinID) {
    this.toBinID = toBinID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PendingItem pendingItem = (PendingItem) o;
    return Objects.equals(this.pendingItemID, pendingItem.pendingItemID) &&
        Objects.equals(this.orderID, pendingItem.orderID) &&
        Objects.equals(this.shipmentID, pendingItem.shipmentID) &&
        Objects.equals(this.type, pendingItem.type) &&
        Objects.equals(this.quantity, pendingItem.quantity) &&
        Objects.equals(this.partNumber, pendingItem.partNumber) &&
        Objects.equals(this.upc, pendingItem.upc) &&
        Objects.equals(this.sku, pendingItem.sku) &&
        Objects.equals(this.productID, pendingItem.productID) &&
        Objects.equals(this.toBin, pendingItem.toBin) &&
        Objects.equals(this.toBinID, pendingItem.toBinID) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pendingItemID, orderID, shipmentID, type, quantity, partNumber, upc, sku, productID, toBin, toBinID, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PendingItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    pendingItemID: ").append(toIndentedString(pendingItemID)).append("\n");
    sb.append("    orderID: ").append(toIndentedString(orderID)).append("\n");
    sb.append("    shipmentID: ").append(toIndentedString(shipmentID)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    productID: ").append(toIndentedString(productID)).append("\n");
    sb.append("    toBin: ").append(toIndentedString(toBin)).append("\n");
    sb.append("    toBinID: ").append(toIndentedString(toBinID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

