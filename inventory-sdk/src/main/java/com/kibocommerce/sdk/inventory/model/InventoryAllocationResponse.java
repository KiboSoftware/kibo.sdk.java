/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * OpenAPI spec version: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * InventoryAllocationResponse Object
 */
@ApiModel(description = "InventoryAllocationResponse Object")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-07T16:32:28.052447-06:00[America/Chicago]")
public class InventoryAllocationResponse {
  public static final String SERIALIZED_NAME_ORDER_ITEM_I_D = "orderItemID";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_I_D)
  private Integer orderItemID;

  public static final String SERIALIZED_NAME_UPC = "upc";
  @SerializedName(SERIALIZED_NAME_UPC)
  private String upc;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_FUTURE_DATE = "futureDate";
  @SerializedName(SERIALIZED_NAME_FUTURE_DATE)
  private OffsetDateTime futureDate = null;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map<String, String> tags = null;

  public InventoryAllocationResponse orderItemID(Integer orderItemID) {
    this.orderItemID = orderItemID;
    return this;
  }

   /**
   * order item ID
   * @return orderItemID
  **/
  @ApiModelProperty(value = "order item ID")
  public Integer getOrderItemID() {
    return orderItemID;
  }

  public void setOrderItemID(Integer orderItemID) {
    this.orderItemID = orderItemID;
  }

  public InventoryAllocationResponse upc(String upc) {
    this.upc = upc;
    return this;
  }

   /**
   * upc
   * @return upc
  **/
  @ApiModelProperty(value = "upc")
  public String getUpc() {
    return upc;
  }

  public void setUpc(String upc) {
    this.upc = upc;
  }

  public InventoryAllocationResponse state(String state) {
    this.state = state;
    return this;
  }

   /**
   * state
   * @return state
  **/
  @ApiModelProperty(value = "state")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public InventoryAllocationResponse quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "quantity")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public InventoryAllocationResponse futureDate(OffsetDateTime futureDate) {
    this.futureDate = futureDate;
    return this;
  }

   /**
   * Future Date at which the inventory should be allocated against. Expected format &#39;2020-09-28T12:00:00-0500&#39;
   * @return futureDate
  **/
  @ApiModelProperty(value = "Future Date at which the inventory should be allocated against. Expected format '2020-09-28T12:00:00-0500'")
  public OffsetDateTime getFutureDate() {
    return futureDate;
  }

  public void setFutureDate(OffsetDateTime futureDate) {
    this.futureDate = futureDate;
  }

  public InventoryAllocationResponse tags(Map<String, String> tags) {
    this.tags = tags;
    return this;
  }

  public InventoryAllocationResponse putTagsItem(String key, String tagsItem) {
    if (this.tags == null) {
      this.tags = new HashMap<String, String>();
    }
    this.tags.put(key, tagsItem);
    return this;
  }

   /**
   * Associative Map of &lt;String, String&gt; for tagCategoryName &#x3D;&gt; tagName
   * @return tags
  **/
  @ApiModelProperty(value = "Associative Map of <String, String> for tagCategoryName => tagName")
  public Map<String, String> getTags() {
    return tags;
  }

  public void setTags(Map<String, String> tags) {
    this.tags = tags;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventoryAllocationResponse inventoryAllocationResponse = (InventoryAllocationResponse) o;
    return Objects.equals(this.orderItemID, inventoryAllocationResponse.orderItemID) &&
        Objects.equals(this.upc, inventoryAllocationResponse.upc) &&
        Objects.equals(this.state, inventoryAllocationResponse.state) &&
        Objects.equals(this.quantity, inventoryAllocationResponse.quantity) &&
        Objects.equals(this.futureDate, inventoryAllocationResponse.futureDate) &&
        Objects.equals(this.tags, inventoryAllocationResponse.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderItemID, upc, state, quantity, futureDate, tags);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventoryAllocationResponse {\n");
    
    sb.append("    orderItemID: ").append(toIndentedString(orderItemID)).append("\n");
    sb.append("    upc: ").append(toIndentedString(upc)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    futureDate: ").append(toIndentedString(futureDate)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

