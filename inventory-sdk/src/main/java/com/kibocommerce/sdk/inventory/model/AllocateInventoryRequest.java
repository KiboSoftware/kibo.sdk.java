/*
 * Inventory
 * Swagger JSON for inventory apis
 *
 * OpenAPI spec version: 5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kibocommerce.sdk.inventory.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kibocommerce.sdk.inventory.model.AllocateItem;
import com.kibocommerce.sdk.inventory.model.BaseRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * AllocateInventoryRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-25T09:31:58.472-05:00[America/Chicago]")
public class AllocateInventoryRequest extends BaseRequest {
  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<AllocateItem> items = new ArrayList<AllocateItem>();

  public static final String SERIALIZED_NAME_ORDER_DATE = "orderDate";
  @SerializedName(SERIALIZED_NAME_ORDER_DATE)
  private String orderDate;

  public static final String SERIALIZED_NAME_ORDER_WEIGHT = "orderWeight";
  @SerializedName(SERIALIZED_NAME_ORDER_WEIGHT)
  private Integer orderWeight;

  public static final String SERIALIZED_NAME_DECREMENT_ON_HAND_ON_DEALLOCATE = "decrementOnHandOnDeallocate";
  @SerializedName(SERIALIZED_NAME_DECREMENT_ON_HAND_ON_DEALLOCATE)
  private Boolean decrementOnHandOnDeallocate;

  public AllocateInventoryRequest items(List<AllocateItem> items) {
    this.items = items;
    return this;
  }

  public AllocateInventoryRequest addItemsItem(AllocateItem itemsItem) {
    this.items.add(itemsItem);
    return this;
  }

   /**
   * list of AllocateItems
   * @return items
  **/
  @ApiModelProperty(required = true, value = "list of AllocateItems")
  public List<AllocateItem> getItems() {
    return items;
  }

  public void setItems(List<AllocateItem> items) {
    this.items = items;
  }

  public AllocateInventoryRequest orderDate(String orderDate) {
    this.orderDate = orderDate;
    return this;
  }

   /**
   * order date
   * @return orderDate
  **/
  @ApiModelProperty(value = "order date")
  public String getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(String orderDate) {
    this.orderDate = orderDate;
  }

  public AllocateInventoryRequest orderWeight(Integer orderWeight) {
    this.orderWeight = orderWeight;
    return this;
  }

   /**
   * order weight
   * @return orderWeight
  **/
  @ApiModelProperty(value = "order weight")
  public Integer getOrderWeight() {
    return orderWeight;
  }

  public void setOrderWeight(Integer orderWeight) {
    this.orderWeight = orderWeight;
  }

  public AllocateInventoryRequest decrementOnHandOnDeallocate(Boolean decrementOnHandOnDeallocate) {
    this.decrementOnHandOnDeallocate = decrementOnHandOnDeallocate;
    return this;
  }

   /**
   * flag to determine deallocation on decrements
   * @return decrementOnHandOnDeallocate
  **/
  @ApiModelProperty(value = "flag to determine deallocation on decrements")
  public Boolean getDecrementOnHandOnDeallocate() {
    return decrementOnHandOnDeallocate;
  }

  public void setDecrementOnHandOnDeallocate(Boolean decrementOnHandOnDeallocate) {
    this.decrementOnHandOnDeallocate = decrementOnHandOnDeallocate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllocateInventoryRequest allocateInventoryRequest = (AllocateInventoryRequest) o;
    return Objects.equals(this.items, allocateInventoryRequest.items) &&
        Objects.equals(this.orderDate, allocateInventoryRequest.orderDate) &&
        Objects.equals(this.orderWeight, allocateInventoryRequest.orderWeight) &&
        Objects.equals(this.decrementOnHandOnDeallocate, allocateInventoryRequest.decrementOnHandOnDeallocate) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, orderDate, orderWeight, decrementOnHandOnDeallocate, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllocateInventoryRequest {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    orderWeight: ").append(toIndentedString(orderWeight)).append("\n");
    sb.append("    decrementOnHandOnDeallocate: ").append(toIndentedString(decrementOnHandOnDeallocate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

